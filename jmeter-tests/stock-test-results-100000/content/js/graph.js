/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 4332.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 7.0], [25.8, 7.0], [25.9, 7.0], [26.0, 7.0], [26.1, 7.0], [26.2, 7.0], [26.3, 7.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 9.0], [27.0, 9.0], [27.1, 9.0], [27.2, 9.0], [27.3, 9.0], [27.4, 10.0], [27.5, 10.0], [27.6, 10.0], [27.7, 10.0], [27.8, 10.0], [27.9, 11.0], [28.0, 11.0], [28.1, 11.0], [28.2, 11.0], [28.3, 11.0], [28.4, 12.0], [28.5, 12.0], [28.6, 12.0], [28.7, 12.0], [28.8, 12.0], [28.9, 12.0], [29.0, 13.0], [29.1, 13.0], [29.2, 13.0], [29.3, 13.0], [29.4, 13.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 15.0], [30.1, 15.0], [30.2, 15.0], [30.3, 15.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 16.0], [31.0, 16.0], [31.1, 16.0], [31.2, 16.0], [31.3, 16.0], [31.4, 16.0], [31.5, 16.0], [31.6, 16.0], [31.7, 16.0], [31.8, 16.0], [31.9, 16.0], [32.0, 16.0], [32.1, 16.0], [32.2, 16.0], [32.3, 16.0], [32.4, 16.0], [32.5, 16.0], [32.6, 16.0], [32.7, 16.0], [32.8, 16.0], [32.9, 16.0], [33.0, 16.0], [33.1, 16.0], [33.2, 16.0], [33.3, 16.0], [33.4, 16.0], [33.5, 16.0], [33.6, 16.0], [33.7, 17.0], [33.8, 17.0], [33.9, 17.0], [34.0, 17.0], [34.1, 17.0], [34.2, 17.0], [34.3, 17.0], [34.4, 17.0], [34.5, 17.0], [34.6, 17.0], [34.7, 17.0], [34.8, 17.0], [34.9, 17.0], [35.0, 17.0], [35.1, 17.0], [35.2, 17.0], [35.3, 17.0], [35.4, 17.0], [35.5, 17.0], [35.6, 17.0], [35.7, 17.0], [35.8, 17.0], [35.9, 17.0], [36.0, 17.0], [36.1, 17.0], [36.2, 17.0], [36.3, 17.0], [36.4, 17.0], [36.5, 17.0], [36.6, 17.0], [36.7, 17.0], [36.8, 17.0], [36.9, 17.0], [37.0, 17.0], [37.1, 17.0], [37.2, 17.0], [37.3, 17.0], [37.4, 17.0], [37.5, 17.0], [37.6, 17.0], [37.7, 17.0], [37.8, 17.0], [37.9, 17.0], [38.0, 17.0], [38.1, 17.0], [38.2, 17.0], [38.3, 17.0], [38.4, 17.0], [38.5, 17.0], [38.6, 17.0], [38.7, 17.0], [38.8, 17.0], [38.9, 18.0], [39.0, 18.0], [39.1, 18.0], [39.2, 18.0], [39.3, 18.0], [39.4, 18.0], [39.5, 18.0], [39.6, 18.0], [39.7, 18.0], [39.8, 18.0], [39.9, 18.0], [40.0, 18.0], [40.1, 18.0], [40.2, 18.0], [40.3, 18.0], [40.4, 18.0], [40.5, 18.0], [40.6, 18.0], [40.7, 18.0], [40.8, 18.0], [40.9, 18.0], [41.0, 18.0], [41.1, 18.0], [41.2, 18.0], [41.3, 18.0], [41.4, 18.0], [41.5, 18.0], [41.6, 18.0], [41.7, 18.0], [41.8, 18.0], [41.9, 18.0], [42.0, 18.0], [42.1, 18.0], [42.2, 18.0], [42.3, 18.0], [42.4, 18.0], [42.5, 18.0], [42.6, 18.0], [42.7, 18.0], [42.8, 18.0], [42.9, 18.0], [43.0, 18.0], [43.1, 18.0], [43.2, 18.0], [43.3, 18.0], [43.4, 18.0], [43.5, 18.0], [43.6, 19.0], [43.7, 19.0], [43.8, 19.0], [43.9, 19.0], [44.0, 19.0], [44.1, 19.0], [44.2, 19.0], [44.3, 19.0], [44.4, 19.0], [44.5, 19.0], [44.6, 19.0], [44.7, 19.0], [44.8, 19.0], [44.9, 19.0], [45.0, 19.0], [45.1, 19.0], [45.2, 19.0], [45.3, 19.0], [45.4, 19.0], [45.5, 19.0], [45.6, 19.0], [45.7, 19.0], [45.8, 19.0], [45.9, 19.0], [46.0, 19.0], [46.1, 19.0], [46.2, 19.0], [46.3, 19.0], [46.4, 19.0], [46.5, 19.0], [46.6, 19.0], [46.7, 20.0], [46.8, 20.0], [46.9, 20.0], [47.0, 20.0], [47.1, 20.0], [47.2, 20.0], [47.3, 20.0], [47.4, 20.0], [47.5, 20.0], [47.6, 20.0], [47.7, 20.0], [47.8, 20.0], [47.9, 20.0], [48.0, 20.0], [48.1, 20.0], [48.2, 20.0], [48.3, 20.0], [48.4, 20.0], [48.5, 20.0], [48.6, 20.0], [48.7, 21.0], [48.8, 21.0], [48.9, 21.0], [49.0, 21.0], [49.1, 21.0], [49.2, 21.0], [49.3, 21.0], [49.4, 21.0], [49.5, 21.0], [49.6, 21.0], [49.7, 21.0], [49.8, 21.0], [49.9, 21.0], [50.0, 21.0], [50.1, 21.0], [50.2, 22.0], [50.3, 22.0], [50.4, 22.0], [50.5, 22.0], [50.6, 22.0], [50.7, 22.0], [50.8, 22.0], [50.9, 22.0], [51.0, 22.0], [51.1, 22.0], [51.2, 22.0], [51.3, 22.0], [51.4, 23.0], [51.5, 23.0], [51.6, 23.0], [51.7, 23.0], [51.8, 23.0], [51.9, 23.0], [52.0, 23.0], [52.1, 23.0], [52.2, 23.0], [52.3, 23.0], [52.4, 24.0], [52.5, 24.0], [52.6, 24.0], [52.7, 24.0], [52.8, 24.0], [52.9, 24.0], [53.0, 24.0], [53.1, 24.0], [53.2, 24.0], [53.3, 24.0], [53.4, 24.0], [53.5, 25.0], [53.6, 25.0], [53.7, 25.0], [53.8, 25.0], [53.9, 25.0], [54.0, 25.0], [54.1, 25.0], [54.2, 25.0], [54.3, 25.0], [54.4, 26.0], [54.5, 26.0], [54.6, 26.0], [54.7, 26.0], [54.8, 26.0], [54.9, 26.0], [55.0, 26.0], [55.1, 26.0], [55.2, 27.0], [55.3, 27.0], [55.4, 27.0], [55.5, 27.0], [55.6, 27.0], [55.7, 27.0], [55.8, 27.0], [55.9, 27.0], [56.0, 28.0], [56.1, 28.0], [56.2, 28.0], [56.3, 28.0], [56.4, 28.0], [56.5, 28.0], [56.6, 28.0], [56.7, 29.0], [56.8, 29.0], [56.9, 29.0], [57.0, 29.0], [57.1, 29.0], [57.2, 29.0], [57.3, 30.0], [57.4, 30.0], [57.5, 30.0], [57.6, 30.0], [57.7, 30.0], [57.8, 30.0], [57.9, 30.0], [58.0, 31.0], [58.1, 31.0], [58.2, 31.0], [58.3, 31.0], [58.4, 31.0], [58.5, 31.0], [58.6, 32.0], [58.7, 32.0], [58.8, 32.0], [58.9, 32.0], [59.0, 32.0], [59.1, 33.0], [59.2, 33.0], [59.3, 33.0], [59.4, 33.0], [59.5, 33.0], [59.6, 34.0], [59.7, 34.0], [59.8, 34.0], [59.9, 34.0], [60.0, 34.0], [60.1, 35.0], [60.2, 35.0], [60.3, 35.0], [60.4, 35.0], [60.5, 36.0], [60.6, 36.0], [60.7, 36.0], [60.8, 36.0], [60.9, 37.0], [61.0, 37.0], [61.1, 37.0], [61.2, 37.0], [61.3, 38.0], [61.4, 38.0], [61.5, 38.0], [61.6, 39.0], [61.7, 39.0], [61.8, 39.0], [61.9, 39.0], [62.0, 40.0], [62.1, 40.0], [62.2, 40.0], [62.3, 41.0], [62.4, 41.0], [62.5, 41.0], [62.6, 42.0], [62.7, 42.0], [62.8, 42.0], [62.9, 43.0], [63.0, 43.0], [63.1, 43.0], [63.2, 44.0], [63.3, 44.0], [63.4, 44.0], [63.5, 45.0], [63.6, 45.0], [63.7, 45.0], [63.8, 45.0], [63.9, 46.0], [64.0, 46.0], [64.1, 46.0], [64.2, 47.0], [64.3, 47.0], [64.4, 47.0], [64.5, 48.0], [64.6, 48.0], [64.7, 49.0], [64.8, 49.0], [64.9, 49.0], [65.0, 50.0], [65.1, 50.0], [65.2, 50.0], [65.3, 51.0], [65.4, 51.0], [65.5, 52.0], [65.6, 52.0], [65.7, 53.0], [65.8, 53.0], [65.9, 53.0], [66.0, 54.0], [66.1, 54.0], [66.2, 54.0], [66.3, 55.0], [66.4, 55.0], [66.5, 56.0], [66.6, 56.0], [66.7, 57.0], [66.8, 57.0], [66.9, 58.0], [67.0, 58.0], [67.1, 59.0], [67.2, 59.0], [67.3, 60.0], [67.4, 60.0], [67.5, 60.0], [67.6, 61.0], [67.7, 61.0], [67.8, 62.0], [67.9, 62.0], [68.0, 63.0], [68.1, 63.0], [68.2, 64.0], [68.3, 64.0], [68.4, 64.0], [68.5, 65.0], [68.6, 65.0], [68.7, 66.0], [68.8, 66.0], [68.9, 66.0], [69.0, 67.0], [69.1, 67.0], [69.2, 68.0], [69.3, 68.0], [69.4, 69.0], [69.5, 69.0], [69.6, 70.0], [69.7, 70.0], [69.8, 71.0], [69.9, 71.0], [70.0, 72.0], [70.1, 72.0], [70.2, 73.0], [70.3, 73.0], [70.4, 74.0], [70.5, 74.0], [70.6, 75.0], [70.7, 75.0], [70.8, 76.0], [70.9, 76.0], [71.0, 77.0], [71.1, 77.0], [71.2, 78.0], [71.3, 79.0], [71.4, 79.0], [71.5, 80.0], [71.6, 81.0], [71.7, 81.0], [71.8, 82.0], [71.9, 82.0], [72.0, 83.0], [72.1, 83.0], [72.2, 84.0], [72.3, 84.0], [72.4, 85.0], [72.5, 86.0], [72.6, 86.0], [72.7, 87.0], [72.8, 87.0], [72.9, 88.0], [73.0, 89.0], [73.1, 89.0], [73.2, 90.0], [73.3, 91.0], [73.4, 91.0], [73.5, 92.0], [73.6, 92.0], [73.7, 93.0], [73.8, 94.0], [73.9, 94.0], [74.0, 95.0], [74.1, 96.0], [74.2, 96.0], [74.3, 97.0], [74.4, 98.0], [74.5, 98.0], [74.6, 99.0], [74.7, 100.0], [74.8, 100.0], [74.9, 101.0], [75.0, 102.0], [75.1, 103.0], [75.2, 103.0], [75.3, 104.0], [75.4, 105.0], [75.5, 105.0], [75.6, 106.0], [75.7, 107.0], [75.8, 107.0], [75.9, 108.0], [76.0, 109.0], [76.1, 109.0], [76.2, 110.0], [76.3, 111.0], [76.4, 112.0], [76.5, 112.0], [76.6, 113.0], [76.7, 114.0], [76.8, 115.0], [76.9, 115.0], [77.0, 116.0], [77.1, 117.0], [77.2, 118.0], [77.3, 118.0], [77.4, 119.0], [77.5, 120.0], [77.6, 120.0], [77.7, 121.0], [77.8, 122.0], [77.9, 123.0], [78.0, 123.0], [78.1, 124.0], [78.2, 125.0], [78.3, 126.0], [78.4, 126.0], [78.5, 127.0], [78.6, 128.0], [78.7, 129.0], [78.8, 130.0], [78.9, 131.0], [79.0, 131.0], [79.1, 132.0], [79.2, 133.0], [79.3, 134.0], [79.4, 135.0], [79.5, 136.0], [79.6, 137.0], [79.7, 137.0], [79.8, 138.0], [79.9, 139.0], [80.0, 140.0], [80.1, 141.0], [80.2, 142.0], [80.3, 143.0], [80.4, 144.0], [80.5, 145.0], [80.6, 146.0], [80.7, 146.0], [80.8, 147.0], [80.9, 148.0], [81.0, 149.0], [81.1, 150.0], [81.2, 151.0], [81.3, 152.0], [81.4, 153.0], [81.5, 154.0], [81.6, 155.0], [81.7, 156.0], [81.8, 157.0], [81.9, 159.0], [82.0, 159.0], [82.1, 160.0], [82.2, 162.0], [82.3, 163.0], [82.4, 164.0], [82.5, 165.0], [82.6, 166.0], [82.7, 168.0], [82.8, 169.0], [82.9, 170.0], [83.0, 172.0], [83.1, 173.0], [83.2, 175.0], [83.3, 176.0], [83.4, 177.0], [83.5, 179.0], [83.6, 181.0], [83.7, 182.0], [83.8, 183.0], [83.9, 185.0], [84.0, 186.0], [84.1, 188.0], [84.2, 190.0], [84.3, 191.0], [84.4, 193.0], [84.5, 195.0], [84.6, 196.0], [84.7, 198.0], [84.8, 200.0], [84.9, 201.0], [85.0, 203.0], [85.1, 205.0], [85.2, 206.0], [85.3, 208.0], [85.4, 210.0], [85.5, 212.0], [85.6, 214.0], [85.7, 215.0], [85.8, 217.0], [85.9, 219.0], [86.0, 221.0], [86.1, 223.0], [86.2, 225.0], [86.3, 228.0], [86.4, 230.0], [86.5, 232.0], [86.6, 234.0], [86.7, 236.0], [86.8, 238.0], [86.9, 240.0], [87.0, 242.0], [87.1, 245.0], [87.2, 247.0], [87.3, 249.0], [87.4, 251.0], [87.5, 254.0], [87.6, 256.0], [87.7, 259.0], [87.8, 261.0], [87.9, 264.0], [88.0, 266.0], [88.1, 269.0], [88.2, 271.0], [88.3, 274.0], [88.4, 276.0], [88.5, 279.0], [88.6, 282.0], [88.7, 285.0], [88.8, 288.0], [88.9, 290.0], [89.0, 293.0], [89.1, 296.0], [89.2, 298.0], [89.3, 301.0], [89.4, 305.0], [89.5, 307.0], [89.6, 311.0], [89.7, 313.0], [89.8, 317.0], [89.9, 320.0], [90.0, 323.0], [90.1, 325.0], [90.2, 328.0], [90.3, 332.0], [90.4, 335.0], [90.5, 339.0], [90.6, 342.0], [90.7, 345.0], [90.8, 349.0], [90.9, 352.0], [91.0, 356.0], [91.1, 360.0], [91.2, 363.0], [91.3, 367.0], [91.4, 371.0], [91.5, 375.0], [91.6, 380.0], [91.7, 384.0], [91.8, 388.0], [91.9, 392.0], [92.0, 397.0], [92.1, 401.0], [92.2, 405.0], [92.3, 409.0], [92.4, 414.0], [92.5, 418.0], [92.6, 422.0], [92.7, 427.0], [92.8, 431.0], [92.9, 435.0], [93.0, 440.0], [93.1, 444.0], [93.2, 449.0], [93.3, 454.0], [93.4, 459.0], [93.5, 465.0], [93.6, 470.0], [93.7, 477.0], [93.8, 484.0], [93.9, 490.0], [94.0, 497.0], [94.1, 504.0], [94.2, 511.0], [94.3, 518.0], [94.4, 525.0], [94.5, 532.0], [94.6, 540.0], [94.7, 547.0], [94.8, 555.0], [94.9, 563.0], [95.0, 571.0], [95.1, 579.0], [95.2, 588.0], [95.3, 596.0], [95.4, 603.0], [95.5, 613.0], [95.6, 625.0], [95.7, 633.0], [95.8, 643.0], [95.9, 653.0], [96.0, 664.0], [96.1, 675.0], [96.2, 690.0], [96.3, 705.0], [96.4, 720.0], [96.5, 734.0], [96.6, 749.0], [96.7, 763.0], [96.8, 777.0], [96.9, 790.0], [97.0, 803.0], [97.1, 816.0], [97.2, 828.0], [97.3, 841.0], [97.4, 855.0], [97.5, 870.0], [97.6, 884.0], [97.7, 899.0], [97.8, 916.0], [97.9, 929.0], [98.0, 945.0], [98.1, 959.0], [98.2, 976.0], [98.3, 991.0], [98.4, 1007.0], [98.5, 1030.0], [98.6, 1048.0], [98.7, 1062.0], [98.8, 1081.0], [98.9, 1101.0], [99.0, 1119.0], [99.1, 1143.0], [99.2, 1169.0], [99.3, 1196.0], [99.4, 1226.0], [99.5, 1265.0], [99.6, 1308.0], [99.7, 1367.0], [99.8, 1440.0], [99.9, 1546.0], [100.0, 2525.0]], "isOverall": false, "label": "Create pharmacy", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 5.0], [25.2, 5.0], [25.3, 5.0], [25.4, 5.0], [25.5, 5.0], [25.6, 5.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 7.0], [26.3, 7.0], [26.4, 7.0], [26.5, 7.0], [26.6, 7.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 9.0], [27.2, 9.0], [27.3, 9.0], [27.4, 9.0], [27.5, 10.0], [27.6, 10.0], [27.7, 10.0], [27.8, 10.0], [27.9, 11.0], [28.0, 11.0], [28.1, 11.0], [28.2, 12.0], [28.3, 12.0], [28.4, 12.0], [28.5, 12.0], [28.6, 12.0], [28.7, 13.0], [28.8, 13.0], [28.9, 13.0], [29.0, 13.0], [29.1, 13.0], [29.2, 13.0], [29.3, 13.0], [29.4, 13.0], [29.5, 14.0], [29.6, 14.0], [29.7, 14.0], [29.8, 14.0], [29.9, 14.0], [30.0, 14.0], [30.1, 14.0], [30.2, 14.0], [30.3, 14.0], [30.4, 14.0], [30.5, 14.0], [30.6, 14.0], [30.7, 14.0], [30.8, 14.0], [30.9, 14.0], [31.0, 14.0], [31.1, 14.0], [31.2, 14.0], [31.3, 14.0], [31.4, 14.0], [31.5, 14.0], [31.6, 14.0], [31.7, 14.0], [31.8, 14.0], [31.9, 14.0], [32.0, 14.0], [32.1, 14.0], [32.2, 14.0], [32.3, 15.0], [32.4, 15.0], [32.5, 15.0], [32.6, 15.0], [32.7, 15.0], [32.8, 15.0], [32.9, 15.0], [33.0, 15.0], [33.1, 15.0], [33.2, 15.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 15.0], [33.9, 15.0], [34.0, 15.0], [34.1, 15.0], [34.2, 15.0], [34.3, 15.0], [34.4, 15.0], [34.5, 15.0], [34.6, 15.0], [34.7, 15.0], [34.8, 15.0], [34.9, 15.0], [35.0, 15.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 16.0], [38.0, 16.0], [38.1, 16.0], [38.2, 16.0], [38.3, 16.0], [38.4, 16.0], [38.5, 16.0], [38.6, 16.0], [38.7, 16.0], [38.8, 16.0], [38.9, 16.0], [39.0, 16.0], [39.1, 16.0], [39.2, 16.0], [39.3, 16.0], [39.4, 16.0], [39.5, 16.0], [39.6, 16.0], [39.7, 16.0], [39.8, 16.0], [39.9, 16.0], [40.0, 16.0], [40.1, 16.0], [40.2, 16.0], [40.3, 16.0], [40.4, 16.0], [40.5, 16.0], [40.6, 16.0], [40.7, 16.0], [40.8, 16.0], [40.9, 16.0], [41.0, 16.0], [41.1, 16.0], [41.2, 16.0], [41.3, 16.0], [41.4, 16.0], [41.5, 16.0], [41.6, 16.0], [41.7, 16.0], [41.8, 16.0], [41.9, 16.0], [42.0, 16.0], [42.1, 16.0], [42.2, 16.0], [42.3, 16.0], [42.4, 16.0], [42.5, 16.0], [42.6, 16.0], [42.7, 16.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 16.0], [43.3, 17.0], [43.4, 17.0], [43.5, 17.0], [43.6, 17.0], [43.7, 17.0], [43.8, 17.0], [43.9, 17.0], [44.0, 17.0], [44.1, 17.0], [44.2, 17.0], [44.3, 17.0], [44.4, 17.0], [44.5, 17.0], [44.6, 17.0], [44.7, 17.0], [44.8, 17.0], [44.9, 17.0], [45.0, 17.0], [45.1, 17.0], [45.2, 17.0], [45.3, 17.0], [45.4, 17.0], [45.5, 17.0], [45.6, 17.0], [45.7, 17.0], [45.8, 17.0], [45.9, 17.0], [46.0, 17.0], [46.1, 17.0], [46.2, 17.0], [46.3, 17.0], [46.4, 17.0], [46.5, 18.0], [46.6, 18.0], [46.7, 18.0], [46.8, 18.0], [46.9, 18.0], [47.0, 18.0], [47.1, 18.0], [47.2, 18.0], [47.3, 18.0], [47.4, 18.0], [47.5, 18.0], [47.6, 18.0], [47.7, 18.0], [47.8, 18.0], [47.9, 18.0], [48.0, 18.0], [48.1, 18.0], [48.2, 18.0], [48.3, 18.0], [48.4, 19.0], [48.5, 19.0], [48.6, 19.0], [48.7, 19.0], [48.8, 19.0], [48.9, 19.0], [49.0, 19.0], [49.1, 19.0], [49.2, 19.0], [49.3, 19.0], [49.4, 19.0], [49.5, 19.0], [49.6, 20.0], [49.7, 20.0], [49.8, 20.0], [49.9, 20.0], [50.0, 20.0], [50.1, 20.0], [50.2, 20.0], [50.3, 20.0], [50.4, 20.0], [50.5, 21.0], [50.6, 21.0], [50.7, 21.0], [50.8, 21.0], [50.9, 21.0], [51.0, 21.0], [51.1, 21.0], [51.2, 22.0], [51.3, 22.0], [51.4, 22.0], [51.5, 22.0], [51.6, 22.0], [51.7, 22.0], [51.8, 23.0], [51.9, 23.0], [52.0, 23.0], [52.1, 23.0], [52.2, 23.0], [52.3, 23.0], [52.4, 24.0], [52.5, 24.0], [52.6, 24.0], [52.7, 24.0], [52.8, 25.0], [52.9, 25.0], [53.0, 25.0], [53.1, 25.0], [53.2, 26.0], [53.3, 26.0], [53.4, 26.0], [53.5, 26.0], [53.6, 27.0], [53.7, 27.0], [53.8, 27.0], [53.9, 27.0], [54.0, 28.0], [54.1, 28.0], [54.2, 28.0], [54.3, 28.0], [54.4, 29.0], [54.5, 29.0], [54.6, 29.0], [54.7, 30.0], [54.8, 30.0], [54.9, 30.0], [55.0, 31.0], [55.1, 31.0], [55.2, 31.0], [55.3, 32.0], [55.4, 32.0], [55.5, 32.0], [55.6, 33.0], [55.7, 33.0], [55.8, 33.0], [55.9, 34.0], [56.0, 34.0], [56.1, 34.0], [56.2, 35.0], [56.3, 35.0], [56.4, 36.0], [56.5, 36.0], [56.6, 36.0], [56.7, 37.0], [56.8, 37.0], [56.9, 37.0], [57.0, 38.0], [57.1, 38.0], [57.2, 38.0], [57.3, 39.0], [57.4, 39.0], [57.5, 40.0], [57.6, 40.0], [57.7, 40.0], [57.8, 41.0], [57.9, 41.0], [58.0, 41.0], [58.1, 42.0], [58.2, 42.0], [58.3, 42.0], [58.4, 43.0], [58.5, 43.0], [58.6, 43.0], [58.7, 44.0], [58.8, 44.0], [58.9, 45.0], [59.0, 45.0], [59.1, 45.0], [59.2, 46.0], [59.3, 46.0], [59.4, 47.0], [59.5, 47.0], [59.6, 47.0], [59.7, 48.0], [59.8, 48.0], [59.9, 48.0], [60.0, 49.0], [60.1, 49.0], [60.2, 50.0], [60.3, 50.0], [60.4, 51.0], [60.5, 51.0], [60.6, 51.0], [60.7, 52.0], [60.8, 52.0], [60.9, 52.0], [61.0, 53.0], [61.1, 53.0], [61.2, 54.0], [61.3, 54.0], [61.4, 55.0], [61.5, 55.0], [61.6, 55.0], [61.7, 56.0], [61.8, 56.0], [61.9, 57.0], [62.0, 57.0], [62.1, 57.0], [62.2, 58.0], [62.3, 58.0], [62.4, 59.0], [62.5, 59.0], [62.6, 60.0], [62.7, 60.0], [62.8, 60.0], [62.9, 61.0], [63.0, 61.0], [63.1, 62.0], [63.2, 62.0], [63.3, 63.0], [63.4, 63.0], [63.5, 64.0], [63.6, 64.0], [63.7, 65.0], [63.8, 65.0], [63.9, 66.0], [64.0, 66.0], [64.1, 66.0], [64.2, 67.0], [64.3, 67.0], [64.4, 68.0], [64.5, 68.0], [64.6, 69.0], [64.7, 69.0], [64.8, 70.0], [64.9, 70.0], [65.0, 71.0], [65.1, 71.0], [65.2, 72.0], [65.3, 72.0], [65.4, 73.0], [65.5, 73.0], [65.6, 74.0], [65.7, 74.0], [65.8, 75.0], [65.9, 75.0], [66.0, 75.0], [66.1, 76.0], [66.2, 77.0], [66.3, 77.0], [66.4, 78.0], [66.5, 78.0], [66.6, 79.0], [66.7, 79.0], [66.8, 80.0], [66.9, 80.0], [67.0, 81.0], [67.1, 81.0], [67.2, 82.0], [67.3, 82.0], [67.4, 83.0], [67.5, 83.0], [67.6, 84.0], [67.7, 84.0], [67.8, 85.0], [67.9, 86.0], [68.0, 86.0], [68.1, 87.0], [68.2, 87.0], [68.3, 88.0], [68.4, 88.0], [68.5, 89.0], [68.6, 89.0], [68.7, 90.0], [68.8, 91.0], [68.9, 91.0], [69.0, 92.0], [69.1, 92.0], [69.2, 93.0], [69.3, 94.0], [69.4, 94.0], [69.5, 95.0], [69.6, 96.0], [69.7, 96.0], [69.8, 97.0], [69.9, 98.0], [70.0, 98.0], [70.1, 99.0], [70.2, 99.0], [70.3, 100.0], [70.4, 101.0], [70.5, 101.0], [70.6, 102.0], [70.7, 103.0], [70.8, 103.0], [70.9, 104.0], [71.0, 105.0], [71.1, 106.0], [71.2, 106.0], [71.3, 107.0], [71.4, 107.0], [71.5, 108.0], [71.6, 109.0], [71.7, 109.0], [71.8, 110.0], [71.9, 111.0], [72.0, 111.0], [72.1, 112.0], [72.2, 113.0], [72.3, 113.0], [72.4, 114.0], [72.5, 115.0], [72.6, 115.0], [72.7, 116.0], [72.8, 117.0], [72.9, 118.0], [73.0, 118.0], [73.1, 119.0], [73.2, 120.0], [73.3, 121.0], [73.4, 121.0], [73.5, 122.0], [73.6, 123.0], [73.7, 124.0], [73.8, 124.0], [73.9, 125.0], [74.0, 126.0], [74.1, 127.0], [74.2, 127.0], [74.3, 128.0], [74.4, 129.0], [74.5, 130.0], [74.6, 131.0], [74.7, 131.0], [74.8, 132.0], [74.9, 133.0], [75.0, 134.0], [75.1, 135.0], [75.2, 136.0], [75.3, 136.0], [75.4, 137.0], [75.5, 138.0], [75.6, 139.0], [75.7, 140.0], [75.8, 141.0], [75.9, 141.0], [76.0, 142.0], [76.1, 143.0], [76.2, 144.0], [76.3, 145.0], [76.4, 146.0], [76.5, 147.0], [76.6, 148.0], [76.7, 149.0], [76.8, 150.0], [76.9, 151.0], [77.0, 152.0], [77.1, 153.0], [77.2, 154.0], [77.3, 155.0], [77.4, 156.0], [77.5, 157.0], [77.6, 159.0], [77.7, 160.0], [77.8, 161.0], [77.9, 163.0], [78.0, 164.0], [78.1, 166.0], [78.2, 167.0], [78.3, 168.0], [78.4, 170.0], [78.5, 172.0], [78.6, 174.0], [78.7, 175.0], [78.8, 177.0], [78.9, 179.0], [79.0, 181.0], [79.1, 182.0], [79.2, 185.0], [79.3, 187.0], [79.4, 189.0], [79.5, 191.0], [79.6, 193.0], [79.7, 195.0], [79.8, 197.0], [79.9, 199.0], [80.0, 201.0], [80.1, 203.0], [80.2, 205.0], [80.3, 207.0], [80.4, 209.0], [80.5, 211.0], [80.6, 214.0], [80.7, 216.0], [80.8, 219.0], [80.9, 221.0], [81.0, 224.0], [81.1, 227.0], [81.2, 230.0], [81.3, 234.0], [81.4, 237.0], [81.5, 241.0], [81.6, 245.0], [81.7, 248.0], [81.8, 253.0], [81.9, 257.0], [82.0, 262.0], [82.1, 267.0], [82.2, 271.0], [82.3, 276.0], [82.4, 282.0], [82.5, 288.0], [82.6, 294.0], [82.7, 300.0], [82.8, 307.0], [82.9, 313.0], [83.0, 318.0], [83.1, 326.0], [83.2, 332.0], [83.3, 339.0], [83.4, 347.0], [83.5, 354.0], [83.6, 362.0], [83.7, 368.0], [83.8, 374.0], [83.9, 382.0], [84.0, 388.0], [84.1, 395.0], [84.2, 402.0], [84.3, 409.0], [84.4, 415.0], [84.5, 422.0], [84.6, 428.0], [84.7, 435.0], [84.8, 441.0], [84.9, 448.0], [85.0, 455.0], [85.1, 463.0], [85.2, 471.0], [85.3, 478.0], [85.4, 486.0], [85.5, 492.0], [85.6, 500.0], [85.7, 506.0], [85.8, 514.0], [85.9, 520.0], [86.0, 527.0], [86.1, 535.0], [86.2, 542.0], [86.3, 548.0], [86.4, 555.0], [86.5, 562.0], [86.6, 569.0], [86.7, 576.0], [86.8, 582.0], [86.9, 590.0], [87.0, 597.0], [87.1, 605.0], [87.2, 612.0], [87.3, 620.0], [87.4, 627.0], [87.5, 634.0], [87.6, 642.0], [87.7, 649.0], [87.8, 657.0], [87.9, 664.0], [88.0, 671.0], [88.1, 678.0], [88.2, 685.0], [88.3, 692.0], [88.4, 698.0], [88.5, 706.0], [88.6, 713.0], [88.7, 722.0], [88.8, 729.0], [88.9, 737.0], [89.0, 745.0], [89.1, 754.0], [89.2, 761.0], [89.3, 769.0], [89.4, 777.0], [89.5, 785.0], [89.6, 792.0], [89.7, 800.0], [89.8, 808.0], [89.9, 815.0], [90.0, 824.0], [90.1, 833.0], [90.2, 840.0], [90.3, 850.0], [90.4, 859.0], [90.5, 868.0], [90.6, 877.0], [90.7, 886.0], [90.8, 894.0], [90.9, 903.0], [91.0, 913.0], [91.1, 922.0], [91.2, 933.0], [91.3, 943.0], [91.4, 952.0], [91.5, 963.0], [91.6, 977.0], [91.7, 985.0], [91.8, 997.0], [91.9, 1008.0], [92.0, 1017.0], [92.1, 1027.0], [92.2, 1037.0], [92.3, 1047.0], [92.4, 1058.0], [92.5, 1066.0], [92.6, 1074.0], [92.7, 1084.0], [92.8, 1092.0], [92.9, 1102.0], [93.0, 1110.0], [93.1, 1118.0], [93.2, 1127.0], [93.3, 1135.0], [93.4, 1144.0], [93.5, 1150.0], [93.6, 1157.0], [93.7, 1165.0], [93.8, 1173.0], [93.9, 1181.0], [94.0, 1188.0], [94.1, 1195.0], [94.2, 1202.0], [94.3, 1210.0], [94.4, 1219.0], [94.5, 1226.0], [94.6, 1235.0], [94.7, 1242.0], [94.8, 1253.0], [94.9, 1261.0], [95.0, 1271.0], [95.1, 1280.0], [95.2, 1288.0], [95.3, 1301.0], [95.4, 1312.0], [95.5, 1323.0], [95.6, 1336.0], [95.7, 1348.0], [95.8, 1360.0], [95.9, 1371.0], [96.0, 1385.0], [96.1, 1401.0], [96.2, 1415.0], [96.3, 1430.0], [96.4, 1445.0], [96.5, 1461.0], [96.6, 1479.0], [96.7, 1499.0], [96.8, 1519.0], [96.9, 1545.0], [97.0, 1577.0], [97.1, 1606.0], [97.2, 1642.0], [97.3, 1672.0], [97.4, 1709.0], [97.5, 1742.0], [97.6, 1784.0], [97.7, 1819.0], [97.8, 1854.0], [97.9, 1891.0], [98.0, 1924.0], [98.1, 1956.0], [98.2, 1989.0], [98.3, 2020.0], [98.4, 2050.0], [98.5, 2089.0], [98.6, 2126.0], [98.7, 2167.0], [98.8, 2208.0], [98.9, 2251.0], [99.0, 2288.0], [99.1, 2333.0], [99.2, 2397.0], [99.3, 2451.0], [99.4, 2515.0], [99.5, 2588.0], [99.6, 2667.0], [99.7, 2798.0], [99.8, 2973.0], [99.9, 3251.0], [100.0, 4332.0]], "isOverall": false, "label": "Get drug suggestions", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 74665.0, "series": [{"data": [[0.0, 74665.0], [2100.0, 1.0], [600.0, 920.0], [2400.0, 1.0], [2500.0, 1.0], [700.0, 715.0], [200.0, 4463.0], [800.0, 727.0], [900.0, 647.0], [1000.0, 541.0], [1100.0, 416.0], [300.0, 2818.0], [1200.0, 275.0], [1300.0, 176.0], [1400.0, 104.0], [1500.0, 64.0], [100.0, 10120.0], [400.0, 1969.0], [1600.0, 37.0], [1700.0, 26.0], [1800.0, 5.0], [1900.0, 3.0], [500.0, 1306.0]], "isOverall": false, "label": "Create pharmacy", "isController": false}, {"data": [[0.0, 70203.0], [600.0, 1393.0], [700.0, 1275.0], [800.0, 1166.0], [900.0, 967.0], [1000.0, 1051.0], [1100.0, 1289.0], [1200.0, 1126.0], [1300.0, 802.0], [1400.0, 604.0], [1500.0, 382.0], [100.0, 9721.0], [1600.0, 294.0], [1700.0, 269.0], [1800.0, 285.0], [1900.0, 300.0], [2000.0, 297.0], [2100.0, 252.0], [2200.0, 254.0], [2300.0, 168.0], [2400.0, 176.0], [2500.0, 142.0], [2600.0, 105.0], [2700.0, 76.0], [2800.0, 62.0], [2900.0, 51.0], [3000.0, 36.0], [3100.0, 40.0], [200.0, 2772.0], [3300.0, 19.0], [3200.0, 27.0], [3400.0, 16.0], [3500.0, 14.0], [3700.0, 9.0], [3600.0, 13.0], [3800.0, 4.0], [3900.0, 6.0], [4100.0, 2.0], [4300.0, 1.0], [300.0, 1467.0], [400.0, 1432.0], [500.0, 1432.0]], "isOverall": false, "label": "Get drug suggestions", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3434.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 110776.0, "series": [{"data": [[0.0, 68881.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 16909.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3434.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 110776.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 27.23793552117986, "minX": 1.71673548E12, "maxY": 191.72106363587656, "series": [{"data": [[1.71673566E12, 47.87350316312734], [1.71673548E12, 137.06504571903548], [1.71673578E12, 44.82873556838341], [1.7167356E12, 161.20926375982762], [1.71673572E12, 27.23793552117986], [1.71673554E12, 84.35503025186424], [1.71673584E12, 191.72106363587656]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673584E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 2678.166666666667, "series": [{"data": [[2.0, 1.642149088025374], [3.0, 2.975093399750935], [4.0, 5.531428571428571], [5.0, 9.856394129979034], [6.0, 16.33221850613156], [7.0, 17.705656993805068], [8.0, 19.00065402223675], [9.0, 20.60095579450422], [10.0, 23.703418803418824], [11.0, 21.623217922606898], [12.0, 21.067738231917314], [13.0, 25.61652281134404], [14.0, 24.632867132867155], [15.0, 31.581784386617127], [16.0, 28.221311475409824], [17.0, 31.08053691275168], [18.0, 33.6635730858469], [19.0, 29.42887931034482], [20.0, 33.32954545454541], [21.0, 33.161290322580655], [22.0, 34.27850877192986], [23.0, 37.58056872037915], [24.0, 38.933649289099534], [25.0, 40.46305418719213], [26.0, 40.28475336322872], [27.0, 40.183066361556044], [28.0, 39.871720116618086], [29.0, 40.07481296758108], [30.0, 42.96842105263156], [31.0, 37.49759615384612], [33.0, 45.79656160458452], [32.0, 45.40055248618784], [35.0, 49.85227272727272], [34.0, 42.64572864321603], [36.0, 49.8380062305296], [37.0, 46.05729166666667], [39.0, 50.69889502762432], [38.0, 49.46820809248557], [41.0, 48.814492753623185], [40.0, 53.549418604651116], [43.0, 54.96393442622952], [42.0, 51.86507936507935], [44.0, 60.447811447811475], [45.0, 58.1089743589744], [47.0, 53.957928802588974], [46.0, 57.889632107023424], [48.0, 57.38078291814948], [49.0, 55.55813953488372], [50.0, 60.48484848484853], [51.0, 67.10752688172039], [53.0, 50.66961651917404], [52.0, 50.04761904761907], [54.0, 57.15596330275229], [55.0, 58.23255813953485], [57.0, 56.736462093862826], [56.0, 66.27540983606556], [58.0, 64.55252918287935], [59.0, 72.09154929577463], [60.0, 67.52255639097746], [61.0, 64.62962962962959], [62.0, 66.14830508474579], [63.0, 68.70562770562775], [67.0, 65.96153846153842], [66.0, 68.20472440944886], [65.0, 57.591269841269856], [64.0, 62.40298507462694], [71.0, 79.81566820276495], [70.0, 78.58130081300808], [69.0, 73.81904761904764], [68.0, 71.50917431192667], [72.0, 83.80476190476189], [74.0, 80.32244897959184], [75.0, 78.33999999999997], [73.0, 85.27604166666667], [79.0, 97.27638190954767], [78.0, 90.03879310344823], [77.0, 90.23985239852391], [76.0, 79.77391304347832], [80.0, 91.359375], [81.0, 85.3645320197045], [82.0, 76.61056105610564], [83.0, 87.81651376146787], [84.0, 80.96265560165976], [87.0, 97.92105263157897], [86.0, 93.91463414634143], [85.0, 99.07207207207202], [88.0, 99.75426621160409], [89.0, 93.03524229074885], [91.0, 106.0652173913043], [90.0, 97.65163934426234], [92.0, 107.08294930875579], [95.0, 102.85852090032155], [94.0, 104.85925925925935], [93.0, 123.28282828282833], [99.0, 114.24372759856634], [98.0, 107.91390728476821], [97.0, 115.71535580524346], [96.0, 128.13108614232215], [103.0, 106.32568807339452], [102.0, 112.46927374301673], [101.0, 120.40677966101693], [100.0, 118.12244897959182], [105.0, 131.54838709677418], [107.0, 124.29864253393667], [106.0, 110.46315789473685], [104.0, 122.12444444444448], [111.0, 136.82870370370372], [110.0, 132.49751243781085], [109.0, 150.20574162679424], [108.0, 128.44827586206895], [113.0, 158.7227722772278], [115.0, 144.2986425339367], [114.0, 157.88717948717957], [112.0, 128.5603112840467], [117.0, 158.3333333333333], [119.0, 132.11029411764704], [118.0, 121.59599999999998], [116.0, 142.11518324607323], [123.0, 142.47142857142865], [122.0, 143.4162162162162], [121.0, 158.8982035928143], [120.0, 155.2674418604651], [126.0, 154.24117647058816], [127.0, 152.7368421052632], [125.0, 129.97607655502387], [124.0, 144.7213114754098], [130.0, 154.3789473684211], [135.0, 158.474358974359], [134.0, 153.3851351351351], [133.0, 158.05434782608705], [132.0, 158.49999999999997], [131.0, 149.89140271493207], [129.0, 139.42168674698797], [128.0, 139.61325966850825], [140.0, 226.00000000000006], [142.0, 204.9333333333334], [143.0, 225.50292397660823], [141.0, 202.8466666666667], [138.0, 184.66666666666669], [137.0, 180.0113636363636], [136.0, 189.59235668789805], [139.0, 194.9426751592357], [146.0, 212.13609467455623], [151.0, 167.68316831683157], [150.0, 223.88095238095232], [149.0, 205.875], [148.0, 192.59876543209876], [147.0, 204.75806451612908], [145.0, 213.58], [144.0, 211.43636363636358], [155.0, 196.42068965517242], [156.0, 197.7832167832168], [159.0, 220.6259541984733], [158.0, 230.19811320754715], [157.0, 232.05511811023624], [154.0, 201.9411764705882], [153.0, 206.45695364238412], [152.0, 206.64406779661007], [160.0, 245.74999999999994], [162.0, 216.78906250000003], [164.0, 193.61428571428564], [163.0, 200.1495327102804], [166.0, 285.6530612244899], [167.0, 199.76470588235298], [165.0, 208.71739130434787], [161.0, 250.08196721311478], [168.0, 225.88297872340428], [175.0, 245.15178571428572], [174.0, 236.29032258064512], [173.0, 228.43846153846152], [172.0, 266.69491525423723], [171.0, 219.46999999999997], [170.0, 235.90322580645153], [169.0, 176.86607142857142], [181.0, 248.39175257731958], [180.0, 245.38947368421054], [183.0, 244.6048387096775], [182.0, 289.2934782608697], [179.0, 257.93750000000017], [178.0, 283.1296296296298], [177.0, 251.79545454545436], [176.0, 255.95959595959602], [184.0, 276.42500000000007], [188.0, 258.3548387096773], [187.0, 284.18253968253964], [191.0, 233.44329896907226], [190.0, 296.68181818181813], [189.0, 244.46846846846853], [186.0, 259.4214876033058], [185.0, 271.9611650485437], [192.0, 239.9886363636363], [194.0, 282.90425531914894], [196.0, 235.21978021978023], [199.0, 217.19101123595496], [198.0, 279.45348837209303], [197.0, 275.06185567010306], [195.0, 254.17647058823536], [193.0, 203.1923076923077], [202.0, 301.00970873786406], [203.0, 294.2232142857143], [205.0, 286.36220472440954], [204.0, 299.6666666666667], [207.0, 267.1960784313726], [206.0, 289.37391304347835], [201.0, 256.17142857142846], [200.0, 229.6231884057971], [209.0, 330.1492537313432], [212.0, 304.5529411764706], [214.0, 342.5000000000001], [215.0, 282.08888888888885], [213.0, 295.15999999999997], [210.0, 346.69411764705893], [208.0, 266.9782608695652], [211.0, 386.1764705882353], [220.0, 288.66355140186926], [219.0, 314.71428571428567], [223.0, 248.22093023255817], [222.0, 215.49504950495052], [221.0, 207.26666666666665], [218.0, 291.4313725490196], [217.0, 268.14615384615394], [216.0, 297.5648148148149], [227.0, 293.129411764706], [228.0, 349.8108108108109], [229.0, 323.39843750000006], [231.0, 269.8108108108108], [230.0, 276.0322580645162], [226.0, 297.8055555555556], [225.0, 321.62666666666655], [224.0, 229.75824175824178], [232.0, 334.1176470588235], [234.0, 316.948275862069], [235.0, 263.36231884057963], [236.0, 311.73636363636365], [238.0, 272.5700934579438], [239.0, 322.3571428571428], [237.0, 250.14705882352933], [233.0, 314.2244897959185], [241.0, 308.8571428571427], [242.0, 229.42201834862377], [246.0, 268.0192307692308], [245.0, 227.98], [247.0, 259.45945945945937], [244.0, 289.2211538461538], [243.0, 229.7804878048779], [240.0, 308.35922330097065], [249.0, 293.4315789473684], [253.0, 251.38356164383575], [255.0, 263.6034482758622], [254.0, 237.82580645161283], [252.0, 303.4833333333334], [251.0, 264.1655172413793], [250.0, 275.62411347517724], [248.0, 262.16504854368935], [258.0, 224.93220338983048], [260.0, 259.5245901639342], [259.0, 279.71568627450966], [268.0, 330.0204081632653], [271.0, 299.0252100840338], [269.0, 258.29411764705884], [270.0, 315.4803149606298], [262.0, 293.06164383561634], [264.0, 377.6299212598426], [265.0, 358.40833333333353], [263.0, 286.48591549295793], [257.0, 228.99090909090907], [256.0, 246.42187499999997], [261.0, 190.94285714285715], [267.0, 308.9851851851854], [266.0, 273.0152671755724], [273.0, 329.1333333333333], [276.0, 303.0666666666668], [275.0, 264.20731707317054], [274.0, 310.3132530120482], [277.0, 366.9230769230769], [278.0, 306.7761194029851], [281.0, 379.29850746268664], [282.0, 296.34], [283.0, 280.32692307692304], [280.0, 331.6323529411765], [286.0, 382.71250000000015], [287.0, 421.911392405063], [285.0, 323.25000000000006], [284.0, 314.3538461538462], [279.0, 318.62500000000006], [272.0, 297.3157894736841], [288.0, 391.2535211267605], [290.0, 326.3037974683544], [291.0, 346.3064516129031], [301.0, 485.14814814814815], [300.0, 467.90625000000006], [294.0, 501.0576923076921], [293.0, 430.90909090909076], [292.0, 324.21126760563374], [289.0, 372.6578947368421], [295.0, 365.25454545454534], [303.0, 433.3749999999999], [296.0, 309.8000000000001], [299.0, 383.6562499999999], [298.0, 332.4137931034483], [297.0, 489.7021276595746], [302.0, 371.33333333333326], [318.0, 545.5862068965517], [319.0, 436.74999999999994], [317.0, 506.4468085106383], [316.0, 563.3777777777777], [315.0, 532.8269230769231], [314.0, 568.7500000000002], [313.0, 603.0888888888887], [312.0, 569.5749999999999], [311.0, 491.9736842105263], [305.0, 378.5925925925926], [304.0, 345.7391304347826], [307.0, 485.7058823529412], [306.0, 449.4418604651161], [310.0, 357.7857142857142], [309.0, 440.71111111111117], [308.0, 527.7755102040817], [334.0, 472.88571428571424], [335.0, 426.1052631578948], [333.0, 521.5999999999999], [332.0, 526.8181818181819], [331.0, 276.69565217391306], [330.0, 463.7857142857141], [329.0, 450.9666666666666], [328.0, 265.65625000000006], [327.0, 404.5625], [320.0, 344.44444444444446], [323.0, 423.65714285714284], [322.0, 359.56000000000006], [321.0, 489.2173913043478], [326.0, 358.81395348837196], [325.0, 377.99999999999994], [324.0, 356.8684210526316], [350.0, 615.0000000000001], [351.0, 761.625], [349.0, 465.73333333333335], [348.0, 464.375], [347.0, 394.96428571428567], [346.0, 472.61111111111114], [345.0, 604.2083333333333], [344.0, 573.9090909090909], [343.0, 568.6666666666666], [337.0, 475.5555555555555], [336.0, 773.6923076923077], [339.0, 431.7333333333334], [338.0, 490.3333333333333], [342.0, 470.75], [341.0, 616.3333333333333], [340.0, 379.55555555555554], [355.0, 476.16666666666663], [367.0, 486.41666666666663], [364.0, 601.0], [366.0, 501.75], [365.0, 337.0], [354.0, 446.74999999999994], [353.0, 204.00000000000006], [352.0, 758.25], [363.0, 604.5714285714286], [362.0, 755.2857142857143], [360.0, 911.3846153846155], [361.0, 754.25], [359.0, 733.2500000000001], [358.0, 638.0000000000001], [357.0, 674.5], [356.0, 292.66666666666663], [368.0, 521.0], [373.0, 883.0869565217391], [372.0, 784.3703703703703], [371.0, 621.7692307692308], [381.0, 1079.0], [380.0, 1481.0], [370.0, 725.2608695652175], [369.0, 666.4827586206897], [383.0, 1090.6666666666667], [376.0, 956.0714285714286], [378.0, 830.2222222222222], [379.0, 801.25], [377.0, 826.3333333333334], [382.0, 580.0], [374.0, 857.8571428571429], [375.0, 830.0833333333334], [398.0, 1066.0], [399.0, 786.6], [397.0, 541.0], [396.0, 469.0], [394.0, 342.3333333333333], [395.0, 1298.0], [393.0, 644.0], [392.0, 778.1818181818182], [391.0, 629.75], [387.0, 1022.5], [386.0, 970.1176470588235], [385.0, 909.9999999999999], [384.0, 922.0], [388.0, 1046.5], [389.0, 1051.0], [390.0, 719.2222222222222], [414.0, 998.2857142857143], [415.0, 746.8333333333333], [412.0, 622.0], [413.0, 681.2], [403.0, 903.8571428571428], [402.0, 1076.5], [401.0, 970.0], [400.0, 581.5], [407.0, 369.0], [411.0, 855.4], [410.0, 789.9], [409.0, 865.4999999999999], [408.0, 513.3333333333335], [406.0, 971.8888888888889], [405.0, 924.5], [404.0, 729.2], [418.0, 1035.7142857142858], [419.0, 432.58333333333326], [417.0, 898.2727272727273], [416.0, 1003.4], [424.0, 1250.5], [431.0, 1082.0], [430.0, 1121.25], [429.0, 745.75], [425.0, 346.25], [427.0, 410.0], [426.0, 1165.0], [423.0, 1130.75], [422.0, 797.0], [421.0, 1105.0], [420.0, 192.5], [428.0, 1000.6666666666667], [445.0, 574.0], [432.0, 789.3333333333333], [435.0, 360.0], [433.0, 4.0], [436.0, 877.0], [437.0, 346.19999999999993], [439.0, 1191.75], [446.0, 807.5], [447.0, 684.5], [443.0, 1051.5], [442.0, 755.3333333333334], [441.0, 1313.8], [440.0, 925.0], [444.0, 585.5], [461.0, 827.0], [449.0, 716.0], [450.0, 625.75], [460.0, 1253.0], [451.0, 457.33333333333337], [452.0, 1017.25], [453.0, 804.25], [454.0, 878.3333333333333], [455.0, 567.0], [448.0, 3.0], [459.0, 618.3333333333333], [458.0, 1175.6666666666667], [462.0, 310.33333333333337], [463.0, 594.0], [456.0, 1172.5], [466.0, 710.1666666666667], [464.0, 346.5], [465.0, 1226.5], [467.0, 509.8749999999999], [470.0, 931.5], [469.0, 826.0], [468.0, 436.0], [471.0, 476.0], [474.0, 1204.0], [475.0, 836.0], [473.0, 667.6666666666667], [472.0, 1009.2], [478.0, 1146.5], [477.0, 558.0], [479.0, 657.0], [476.0, 663.5], [483.0, 1011.0], [481.0, 424.00000000000006], [480.0, 715.4], [484.0, 247.5714285714286], [486.0, 700.5], [485.0, 813.5], [487.0, 306.0], [482.0, 940.6666666666666], [488.0, 893.0], [489.0, 2.0], [491.0, 672.5], [490.0, 511.0], [493.0, 777.3333333333333], [492.0, 1.0], [495.0, 791.0], [494.0, 2.333333333333333], [504.0, 888.125], [498.0, 644.0909090909091], [497.0, 2.5], [496.0, 733.0], [499.0, 687.3333333333334], [503.0, 614.25], [502.0, 1188.5], [501.0, 1362.0], [500.0, 642.5], [506.0, 943.25], [507.0, 918.25], [505.0, 756.4545454545454], [508.0, 736.3333333333334], [509.0, 845.0], [510.0, 644.6666666666667], [511.0, 358.33333333333337], [518.0, 705.625], [514.0, 817.1666666666666], [515.0, 684.7500000000002], [516.0, 867.7857142857142], [517.0, 734.7777777777778], [521.0, 837.5], [520.0, 880.5555555555555], [522.0, 617.5384615384614], [519.0, 880.3076923076924], [537.0, 763.0999999999999], [536.0, 1185.5], [539.0, 541.8], [540.0, 904.125], [541.0, 512.2857142857142], [542.0, 505.80000000000007], [543.0, 790.875], [538.0, 889.1428571428571], [528.0, 921.5128205128203], [529.0, 835.5365853658535], [530.0, 961.2962962962963], [531.0, 829.0], [532.0, 955.3636363636364], [535.0, 847.125], [533.0, 897.56], [534.0, 822.1538461538462], [513.0, 668.5], [512.0, 526.2], [524.0, 882.5238095238095], [523.0, 924.1818181818181], [525.0, 888.8823529411764], [526.0, 803.1304347826085], [527.0, 987.1935483870967], [548.0, 706.1111111111112], [546.0, 775.8461538461538], [545.0, 918.75], [544.0, 585.5333333333334], [547.0, 647.48], [550.0, 682.7142857142858], [549.0, 636.1923076923076], [568.0, 905.1428571428571], [551.0, 347.66666666666674], [570.0, 913.2647058823529], [569.0, 629.7692307692308], [572.0, 623.3636363636367], [573.0, 716.4999999999997], [571.0, 700.2105263157894], [575.0, 854.0294117647059], [560.0, 731.2000000000003], [574.0, 804.1724137931035], [552.0, 916.3913043478261], [554.0, 747.0], [553.0, 733.3055555555557], [556.0, 615.5], [555.0, 610.9565217391306], [557.0, 584.3333333333334], [559.0, 903.45], [558.0, 729.4705882352941], [562.0, 677.8636363636364], [563.0, 556.4285714285714], [561.0, 821.2258064516129], [564.0, 653.0], [565.0, 576.2162162162163], [567.0, 633.9], [566.0, 579.7500000000001], [582.0, 668.7058823529412], [577.0, 788.4375], [576.0, 810.6470588235295], [591.0, 953.8333333333333], [579.0, 777.3750000000001], [578.0, 717.3333333333333], [580.0, 840.925925925926], [581.0, 823.2222222222222], [583.0, 645.8], [600.0, 995.0], [601.0, 1061.2857142857142], [602.0, 1294.0], [603.0, 1206.0], [605.0, 1035.4], [607.0, 929.0], [606.0, 2.0], [604.0, 1068.142857142857], [592.0, 710.9999999999999], [595.0, 718.7142857142857], [597.0, 1000.5], [598.0, 834.8571428571429], [599.0, 668.5], [596.0, 597.4], [594.0, 839.2], [593.0, 619.2], [585.0, 768.1538461538461], [584.0, 673.25], [587.0, 923.2], [586.0, 806.2222222222222], [589.0, 795.8000000000001], [588.0, 490.6666666666667], [590.0, 969.9000000000001], [614.0, 661.0], [609.0, 1062.5], [608.0, 815.2222222222223], [623.0, 694.2], [610.0, 747.3749999999999], [611.0, 563.1666666666666], [626.0, 366.33333333333326], [625.0, 1304.0], [624.0, 1767.0], [639.0, 1114.421052631579], [638.0, 1183.8], [637.0, 836.0000000000001], [636.0, 942.6999999999999], [634.0, 610.375], [635.0, 850.1666666666666], [632.0, 490.0], [615.0, 350.25], [633.0, 640.875], [627.0, 698.0], [628.0, 1019.0], [630.0, 748.6666666666667], [631.0, 2.3333333333333335], [629.0, 636.0], [613.0, 843.75], [612.0, 213.8], [619.0, 880.8333333333333], [618.0, 1025.0], [617.0, 429.66666666666663], [616.0, 618.0], [620.0, 1249.0], [621.0, 1044.8571428571427], [622.0, 936.8888888888889], [647.0, 1113.4285714285716], [641.0, 908.625], [644.0, 982.9473684210526], [645.0, 873.235294117647], [646.0, 1067.8], [643.0, 1045.9999999999998], [642.0, 919.3333333333333], [640.0, 1051.9285714285713], [655.0, 877.8399999999998], [658.0, 751.2222222222222], [657.0, 1107.25], [656.0, 965.25], [671.0, 382.8888888888889], [670.0, 735.5], [669.0, 1.0], [668.0, 746.3333333333333], [667.0, 999.25], [666.0, 304.25], [664.0, 1033.777777777778], [665.0, 945.7499999999999], [660.0, 865.9999999999999], [661.0, 842.375], [663.0, 885.6923076923076], [662.0, 990.6249999999998], [659.0, 841.3000000000001], [650.0, 1133.1428571428569], [649.0, 709.7272727272726], [648.0, 644.2608695652174], [651.0, 1020.2105263157895], [654.0, 879.1666666666666], [653.0, 1202.6785714285718], [652.0, 965.8235294117646], [675.0, 1196.1538461538462], [673.0, 815.0], [678.0, 956.5714285714286], [677.0, 1087.4], [676.0, 777.7777777777778], [674.0, 766.5882352941177], [679.0, 731.0], [681.0, 598.25], [682.0, 1080.0], [672.0, 841.0000000000001], [680.0, 1035.5], [1.0, 1.761904761904762]], "isOverall": false, "label": "Create pharmacy", "isController": false}, {"data": [[83.75493999999868, 110.79969999999989]], "isOverall": false, "label": "Create pharmacy-Aggregated", "isController": false}, {"data": [[2.0, 1.5776219317819549], [3.0, 2.147779479326185], [4.0, 4.446994535519116], [5.0, 9.480549199084686], [6.0, 15.017623363544837], [7.0, 15.56018929310853], [8.0, 16.42619542619542], [9.0, 16.524091919940716], [10.0, 16.47227533460805], [11.0, 16.579980372914598], [12.0, 20.791845493562228], [13.0, 26.8298755186722], [14.0, 29.349999999999994], [15.0, 24.148418491484186], [16.0, 27.352331606217625], [17.0, 31.278787878787874], [18.0, 28.709183673469383], [19.0, 44.28571428571432], [20.0, 34.14914425427874], [21.0, 40.36074270557029], [22.0, 32.15180722891567], [23.0, 40.85756676557863], [24.0, 47.43209876543208], [25.0, 46.873493975903614], [26.0, 48.43016759776535], [27.0, 36.54216867469879], [28.0, 43.93769470404983], [29.0, 49.19756838905773], [30.0, 62.12828947368416], [31.0, 45.49275362318843], [33.0, 64.33112582781457], [32.0, 78.8151515151515], [35.0, 52.75548589341699], [34.0, 60.33012820512816], [36.0, 56.754098360655746], [37.0, 59.288808664259946], [38.0, 58.11513157894736], [39.0, 67.91475409836069], [41.0, 70.49812734082396], [40.0, 63.238267148014415], [42.0, 75.3655913978495], [43.0, 73.59479553903351], [45.0, 55.75432525951558], [44.0, 80.70192307692305], [47.0, 58.46127946127949], [46.0, 76.54477611940297], [48.0, 67.36250000000005], [49.0, 80.43824701195217], [50.0, 73.67469879518066], [51.0, 97.73023255813958], [53.0, 69.89370078740151], [52.0, 80.42561983471073], [55.0, 66.34057971014492], [54.0, 72.42909090909087], [56.0, 72.33177570093453], [57.0, 75.78923766816145], [58.0, 95.92741935483873], [59.0, 94.72384937238502], [61.0, 95.01395348837212], [60.0, 93.40944881889763], [63.0, 92.03832752613246], [62.0, 83.2100840336134], [66.0, 77.79310344827584], [67.0, 74.96887159533077], [64.0, 90.37681159420285], [65.0, 95.78148148148149], [68.0, 96.56768558951967], [71.0, 109.45258620689654], [69.0, 95.92490118577066], [70.0, 95.22764227642274], [74.0, 104.3417721518987], [75.0, 129.00784313725487], [73.0, 108.49723756906083], [72.0, 126.62500000000003], [77.0, 142.5714285714286], [78.0, 136.99476439790587], [79.0, 141.39037433155084], [76.0, 141.83157894736843], [80.0, 113.76605504587158], [81.0, 105.03781512605035], [83.0, 125.97607655502406], [82.0, 95.46], [87.0, 156.33620689655172], [86.0, 125.30421686746979], [85.0, 125.97637795275573], [84.0, 130.18264840182638], [88.0, 125.23437500000004], [91.0, 127.79230769230772], [90.0, 127.40839694656486], [89.0, 133.08300395256916], [92.0, 134.90728476821184], [95.0, 168.08365019011413], [94.0, 176.58909090909088], [93.0, 178.23039215686276], [98.0, 135.95955882352956], [99.0, 140.08368200836827], [96.0, 156.475352112676], [97.0, 168.8991935483871], [101.0, 155.71304347826091], [103.0, 168.03333333333322], [102.0, 166.36744186046505], [100.0, 163.20325203252028], [104.0, 154.42194092827003], [106.0, 139.21888412017182], [105.0, 149.52888888888887], [107.0, 155.21107266435982], [109.0, 160.72413793103465], [110.0, 174.1385542168675], [111.0, 205.30232558139548], [108.0, 184.84523809523816], [112.0, 203.0679245283017], [113.0, 203.68644067796606], [115.0, 158.06934306569357], [114.0, 191.0338983050848], [119.0, 176.66210045662103], [118.0, 208.2153110047846], [116.0, 175.19475655430713], [117.0, 165.8875502008032], [123.0, 227.9740259740259], [122.0, 199.70558375634513], [121.0, 212.91111111111115], [120.0, 190.79310344827587], [124.0, 174.43984962406017], [126.0, 260.3574660633486], [127.0, 219.80193236714976], [125.0, 190.16104868913868], [128.0, 220.86363636363635], [129.0, 222.18859649122822], [130.0, 199.4729064039408], [131.0, 182.88185654008433], [134.0, 219.37209302325564], [135.0, 283.17989417989423], [133.0, 202.6134020618557], [132.0, 211.07731958762892], [136.0, 247.77941176470583], [137.0, 307.80578512396704], [139.0, 259.4204545454544], [140.0, 299.66242038216564], [142.0, 302.78846153846166], [143.0, 307.6930693069307], [141.0, 259.8241758241757], [138.0, 297.9518716577542], [144.0, 336.3838383838381], [145.0, 270.78181818181815], [146.0, 259.18461538461537], [150.0, 266.2962962962963], [149.0, 287.6732026143792], [151.0, 189.07462686567155], [148.0, 293.7167630057805], [147.0, 290.8507462686569], [152.0, 243.22842639593907], [155.0, 361.4271356783917], [156.0, 407.3506493506492], [158.0, 341.4999999999999], [159.0, 324.8129496402878], [154.0, 287.4491978609626], [157.0, 440.54014598540147], [153.0, 342.4013605442178], [161.0, 313.69461077844306], [162.0, 310.502564102564], [163.0, 311.4545454545456], [164.0, 251.45041322314057], [166.0, 356.4491525423727], [167.0, 262.5454545454545], [160.0, 343.9803921568627], [165.0, 297.6506849315068], [168.0, 288.54929577464804], [169.0, 248.46632124352334], [171.0, 413.2211055276381], [175.0, 495.5481481481484], [174.0, 470.5369127516776], [173.0, 454.19310344827596], [172.0, 414.8136363636364], [170.0, 427.9772727272727], [180.0, 426.79999999999984], [181.0, 471.41803278688514], [182.0, 527.7716535433071], [177.0, 415.93700787401576], [178.0, 536.4326923076923], [176.0, 464.88549618320616], [179.0, 426.94845360824763], [183.0, 549.6461538461537], [187.0, 462.2516129032259], [186.0, 565.5089285714286], [191.0, 583.9252336448596], [190.0, 570.80412371134], [189.0, 704.7288135593221], [188.0, 516.9572649572651], [185.0, 517.007299270073], [184.0, 519.9166666666671], [192.0, 578.2777777777778], [195.0, 582.8907563025214], [197.0, 564.811320754717], [199.0, 475.5535714285717], [198.0, 591.5545454545455], [196.0, 548.586538461538], [194.0, 480.9687499999999], [193.0, 467.97183098591523], [200.0, 533.2244897959182], [201.0, 583.3750000000001], [202.0, 588.0961538461535], [204.0, 610.9296874999999], [205.0, 636.3851851851852], [203.0, 641.5123966942148], [207.0, 662.2659574468087], [206.0, 586.8625954198474], [209.0, 659.6703296703298], [210.0, 754.9577464788733], [211.0, 654.7802197802198], [215.0, 731.2020202020203], [214.0, 604.6623376623376], [208.0, 828.3699999999999], [213.0, 586.9999999999999], [212.0, 572.5777777777777], [216.0, 608.6687898089173], [218.0, 694.7228915662649], [219.0, 718.37], [221.0, 780.3541666666665], [222.0, 710.0232558139534], [223.0, 713.7439024390242], [217.0, 643.8761061946901], [220.0, 757.254716981132], [224.0, 679.1747572815532], [226.0, 711.3380281690143], [227.0, 760.178947368421], [228.0, 764.3358208955221], [231.0, 772.6046511627909], [230.0, 824.75], [229.0, 824.9411764705885], [225.0, 712.2763157894738], [232.0, 858.7468354430379], [233.0, 804.3173076923078], [234.0, 631.9590163934424], [235.0, 756.4274809160303], [237.0, 773.5604395604397], [238.0, 837.342857142857], [239.0, 937.8720000000001], [236.0, 763.3391304347825], [240.0, 902.3949579831933], [242.0, 764.7500000000002], [241.0, 917.1764705882352], [243.0, 764.1826923076922], [244.0, 845.0000000000005], [245.0, 652.0285714285711], [246.0, 744.7961165048545], [247.0, 787.7083333333333], [251.0, 956.0859374999999], [252.0, 834.8480000000002], [253.0, 769.0204081632656], [255.0, 932.7641509433961], [254.0, 885.4014598540144], [249.0, 887.1167883211677], [248.0, 858.6700000000001], [250.0, 894.0197368421052], [257.0, 785.2293577981653], [256.0, 887.1724137931031], [259.0, 892.9245283018872], [258.0, 881.0450450450452], [268.0, 868.9537037037038], [269.0, 930.3499999999998], [271.0, 1145.9790209790212], [270.0, 983.108910891089], [260.0, 753.1304347826085], [262.0, 846.405405405406], [263.0, 970.9186991869923], [264.0, 964.4516129032256], [265.0, 923.6984126984125], [267.0, 808.1923076923074], [266.0, 746.738805970149], [261.0, 476.6855895196508], [273.0, 975.7395833333334], [272.0, 1146.546296296297], [274.0, 822.7000000000003], [275.0, 933.1975308641975], [276.0, 830.2837837837836], [277.0, 923.5882352941178], [278.0, 876.1428571428571], [279.0, 796.6119402985075], [281.0, 863.3829787234044], [282.0, 1152.4210526315792], [283.0, 818.9107142857142], [280.0, 936.8813559322033], [286.0, 899.940476190476], [287.0, 854.2835820895522], [284.0, 855.7169811320757], [285.0, 886.34375], [288.0, 951.4576271186442], [290.0, 1019.8933333333334], [291.0, 794.8], [301.0, 821.8888888888889], [300.0, 834.1875], [294.0, 911.611111111111], [293.0, 1033.6153846153845], [292.0, 1040.822580645161], [289.0, 979.506329113924], [295.0, 913.1176470588233], [303.0, 831.4000000000001], [296.0, 864.1714285714286], [299.0, 818.8], [298.0, 683.3793103448276], [297.0, 708.3421052631578], [302.0, 979.1562500000002], [317.0, 1025.7837837837842], [318.0, 1124.9444444444443], [319.0, 1064.060606060606], [316.0, 1151.9814814814813], [307.0, 1012.3243243243246], [306.0, 1097.0000000000002], [305.0, 1111.0], [304.0, 809.3333333333334], [315.0, 1134.8793103448277], [314.0, 1159.701754385965], [312.0, 1082.6904761904761], [313.0, 1239.2666666666673], [311.0, 1056.4130434782605], [310.0, 952.5581395348836], [309.0, 955.0526315789475], [308.0, 841.1333333333336], [334.0, 755.6129032258065], [335.0, 1166.0500000000004], [333.0, 827.7500000000001], [332.0, 821.1666666666666], [331.0, 577.2272727272726], [330.0, 816.3181818181818], [328.0, 828.4565217391305], [329.0, 837.311111111111], [327.0, 800.9411764705883], [321.0, 948.5277777777777], [320.0, 1053.193548387097], [323.0, 984.6333333333333], [322.0, 1046.09375], [326.0, 1139.6818181818182], [325.0, 865.7894736842105], [324.0, 1030.1176470588234], [349.0, 799.6], [346.0, 1144.4615384615383], [347.0, 1073.9444444444446], [348.0, 659.0714285714286], [339.0, 575.3333333333334], [338.0, 548.0714285714287], [337.0, 1066.2857142857142], [336.0, 1122.2105263157894], [350.0, 1221.6666666666665], [351.0, 684.75], [345.0, 1157.2777777777778], [344.0, 1213.3809523809525], [343.0, 1017.4000000000001], [342.0, 847.1176470588235], [341.0, 965.2], [340.0, 981.8888888888889], [353.0, 616.6666666666667], [358.0, 869.4285714285713], [359.0, 917.6111111111112], [356.0, 442.42857142857133], [354.0, 669.1999999999999], [357.0, 1133.9444444444443], [363.0, 1214.818181818182], [362.0, 1112.8125], [360.0, 789.3571428571429], [361.0, 1145.6666666666665], [366.0, 946.5], [364.0, 622.6666666666666], [365.0, 1930.5], [367.0, 1068.6470588235295], [352.0, 807.0], [355.0, 815.2727272727273], [371.0, 1089.9411764705883], [369.0, 1077.625], [368.0, 959.9599999999999], [375.0, 1177.0], [370.0, 1117.5], [372.0, 1232.1000000000001], [373.0, 1163.6666666666667], [374.0, 1868.0], [383.0, 958.3333333333333], [381.0, 1270.5], [380.0, 3.0], [382.0, 2229.0], [379.0, 1369.6666666666665], [378.0, 1090.0], [376.0, 1040.0], [377.0, 744.6666666666667], [398.0, 1244.4], [399.0, 1150.5], [397.0, 1169.8], [396.0, 1155.6666666666667], [395.0, 658.3333333333333], [394.0, 1163.2857142857142], [393.0, 897.8000000000001], [392.0, 1148.6], [391.0, 1141.0], [385.0, 2099.181818181818], [384.0, 847.3333333333334], [387.0, 1134.3333333333333], [386.0, 1296.888888888889], [390.0, 1167.5555555555557], [389.0, 1640.3333333333333], [388.0, 1605.0], [412.0, 824.6], [415.0, 1057.0], [413.0, 1375.4], [414.0, 1001.0], [409.0, 1357.5714285714287], [408.0, 766.8000000000001], [411.0, 2046.8], [410.0, 1684.3333333333333], [405.0, 870.0], [404.0, 520.5], [403.0, 2012.0], [402.0, 424.0], [401.0, 1390.2], [400.0, 734.0], [406.0, 534.0], [407.0, 1269.3333333333335], [416.0, 1577.875], [420.0, 1278.142857142857], [419.0, 896.2727272727273], [428.0, 424.0], [430.0, 1779.25], [429.0, 816.6666666666667], [418.0, 999.3846153846154], [417.0, 1398.076923076923], [421.0, 1490.0], [422.0, 863.2500000000001], [423.0, 1646.5], [424.0, 1366.7272727272725], [425.0, 2.0], [427.0, 1883.3333333333333], [426.0, 986.0], [431.0, 1292.0], [433.0, 1056.0], [432.0, 1693.5], [434.0, 1374.6666666666667], [444.0, 1994.0], [445.0, 1821.25], [446.0, 2358.75], [447.0, 1526.857142857143], [436.0, 1180.0], [437.0, 395.33333333333337], [438.0, 807.0], [439.0, 1226.625], [440.0, 1363.0], [441.0, 1055.5], [442.0, 974.7500000000001], [443.0, 860.25], [449.0, 1055.3636363636363], [448.0, 1656.1428571428573], [450.0, 1055.75], [451.0, 1040.6666666666667], [452.0, 1461.0], [453.0, 1037.0], [454.0, 1932.4], [456.0, 1596.25], [463.0, 911.2857142857142], [462.0, 1169.3333333333335], [460.0, 1030.25], [461.0, 2042.5], [458.0, 1599.0], [459.0, 1835.6666666666667], [465.0, 747.1428571428572], [464.0, 1507.0], [466.0, 751.5555555555555], [467.0, 1215.2], [469.0, 1535.0], [468.0, 1446.0], [470.0, 1908.0], [471.0, 717.1666666666667], [472.0, 1304.2857142857144], [476.0, 1353.1666666666667], [477.0, 2364.0], [478.0, 1131.0], [479.0, 1207.0000000000002], [474.0, 1305.8], [475.0, 960.0], [473.0, 1934.3333333333333], [494.0, 2116.4], [482.0, 1667.1666666666667], [480.0, 1699.125], [483.0, 1087.1538461538462], [493.0, 1635.4166666666667], [492.0, 1643.5], [481.0, 1858.0], [485.0, 899.6666666666667], [484.0, 1160.5], [486.0, 867.1666666666666], [487.0, 2430.5], [488.0, 2129.0], [491.0, 2195.0], [490.0, 810.0], [489.0, 1796.3333333333335], [495.0, 684.0], [508.0, 1827.3333333333333], [498.0, 803.0], [497.0, 1126.4545454545455], [496.0, 2.0], [499.0, 1356.6], [511.0, 1684.1666666666665], [510.0, 714.6666666666667], [509.0, 2.0], [502.0, 702.5], [501.0, 3.0], [500.0, 3.0], [504.0, 1210.3333333333333], [503.0, 1481.6], [505.0, 1480.8749999999998], [506.0, 1348.090909090909], [507.0, 1525.5], [519.0, 1622.8333333333333], [515.0, 1658.7142857142858], [514.0, 1408.4285714285713], [512.0, 1708.4285714285713], [513.0, 744.0], [526.0, 1757.9285714285713], [527.0, 1696.7272727272727], [524.0, 1596.761904761905], [525.0, 1712.9375000000002], [516.0, 1339.1111111111113], [517.0, 1966.3333333333335], [523.0, 1509.5000000000002], [521.0, 1750.5], [522.0, 1907.6923076923078], [518.0, 1644.1818181818182], [528.0, 1873.9714285714283], [542.0, 1130.5833333333333], [543.0, 905.6666666666666], [538.0, 1777.5555555555557], [539.0, 1060.3333333333333], [540.0, 1595.8], [541.0, 1316.375], [536.0, 1696.5384615384614], [537.0, 1454.857142857143], [529.0, 1849.3333333333333], [530.0, 1643.5882352941176], [532.0, 1837.4615384615386], [533.0, 1516.857142857143], [535.0, 2027.0], [534.0, 1926.85], [531.0, 1670.2857142857142], [520.0, 1659.4], [551.0, 1773.178571428571], [546.0, 1562.1250000000002], [545.0, 1808.6999999999998], [544.0, 2221.222222222222], [558.0, 1801.5999999999997], [559.0, 1914.5454545454545], [556.0, 1409.4285714285713], [557.0, 1461.28], [547.0, 1778.1428571428573], [548.0, 1450.3043478260872], [550.0, 1407.8], [549.0, 1810.5238095238094], [561.0, 1583.75], [560.0, 1871.1599999999999], [569.0, 1646.6944444444448], [570.0, 1682.7837837837837], [571.0, 1438.8292682926829], [572.0, 1807.8684210526314], [573.0, 1480.478260869565], [574.0, 1937.5405405405404], [568.0, 1773.24], [575.0, 1858.9166666666665], [562.0, 1799.6296296296298], [564.0, 1387.1200000000003], [565.0, 1509.1250000000002], [567.0, 1613.2], [566.0, 970.9375], [563.0, 1093.9130434782605], [552.0, 1899.0789473684208], [553.0, 2044.6666666666672], [554.0, 1445.8709677419354], [555.0, 1431.0454545454545], [582.0, 1662.1363636363635], [577.0, 1695.769230769231], [576.0, 1818.2000000000003], [591.0, 532.5], [590.0, 1699.142857142857], [589.0, 1630.2500000000002], [586.0, 1528.2857142857142], [587.0, 1970.2222222222222], [588.0, 2102.0], [579.0, 1978.9166666666667], [578.0, 1481.608695652174], [580.0, 1424.4], [581.0, 1480.8695652173917], [583.0, 1485.2857142857142], [600.0, 2006.25], [601.0, 1538.8], [603.0, 2181.166666666667], [605.0, 2447.5], [607.0, 2605.75], [606.0, 2453.25], [604.0, 2174.3333333333335], [592.0, 1346.0], [593.0, 1458.8181818181818], [595.0, 1832.0], [596.0, 1662.625], [597.0, 2194.25], [598.0, 1342.6], [594.0, 1924.0], [584.0, 1661.3333333333333], [585.0, 1402.0], [611.0, 1228.8], [608.0, 368.6], [622.0, 2289.571428571429], [621.0, 1692.5], [623.0, 1295.6], [619.0, 2178.6], [620.0, 2628.5], [610.0, 1715.2666666666669], [609.0, 2584.8], [612.0, 2139.1111111111113], [613.0, 2242.8181818181815], [614.0, 1279.0], [615.0, 1959.0], [624.0, 2313.0], [638.0, 1962.8333333333333], [639.0, 2343.9090909090914], [636.0, 1711.85], [637.0, 2169.625], [634.0, 1123.5], [635.0, 1733.0], [632.0, 1932.4], [633.0, 704.6666666666666], [625.0, 1287.0714285714287], [626.0, 1182.0], [627.0, 2358.0], [628.0, 2230.3333333333335], [629.0, 2.0], [630.0, 687.3333333333333], [631.0, 877.4], [616.0, 2053.6], [617.0, 2.0], [618.0, 2588.0], [647.0, 1761.714285714286], [643.0, 1875.3181818181818], [644.0, 1871.8999999999996], [640.0, 2271.083333333333], [655.0, 1618.75], [654.0, 2140.7272727272725], [652.0, 1940.7666666666667], [653.0, 2070.85], [641.0, 1691.8000000000002], [642.0, 2161.500000000001], [645.0, 1814.1666666666667], [656.0, 1711.8], [671.0, 870.9166666666666], [670.0, 1572.1666666666665], [669.0, 726.1666666666667], [668.0, 1937.5], [666.0, 582.3333333333333], [667.0, 1122.0], [664.0, 1954.111111111111], [665.0, 1763.8999999999999], [657.0, 1896.0], [658.0, 1684.8125], [659.0, 1600.2105263157896], [661.0, 1720.0000000000002], [660.0, 1252.5], [663.0, 1878.6666666666667], [662.0, 1515.1666666666667], [646.0, 2096.9], [648.0, 1553.3666666666663], [649.0, 1471.357142857143], [650.0, 2200.846153846154], [651.0, 2152.5806451612902], [675.0, 1980.3846153846155], [672.0, 1785.25], [682.0, 2042.0], [673.0, 1963.4444444444443], [674.0, 1378.5624999999998], [678.0, 2037.4], [677.0, 2177.3333333333335], [676.0, 1896.357142857143], [679.0, 2678.166666666667], [680.0, 1772.4], [681.0, 641.0], [1.0, 1.2881490289338076]], "isOverall": false, "label": "Get drug suggestions", "isController": false}, {"data": [[87.48458000000015, 221.33560000000082]], "isOverall": false, "label": "Get drug suggestions-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 682.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 59633.26666666667, "minX": 1.71673548E12, "maxY": 1011917.95, "series": [{"data": [[1.71673566E12, 981522.55], [1.71673548E12, 59633.26666666667], [1.71673578E12, 1011917.95], [1.7167356E12, 962343.25], [1.71673572E12, 937769.6333333333], [1.71673554E12, 989153.2333333333], [1.71673584E12, 436438.5833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71673566E12, 543052.0], [1.71673548E12, 176957.43333333332], [1.71673578E12, 534768.35], [1.7167356E12, 552500.9166666666], [1.71673572E12, 560537.8333333334], [1.71673554E12, 542339.05], [1.71673584E12, 410019.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673584E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 28.170830441822932, "minX": 1.71673548E12, "maxY": 637.9859018510552, "series": [{"data": [[1.71673566E12, 70.93275891197815], [1.71673548E12, 250.15371762740213], [1.71673578E12, 46.02291052660859], [1.7167356E12, 248.58560367077752], [1.71673572E12, 28.170830441822932], [1.71673554E12, 90.10344245696942], [1.71673584E12, 210.53733575472734]], "isOverall": false, "label": "Create pharmacy", "isController": false}, {"data": [[1.71673566E12, 91.95258059033502], [1.71673548E12, 475.6794871794869], [1.71673578E12, 58.03036179289694], [1.7167356E12, 436.88072976054485], [1.71673572E12, 33.0283351645177], [1.71673554E12, 233.75063355296484], [1.71673584E12, 637.9859018510552]], "isOverall": false, "label": "Get drug suggestions", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673584E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9.874862661192312, "minX": 1.71673548E12, "maxY": 626.5478906586308, "series": [{"data": [[1.71673566E12, 49.3322633327702], [1.71673548E12, 245.4381787802848], [1.71673578E12, 18.761107712839884], [1.7167356E12, 231.63745339833704], [1.71673572E12, 10.845130696275728], [1.71673554E12, 68.70823489706402], [1.71673584E12, 204.1349214827469]], "isOverall": false, "label": "Create pharmacy", "isController": false}, {"data": [[1.71673566E12, 62.58183672313114], [1.71673548E12, 467.8304383788251], [1.71673578E12, 20.106210870408333], [1.7167356E12, 411.48517673887926], [1.71673572E12, 9.874862661192312], [1.71673554E12, 203.59959452610352], [1.71673584E12, 626.5478906586308]], "isOverall": false, "label": "Get drug suggestions", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673584E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.01294903926482871, "minX": 1.71673548E12, "maxY": 37.539752894897, "series": [{"data": [[1.71673566E12, 20.710705637213543], [1.71673548E12, 0.01294903926482871], [1.71673578E12, 26.7668909525664], [1.7167356E12, 14.837109262976725], [1.71673572E12, 17.022322461253765], [1.71673554E12, 19.631173360333104], [1.71673584E12, 2.855784638393336]], "isOverall": false, "label": "Create pharmacy", "isController": false}, {"data": [[1.71673566E12, 27.82941476403601], [1.71673548E12, 0.7224979321753519], [1.71673578E12, 37.539752894897], [1.7167356E12, 19.731927023945243], [1.71673572E12, 23.1000983056728], [1.71673554E12, 26.911922058906512], [1.71673584E12, 3.2864829961256916]], "isOverall": false, "label": "Get drug suggestions", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673584E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.71673548E12, "maxY": 4332.0, "series": [{"data": [[1.71673566E12, 3182.0], [1.71673548E12, 1677.0], [1.71673578E12, 825.0], [1.7167356E12, 4332.0], [1.71673572E12, 411.0], [1.71673554E12, 2059.0], [1.71673584E12, 2931.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71673566E12, 11.0], [1.71673548E12, 11.0], [1.71673578E12, 12.0], [1.7167356E12, 12.0], [1.71673572E12, 11.0], [1.71673554E12, 12.0], [1.71673584E12, 15.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71673566E12, 463.7000000000007], [1.71673548E12, 982.0], [1.71673578E12, 113.0], [1.7167356E12, 2016.0], [1.71673572E12, 30.0], [1.71673554E12, 917.0], [1.71673584E12, 1418.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71673566E12, 1493.2799999999988], [1.71673548E12, 1348.8600000000006], [1.71673578E12, 496.0], [1.7167356E12, 3104.5], [1.71673572E12, 170.0], [1.71673554E12, 1406.0], [1.71673584E12, 2152.9999999999964]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71673566E12, 21.0], [1.71673548E12, 218.0], [1.71673578E12, 18.0], [1.7167356E12, 567.0], [1.71673572E12, 18.0], [1.71673554E12, 209.5], [1.71673584E12, 539.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71673566E12, 783.3499999999985], [1.71673548E12, 1135.1499999999996], [1.71673578E12, 289.0], [1.7167356E12, 2372.5], [1.71673572E12, 57.0], [1.71673554E12, 1118.0], [1.71673584E12, 1613.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673584E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 206.0, "maxY": 1966.0, "series": [{"data": [[206.0, 130.5], [237.0, 520.0], [251.0, 1016.0], [261.0, 420.0], [276.0, 531.5], [281.0, 857.0], [279.0, 25.0], [301.0, 340.0], [296.0, 20.0], [297.0, 20.0], [316.0, 74.5], [309.0, 470.0], [317.0, 215.0], [306.0, 19.0], [314.0, 19.0], [333.0, 685.0], [328.0, 59.5], [324.0, 18.0], [331.0, 768.0], [329.0, 1218.0], [335.0, 651.0], [322.0, 20.0], [321.0, 19.0], [323.0, 20.0], [348.0, 39.0], [350.0, 358.5], [349.0, 258.0], [344.0, 38.0], [338.0, 258.0], [336.0, 423.0], [343.0, 1829.0], [341.0, 18.0], [337.0, 175.0], [339.0, 18.0], [355.0, 40.0], [362.0, 339.0], [363.0, 18.0], [356.0, 123.5], [359.0, 33.0], [360.0, 790.0], [366.0, 19.0], [367.0, 17.0], [357.0, 193.5], [354.0, 639.5], [365.0, 17.0], [364.0, 624.5], [382.0, 18.0], [379.0, 28.0], [370.0, 42.0], [378.0, 25.0], [376.0, 18.0], [377.0, 18.0], [381.0, 427.0], [371.0, 18.0], [374.0, 18.0], [372.0, 22.0], [368.0, 17.0], [369.0, 19.0], [387.0, 17.0], [384.0, 18.0], [391.0, 88.0], [397.0, 226.5], [396.0, 17.0], [385.0, 17.0], [386.0, 18.0], [395.0, 280.0], [393.0, 25.0], [394.0, 675.5], [398.0, 139.0], [390.0, 17.0], [389.0, 28.5], [392.0, 21.0], [399.0, 19.0], [402.0, 19.0], [414.0, 52.0], [407.0, 489.0], [408.0, 20.0], [401.0, 16.0], [400.0, 22.0], [411.0, 17.0], [412.0, 361.5], [413.0, 18.0], [409.0, 17.0], [418.0, 17.5], [430.0, 20.0], [426.0, 125.0], [419.0, 16.0], [429.0, 439.0], [422.0, 1152.5], [416.0, 662.0], [425.0, 385.0], [421.0, 20.0], [420.0, 17.0], [427.0, 336.0], [444.0, 1378.0], [441.0, 329.0], [437.0, 612.0], [436.0, 972.5], [434.0, 1719.5], [443.0, 967.0], [442.0, 213.5], [435.0, 230.0], [447.0, 18.0], [446.0, 626.0], [440.0, 332.0], [433.0, 406.0], [463.0, 233.0], [448.0, 445.5], [460.0, 604.5], [453.0, 106.0], [456.0, 17.0], [452.0, 17.0], [451.0, 829.5], [467.0, 486.0], [475.0, 589.5], [469.0, 306.0], [476.0, 552.0], [473.0, 30.0], [470.0, 162.0], [466.0, 1160.0], [477.0, 30.0], [468.0, 18.0], [472.0, 728.0], [484.0, 504.0], [491.0, 48.0], [493.0, 21.5], [494.0, 19.0], [485.0, 17.0], [489.0, 616.0], [504.0, 1754.0], [503.0, 55.0], [511.0, 407.0], [499.0, 182.0], [496.0, 21.0], [502.0, 17.0], [510.0, 17.0], [509.0, 428.0], [538.0, 17.0], [513.0, 203.5], [541.0, 18.0], [527.0, 122.0], [542.0, 18.0], [529.0, 17.0], [535.0, 17.0], [526.0, 17.0], [525.0, 520.0], [519.0, 17.0], [518.0, 17.0], [515.0, 545.5], [569.0, 71.0], [558.0, 60.0], [575.0, 17.0], [552.0, 16.5], [574.0, 17.0], [590.0, 53.0], [596.0, 17.0], [583.0, 109.0], [585.0, 17.0], [626.0, 79.5], [618.0, 17.0], [646.0, 21.0], [671.0, 17.0], [698.0, 1966.0], [699.0, 16.0], [685.0, 93.0], [724.0, 18.0], [734.0, 734.0], [711.0, 59.0], [704.0, 26.0], [710.0, 17.0], [735.0, 1002.0], [754.0, 1739.0], [756.0, 178.0], [736.0, 24.0], [798.0, 399.0], [795.0, 1347.5], [796.0, 68.0], [790.0, 49.0], [789.0, 72.5], [819.0, 17.0], [863.0, 92.0], [875.0, 107.5], [873.0, 24.0], [888.0, 24.0], [869.0, 133.5], [904.0, 16.5], [906.0, 34.5], [907.0, 269.0], [922.0, 58.5], [898.0, 30.0], [932.0, 121.5], [937.0, 60.0], [945.0, 65.5], [931.0, 99.0], [956.0, 22.5], [928.0, 24.0], [987.0, 22.0], [961.0, 431.0], [985.0, 177.0], [979.0, 32.0], [968.0, 61.0], [986.0, 25.5], [982.0, 45.0], [1015.0, 19.5], [992.0, 19.0], [1016.0, 24.0], [1062.0, 14.5], [1072.0, 27.5], [1037.0, 48.5], [1070.0, 13.5], [1083.0, 52.0], [1061.0, 29.0], [1082.0, 24.0], [1036.0, 38.0], [1089.0, 49.0], [1109.0, 17.5], [1167.0, 20.5], [1194.0, 92.0], [1247.0, 28.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[344.0, 2.0], [338.0, 2.0], [337.0, 3.0], [339.0, 3.0], [366.0, 2.0], [357.0, 3.0], [359.0, 2.0], [370.0, 4.0], [378.0, 2.0], [379.0, 3.0], [377.0, 7.0], [372.0, 3.0], [397.0, 3.0], [391.0, 2.0], [389.0, 1.0], [384.0, 3.0], [399.0, 6.0], [393.0, 2.0], [394.0, 2.0], [396.0, 2.0], [392.0, 3.0], [386.0, 2.0], [407.0, 2.0], [411.0, 2.0], [402.0, 5.0], [409.0, 12.0], [413.0, 5.0], [412.0, 2.0], [400.0, 2.0], [408.0, 1.0], [430.0, 2.0], [422.0, 1.0], [425.0, 2.0], [418.0, 2.0], [421.0, 4.0], [420.0, 7.0], [427.0, 2.0], [429.0, 2.5], [416.0, 2.0], [444.0, 1.0], [441.0, 1.0], [437.0, 3.0], [436.0, 1.0], [434.0, 1.0], [443.0, 2.0], [442.0, 2.0], [447.0, 5.0], [446.0, 1.0], [433.0, 3.0], [440.0, 3.0], [463.0, 17.0], [448.0, 2.0], [460.0, 2.0], [453.0, 9.0], [456.0, 1.0], [452.0, 2.0], [451.0, 3.0], [467.0, 3.0], [475.0, 1.5], [469.0, 2.0], [476.0, 3.0], [473.0, 15.0], [470.0, 2.0], [466.0, 1.0], [477.0, 1.0], [468.0, 16.0], [472.0, 3.0], [484.0, 2.0], [491.0, 3.0], [493.0, 7.0], [494.0, 2.0], [485.0, 2.0], [489.0, 1.0], [504.0, 1.0], [503.0, 3.0], [511.0, 2.0], [499.0, 2.0], [496.0, 20.0], [502.0, 2.0], [510.0, 39.0], [509.0, 3.0], [538.0, 1.0], [513.0, 2.0], [541.0, 18.0], [527.0, 2.0], [542.0, 1.0], [529.0, 1.0], [535.0, 2.0], [526.0, 20.0], [525.0, 2.0], [519.0, 48.0], [518.0, 20.0], [515.0, 1.0], [569.0, 2.0], [558.0, 24.5], [575.0, 1.0], [552.0, 31.0], [574.0, 46.0], [590.0, 27.0], [596.0, 50.0], [583.0, 2.0], [585.0, 1.0], [603.0, 2.0], [626.0, 41.0], [618.0, 1.0], [646.0, 1.0], [671.0, 1.0], [698.0, 2.0], [699.0, 2.0], [685.0, 33.0], [724.0, 34.0], [734.0, 2.0], [711.0, 2.0], [704.0, 2.0], [710.0, 2.0], [735.0, 2.0], [754.0, 2.0], [756.0, 10.0], [736.0, 75.0], [767.0, 73.0], [798.0, 2.0], [795.0, 2.0], [796.0, 9.0], [790.0, 1.0], [789.0, 121.0], [819.0, 61.0], [863.0, 76.0], [840.0, 68.5], [875.0, 58.0], [888.0, 3.0], [884.0, 64.0], [873.0, 60.0], [869.0, 73.0], [897.0, 77.0], [904.0, 58.0], [913.0, 63.0], [916.0, 1.0], [919.0, 43.0], [901.0, 97.0], [906.0, 14.0], [907.0, 2.0], [922.0, 54.0], [898.0, 63.5], [932.0, 2.0], [950.0, 49.0], [937.0, 7.0], [945.0, 41.0], [931.0, 49.5], [956.0, 2.0], [928.0, 61.0], [986.0, 33.0], [987.0, 18.0], [961.0, 70.0], [985.0, 27.0], [979.0, 2.0], [968.0, 27.0], [981.0, 57.0], [982.0, 43.0], [1015.0, 2.0], [1013.0, 80.0], [992.0, 75.0], [994.0, 2.0], [1016.0, 1.0], [1017.0, 44.0], [1004.0, 72.0], [1007.0, 2.0], [1072.0, 2.0], [1028.0, 2.0], [1062.0, 1.0], [1061.0, 52.0], [1056.0, 1.0], [1057.0, 28.0], [1064.0, 2.0], [1070.0, 2.0], [1068.0, 1.0], [1047.0, 2.0], [1026.0, 14.0], [1081.0, 4.0], [1083.0, 2.0], [1082.0, 31.0], [1086.0, 1.0], [1037.0, 43.0], [1036.0, 23.0], [1038.0, 21.0], [1104.0, 1.0], [1132.0, 63.5], [1089.0, 7.5], [1091.0, 52.0], [1090.0, 1.0], [1108.0, 1.0], [1109.0, 8.0], [1167.0, 43.0], [1194.0, 59.0], [1176.0, 127.5], [1247.0, 18.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1247.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 206.0, "maxY": 1916.0, "series": [{"data": [[206.0, 122.0], [237.0, 513.0], [251.0, 1009.0], [261.0, 407.0], [276.0, 514.5], [281.0, 845.0], [279.0, 24.0], [301.0, 333.0], [296.0, 20.0], [297.0, 19.0], [316.0, 70.5], [309.0, 452.0], [317.0, 206.0], [306.0, 18.0], [314.0, 19.0], [333.0, 676.0], [328.0, 53.0], [324.0, 18.0], [331.0, 759.5], [329.0, 1207.0], [335.0, 648.0], [322.0, 20.0], [321.0, 19.0], [323.0, 20.0], [348.0, 36.0], [350.0, 354.5], [349.0, 255.0], [344.0, 37.0], [338.0, 251.0], [336.0, 416.5], [343.0, 1823.0], [341.0, 18.0], [337.0, 161.0], [339.0, 18.0], [355.0, 37.0], [362.0, 332.5], [363.0, 17.0], [356.0, 118.0], [359.0, 31.5], [360.0, 783.0], [366.0, 19.0], [367.0, 17.0], [357.0, 187.0], [354.0, 635.5], [365.0, 17.0], [364.0, 617.0], [382.0, 17.0], [379.0, 27.0], [370.0, 40.0], [378.0, 25.0], [376.0, 18.0], [377.0, 18.0], [381.0, 416.0], [371.0, 17.0], [374.0, 17.0], [372.0, 22.0], [368.0, 17.0], [369.0, 19.0], [387.0, 17.0], [384.0, 18.0], [391.0, 83.0], [397.0, 219.0], [396.0, 16.0], [385.0, 16.0], [386.0, 17.0], [395.0, 276.0], [393.0, 25.0], [394.0, 670.0], [398.0, 125.5], [390.0, 17.0], [389.0, 28.0], [392.0, 20.0], [399.0, 19.0], [402.0, 18.0], [414.0, 49.0], [407.0, 485.0], [408.0, 20.0], [401.0, 16.0], [400.0, 22.0], [411.0, 16.0], [412.0, 358.0], [413.0, 18.0], [409.0, 17.0], [418.0, 17.0], [430.0, 19.0], [426.0, 119.0], [419.0, 16.0], [429.0, 431.0], [422.0, 1148.5], [416.0, 656.0], [425.0, 380.0], [421.0, 19.0], [420.0, 17.0], [427.0, 328.0], [444.0, 1373.0], [441.0, 323.5], [437.0, 608.0], [436.0, 968.0], [434.0, 1714.5], [443.0, 962.0], [442.0, 203.5], [435.0, 223.0], [447.0, 18.0], [446.0, 618.0], [440.0, 322.0], [433.0, 392.5], [463.0, 227.0], [448.0, 436.0], [460.0, 591.5], [453.0, 101.0], [456.0, 17.0], [452.0, 17.0], [451.0, 820.0], [467.0, 476.0], [475.0, 573.5], [469.0, 296.0], [476.0, 548.0], [473.0, 29.0], [470.0, 152.0], [466.0, 1155.0], [477.0, 29.0], [468.0, 18.0], [472.0, 722.0], [484.0, 491.5], [491.0, 44.5], [493.0, 21.0], [494.0, 19.0], [485.0, 16.0], [489.0, 611.0], [504.0, 1750.5], [503.0, 50.0], [511.0, 376.0], [499.0, 168.0], [496.0, 20.0], [502.0, 17.0], [510.0, 17.0], [509.0, 419.0], [538.0, 17.0], [513.0, 198.0], [541.0, 18.0], [527.0, 117.0], [542.0, 17.0], [529.0, 16.0], [535.0, 17.0], [526.0, 17.0], [525.0, 504.0], [519.0, 17.0], [518.0, 17.0], [515.0, 539.5], [569.0, 66.0], [558.0, 55.0], [575.0, 17.0], [552.0, 16.0], [574.0, 17.0], [590.0, 48.0], [596.0, 17.0], [583.0, 103.0], [585.0, 17.0], [626.0, 75.0], [618.0, 16.0], [646.0, 20.0], [671.0, 16.0], [698.0, 1916.0], [699.0, 16.0], [685.0, 88.0], [724.0, 18.0], [734.0, 730.0], [711.0, 54.0], [704.0, 25.0], [710.0, 17.0], [735.0, 997.0], [754.0, 1734.0], [756.0, 174.0], [736.0, 23.0], [798.0, 394.0], [795.0, 1341.0], [796.0, 62.0], [790.0, 45.0], [789.0, 72.0], [819.0, 17.0], [863.0, 91.0], [875.0, 102.5], [873.0, 24.0], [888.0, 24.0], [869.0, 125.5], [904.0, 16.5], [906.0, 34.5], [907.0, 264.0], [922.0, 58.5], [898.0, 30.0], [932.0, 108.5], [937.0, 54.0], [945.0, 62.5], [931.0, 96.0], [956.0, 22.0], [928.0, 23.0], [987.0, 21.0], [961.0, 427.0], [985.0, 174.0], [979.0, 31.0], [968.0, 50.0], [986.0, 25.5], [982.0, 41.0], [1015.0, 19.0], [992.0, 19.0], [1016.0, 23.0], [1062.0, 14.5], [1072.0, 27.5], [1037.0, 47.5], [1070.0, 13.0], [1083.0, 52.0], [1061.0, 29.0], [1082.0, 24.0], [1036.0, 38.0], [1089.0, 49.0], [1109.0, 17.5], [1167.0, 20.5], [1194.0, 92.0], [1247.0, 28.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[344.0, 0.0], [338.0, 0.0], [337.0, 0.0], [339.0, 0.0], [366.0, 0.0], [357.0, 0.0], [359.0, 0.0], [370.0, 0.0], [378.0, 0.0], [379.0, 0.0], [377.0, 0.0], [372.0, 0.0], [397.0, 0.0], [391.0, 0.0], [389.0, 0.0], [384.0, 0.0], [399.0, 0.0], [393.0, 0.0], [394.0, 0.0], [396.0, 0.0], [392.0, 0.0], [386.0, 0.0], [407.0, 0.0], [411.0, 0.0], [402.0, 0.0], [409.0, 0.0], [413.0, 0.0], [412.0, 0.0], [400.0, 0.0], [408.0, 0.0], [430.0, 0.0], [422.0, 0.0], [425.0, 0.0], [418.0, 0.0], [421.0, 0.0], [420.0, 0.0], [427.0, 0.0], [429.0, 0.0], [416.0, 0.0], [444.0, 0.0], [441.0, 0.0], [437.0, 0.0], [436.0, 0.0], [434.0, 0.0], [443.0, 0.0], [442.0, 0.0], [447.0, 0.0], [446.0, 0.0], [433.0, 0.0], [440.0, 0.0], [463.0, 0.0], [448.0, 0.0], [460.0, 0.0], [453.0, 0.0], [456.0, 0.0], [452.0, 0.0], [451.0, 0.0], [467.0, 0.0], [475.0, 0.0], [469.0, 0.0], [476.0, 0.0], [473.0, 0.0], [470.0, 0.0], [466.0, 0.0], [477.0, 0.0], [468.0, 0.0], [472.0, 0.0], [484.0, 0.0], [491.0, 0.0], [493.0, 0.0], [494.0, 0.0], [485.0, 0.0], [489.0, 0.0], [504.0, 0.0], [503.0, 0.0], [511.0, 0.0], [499.0, 0.0], [496.0, 0.0], [502.0, 0.0], [510.0, 0.0], [509.0, 0.0], [538.0, 0.0], [513.0, 0.0], [541.0, 0.0], [527.0, 0.0], [542.0, 0.0], [529.0, 0.0], [535.0, 0.0], [526.0, 0.0], [525.0, 0.0], [519.0, 0.0], [518.0, 0.0], [515.0, 0.0], [569.0, 0.0], [558.0, 0.0], [575.0, 0.0], [552.0, 0.0], [574.0, 0.0], [590.0, 0.0], [596.0, 0.0], [583.0, 0.0], [585.0, 0.0], [603.0, 0.0], [626.0, 0.0], [618.0, 0.0], [646.0, 0.0], [671.0, 0.0], [698.0, 0.0], [699.0, 0.0], [685.0, 0.0], [724.0, 0.0], [734.0, 0.0], [711.0, 0.0], [704.0, 0.0], [710.0, 0.0], [735.0, 0.0], [754.0, 0.0], [756.0, 0.0], [736.0, 0.0], [767.0, 0.0], [798.0, 0.0], [795.0, 0.0], [796.0, 0.0], [790.0, 0.0], [789.0, 0.0], [819.0, 0.0], [863.0, 0.0], [840.0, 0.0], [875.0, 0.0], [888.0, 0.0], [884.0, 0.0], [873.0, 0.0], [869.0, 0.0], [897.0, 0.0], [904.0, 0.0], [913.0, 0.0], [916.0, 0.0], [919.0, 0.0], [901.0, 0.0], [906.0, 0.0], [907.0, 0.0], [922.0, 0.0], [898.0, 0.0], [932.0, 0.0], [950.0, 0.0], [937.0, 0.0], [945.0, 0.0], [931.0, 0.0], [956.0, 0.0], [928.0, 0.0], [986.0, 0.0], [987.0, 0.0], [961.0, 0.0], [985.0, 0.0], [979.0, 0.0], [968.0, 0.0], [981.0, 0.0], [982.0, 0.0], [1015.0, 0.0], [1013.0, 0.0], [992.0, 0.0], [994.0, 0.0], [1016.0, 0.0], [1017.0, 0.0], [1004.0, 0.0], [1007.0, 0.0], [1072.0, 0.0], [1028.0, 0.0], [1062.0, 0.0], [1061.0, 0.0], [1056.0, 0.0], [1057.0, 0.0], [1064.0, 0.0], [1070.0, 0.0], [1068.0, 0.0], [1047.0, 0.0], [1026.0, 0.0], [1081.0, 0.0], [1083.0, 0.0], [1082.0, 0.0], [1086.0, 0.0], [1037.0, 0.0], [1036.0, 0.0], [1038.0, 0.0], [1104.0, 0.0], [1132.0, 0.0], [1089.0, 0.0], [1091.0, 0.0], [1090.0, 0.0], [1108.0, 0.0], [1109.0, 0.0], [1167.0, 0.0], [1194.0, 0.0], [1176.0, 0.0], [1247.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1247.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 81.63333333333334, "minX": 1.71673548E12, "maxY": 602.8333333333334, "series": [{"data": [[1.71673566E12, 586.2166666666667], [1.71673548E12, 81.63333333333334], [1.71673578E12, 602.8333333333334], [1.7167356E12, 586.7833333333333], [1.71673572E12, 576.45], [1.71673554E12, 590.9333333333333], [1.71673584E12, 308.48333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673584E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.9333333333333333, "minX": 1.71673548E12, "maxY": 361.03333333333336, "series": [{"data": [[1.71673566E12, 243.2], [1.71673548E12, 79.26666666666667], [1.71673578E12, 239.5], [1.7167356E12, 247.48333333333332], [1.71673572E12, 251.06666666666666], [1.71673554E12, 242.9], [1.71673584E12, 183.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71673548E12, 0.9333333333333333], [1.7167356E12, 11.183333333333334], [1.71673554E12, 6.016666666666667], [1.71673584E12, 27.133333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.71673566E12, 346.93333333333334], [1.71673578E12, 361.03333333333336], [1.7167356E12, 324.25], [1.71673572E12, 325.35], [1.71673554E12, 343.3333333333333], [1.71673584E12, 100.1]], "isOverall": false, "label": "Non HTTP response code: java.net.BindException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673584E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.71673548E12, "maxY": 184.2, "series": [{"data": [[1.71673566E12, 125.6], [1.71673548E12, 39.43333333333333], [1.71673578E12, 122.88333333333334], [1.7167356E12, 123.53333333333333], [1.71673572E12, 126.7], [1.71673554E12, 123.85], [1.71673584E12, 92.58333333333333]], "isOverall": false, "label": "Create pharmacy-success", "isController": false}, {"data": [[1.71673566E12, 117.6], [1.71673548E12, 39.833333333333336], [1.71673578E12, 116.61666666666666], [1.7167356E12, 123.95], [1.71673572E12, 124.36666666666666], [1.71673554E12, 119.05], [1.71673584E12, 91.06666666666666]], "isOverall": false, "label": "Get drug suggestions-success", "isController": false}, {"data": [[1.71673566E12, 176.58333333333334], [1.71673548E12, 0.4666666666666667], [1.71673578E12, 184.2], [1.7167356E12, 168.38333333333333], [1.71673572E12, 163.85], [1.71673554E12, 176.9], [1.71673584E12, 63.8]], "isOverall": false, "label": "Get drug suggestions-failure", "isController": false}, {"data": [[1.71673566E12, 170.35], [1.71673548E12, 0.4666666666666667], [1.71673578E12, 176.83333333333334], [1.7167356E12, 167.05], [1.71673572E12, 161.5], [1.71673554E12, 172.45], [1.71673584E12, 63.43333333333333]], "isOverall": false, "label": "Create pharmacy-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673584E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.9333333333333333, "minX": 1.71673548E12, "maxY": 361.03333333333336, "series": [{"data": [[1.71673566E12, 243.2], [1.71673548E12, 79.26666666666667], [1.71673578E12, 239.5], [1.7167356E12, 247.48333333333332], [1.71673572E12, 251.06666666666666], [1.71673554E12, 242.9], [1.71673584E12, 183.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71673566E12, 346.93333333333334], [1.71673548E12, 0.9333333333333333], [1.71673578E12, 361.03333333333336], [1.7167356E12, 335.43333333333334], [1.71673572E12, 325.35], [1.71673554E12, 349.35], [1.71673584E12, 127.23333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673584E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

