/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1719.0, "minX": 0.0, "maxY": 5525.0, "series": [{"data": [[0.0, 1719.0], [0.1, 1719.0], [0.2, 1719.0], [0.3, 1719.0], [0.4, 1719.0], [0.5, 1719.0], [0.6, 1719.0], [0.7, 1719.0], [0.8, 1719.0], [0.9, 1719.0], [1.0, 1742.0], [1.1, 1742.0], [1.2, 1742.0], [1.3, 1742.0], [1.4, 1742.0], [1.5, 1742.0], [1.6, 1742.0], [1.7, 1742.0], [1.8, 1742.0], [1.9, 1742.0], [2.0, 1758.0], [2.1, 1758.0], [2.2, 1758.0], [2.3, 1758.0], [2.4, 1758.0], [2.5, 1758.0], [2.6, 1758.0], [2.7, 1758.0], [2.8, 1758.0], [2.9, 1758.0], [3.0, 1774.0], [3.1, 1774.0], [3.2, 1774.0], [3.3, 1774.0], [3.4, 1774.0], [3.5, 1774.0], [3.6, 1774.0], [3.7, 1774.0], [3.8, 1774.0], [3.9, 1774.0], [4.0, 1786.0], [4.1, 1786.0], [4.2, 1786.0], [4.3, 1786.0], [4.4, 1786.0], [4.5, 1786.0], [4.6, 1786.0], [4.7, 1786.0], [4.8, 1786.0], [4.9, 1786.0], [5.0, 1789.0], [5.1, 1789.0], [5.2, 1789.0], [5.3, 1789.0], [5.4, 1789.0], [5.5, 1789.0], [5.6, 1789.0], [5.7, 1789.0], [5.8, 1789.0], [5.9, 1789.0], [6.0, 1791.0], [6.1, 1791.0], [6.2, 1791.0], [6.3, 1791.0], [6.4, 1791.0], [6.5, 1791.0], [6.6, 1791.0], [6.7, 1791.0], [6.8, 1791.0], [6.9, 1791.0], [7.0, 1798.0], [7.1, 1798.0], [7.2, 1798.0], [7.3, 1798.0], [7.4, 1798.0], [7.5, 1798.0], [7.6, 1798.0], [7.7, 1798.0], [7.8, 1798.0], [7.9, 1798.0], [8.0, 1808.0], [8.1, 1808.0], [8.2, 1808.0], [8.3, 1808.0], [8.4, 1808.0], [8.5, 1808.0], [8.6, 1808.0], [8.7, 1808.0], [8.8, 1808.0], [8.9, 1808.0], [9.0, 1809.0], [9.1, 1809.0], [9.2, 1809.0], [9.3, 1809.0], [9.4, 1809.0], [9.5, 1809.0], [9.6, 1809.0], [9.7, 1809.0], [9.8, 1809.0], [9.9, 1809.0], [10.0, 1809.0], [10.1, 1809.0], [10.2, 1809.0], [10.3, 1809.0], [10.4, 1809.0], [10.5, 1809.0], [10.6, 1809.0], [10.7, 1809.0], [10.8, 1809.0], [10.9, 1809.0], [11.0, 1820.0], [11.1, 1820.0], [11.2, 1820.0], [11.3, 1820.0], [11.4, 1820.0], [11.5, 1820.0], [11.6, 1820.0], [11.7, 1820.0], [11.8, 1820.0], [11.9, 1820.0], [12.0, 1822.0], [12.1, 1822.0], [12.2, 1822.0], [12.3, 1822.0], [12.4, 1822.0], [12.5, 1822.0], [12.6, 1822.0], [12.7, 1822.0], [12.8, 1822.0], [12.9, 1822.0], [13.0, 1823.0], [13.1, 1823.0], [13.2, 1823.0], [13.3, 1823.0], [13.4, 1823.0], [13.5, 1823.0], [13.6, 1823.0], [13.7, 1823.0], [13.8, 1823.0], [13.9, 1823.0], [14.0, 1826.0], [14.1, 1826.0], [14.2, 1826.0], [14.3, 1826.0], [14.4, 1826.0], [14.5, 1826.0], [14.6, 1826.0], [14.7, 1826.0], [14.8, 1826.0], [14.9, 1826.0], [15.0, 1831.0], [15.1, 1831.0], [15.2, 1831.0], [15.3, 1831.0], [15.4, 1831.0], [15.5, 1831.0], [15.6, 1831.0], [15.7, 1831.0], [15.8, 1831.0], [15.9, 1831.0], [16.0, 1832.0], [16.1, 1832.0], [16.2, 1832.0], [16.3, 1832.0], [16.4, 1832.0], [16.5, 1832.0], [16.6, 1832.0], [16.7, 1832.0], [16.8, 1832.0], [16.9, 1832.0], [17.0, 1833.0], [17.1, 1833.0], [17.2, 1833.0], [17.3, 1833.0], [17.4, 1833.0], [17.5, 1833.0], [17.6, 1833.0], [17.7, 1833.0], [17.8, 1833.0], [17.9, 1833.0], [18.0, 1835.0], [18.1, 1835.0], [18.2, 1835.0], [18.3, 1835.0], [18.4, 1835.0], [18.5, 1835.0], [18.6, 1835.0], [18.7, 1835.0], [18.8, 1835.0], [18.9, 1835.0], [19.0, 1838.0], [19.1, 1838.0], [19.2, 1838.0], [19.3, 1838.0], [19.4, 1838.0], [19.5, 1838.0], [19.6, 1838.0], [19.7, 1838.0], [19.8, 1838.0], [19.9, 1838.0], [20.0, 1838.0], [20.1, 1838.0], [20.2, 1838.0], [20.3, 1838.0], [20.4, 1838.0], [20.5, 1838.0], [20.6, 1838.0], [20.7, 1838.0], [20.8, 1838.0], [20.9, 1838.0], [21.0, 1840.0], [21.1, 1840.0], [21.2, 1840.0], [21.3, 1840.0], [21.4, 1840.0], [21.5, 1840.0], [21.6, 1840.0], [21.7, 1840.0], [21.8, 1840.0], [21.9, 1840.0], [22.0, 1842.0], [22.1, 1842.0], [22.2, 1842.0], [22.3, 1842.0], [22.4, 1842.0], [22.5, 1842.0], [22.6, 1842.0], [22.7, 1842.0], [22.8, 1842.0], [22.9, 1842.0], [23.0, 1846.0], [23.1, 1846.0], [23.2, 1846.0], [23.3, 1846.0], [23.4, 1846.0], [23.5, 1846.0], [23.6, 1846.0], [23.7, 1846.0], [23.8, 1846.0], [23.9, 1846.0], [24.0, 1848.0], [24.1, 1848.0], [24.2, 1848.0], [24.3, 1848.0], [24.4, 1848.0], [24.5, 1848.0], [24.6, 1848.0], [24.7, 1848.0], [24.8, 1848.0], [24.9, 1848.0], [25.0, 1849.0], [25.1, 1849.0], [25.2, 1849.0], [25.3, 1849.0], [25.4, 1849.0], [25.5, 1849.0], [25.6, 1849.0], [25.7, 1849.0], [25.8, 1849.0], [25.9, 1849.0], [26.0, 1857.0], [26.1, 1857.0], [26.2, 1857.0], [26.3, 1857.0], [26.4, 1857.0], [26.5, 1857.0], [26.6, 1857.0], [26.7, 1857.0], [26.8, 1857.0], [26.9, 1857.0], [27.0, 1858.0], [27.1, 1858.0], [27.2, 1858.0], [27.3, 1858.0], [27.4, 1858.0], [27.5, 1858.0], [27.6, 1858.0], [27.7, 1858.0], [27.8, 1858.0], [27.9, 1858.0], [28.0, 1860.0], [28.1, 1860.0], [28.2, 1860.0], [28.3, 1860.0], [28.4, 1860.0], [28.5, 1860.0], [28.6, 1860.0], [28.7, 1860.0], [28.8, 1860.0], [28.9, 1860.0], [29.0, 1861.0], [29.1, 1861.0], [29.2, 1861.0], [29.3, 1861.0], [29.4, 1861.0], [29.5, 1861.0], [29.6, 1861.0], [29.7, 1861.0], [29.8, 1861.0], [29.9, 1861.0], [30.0, 1862.0], [30.1, 1862.0], [30.2, 1862.0], [30.3, 1862.0], [30.4, 1862.0], [30.5, 1862.0], [30.6, 1862.0], [30.7, 1862.0], [30.8, 1862.0], [30.9, 1862.0], [31.0, 1864.0], [31.1, 1864.0], [31.2, 1864.0], [31.3, 1864.0], [31.4, 1864.0], [31.5, 1864.0], [31.6, 1864.0], [31.7, 1864.0], [31.8, 1864.0], [31.9, 1864.0], [32.0, 1865.0], [32.1, 1865.0], [32.2, 1865.0], [32.3, 1865.0], [32.4, 1865.0], [32.5, 1865.0], [32.6, 1865.0], [32.7, 1865.0], [32.8, 1865.0], [32.9, 1865.0], [33.0, 1869.0], [33.1, 1869.0], [33.2, 1869.0], [33.3, 1869.0], [33.4, 1869.0], [33.5, 1869.0], [33.6, 1869.0], [33.7, 1869.0], [33.8, 1869.0], [33.9, 1869.0], [34.0, 1869.0], [34.1, 1869.0], [34.2, 1869.0], [34.3, 1869.0], [34.4, 1869.0], [34.5, 1869.0], [34.6, 1869.0], [34.7, 1869.0], [34.8, 1869.0], [34.9, 1869.0], [35.0, 1870.0], [35.1, 1870.0], [35.2, 1870.0], [35.3, 1870.0], [35.4, 1870.0], [35.5, 1870.0], [35.6, 1870.0], [35.7, 1870.0], [35.8, 1870.0], [35.9, 1870.0], [36.0, 1870.0], [36.1, 1870.0], [36.2, 1870.0], [36.3, 1870.0], [36.4, 1870.0], [36.5, 1870.0], [36.6, 1870.0], [36.7, 1870.0], [36.8, 1870.0], [36.9, 1870.0], [37.0, 1872.0], [37.1, 1872.0], [37.2, 1872.0], [37.3, 1872.0], [37.4, 1872.0], [37.5, 1872.0], [37.6, 1872.0], [37.7, 1872.0], [37.8, 1872.0], [37.9, 1872.0], [38.0, 1873.0], [38.1, 1873.0], [38.2, 1873.0], [38.3, 1873.0], [38.4, 1873.0], [38.5, 1873.0], [38.6, 1873.0], [38.7, 1873.0], [38.8, 1873.0], [38.9, 1873.0], [39.0, 1873.0], [39.1, 1873.0], [39.2, 1873.0], [39.3, 1873.0], [39.4, 1873.0], [39.5, 1873.0], [39.6, 1873.0], [39.7, 1873.0], [39.8, 1873.0], [39.9, 1873.0], [40.0, 1873.0], [40.1, 1873.0], [40.2, 1873.0], [40.3, 1873.0], [40.4, 1873.0], [40.5, 1873.0], [40.6, 1873.0], [40.7, 1873.0], [40.8, 1873.0], [40.9, 1873.0], [41.0, 1874.0], [41.1, 1874.0], [41.2, 1874.0], [41.3, 1874.0], [41.4, 1874.0], [41.5, 1874.0], [41.6, 1874.0], [41.7, 1874.0], [41.8, 1874.0], [41.9, 1874.0], [42.0, 1880.0], [42.1, 1880.0], [42.2, 1880.0], [42.3, 1880.0], [42.4, 1880.0], [42.5, 1880.0], [42.6, 1880.0], [42.7, 1880.0], [42.8, 1880.0], [42.9, 1880.0], [43.0, 1880.0], [43.1, 1880.0], [43.2, 1880.0], [43.3, 1880.0], [43.4, 1880.0], [43.5, 1880.0], [43.6, 1880.0], [43.7, 1880.0], [43.8, 1880.0], [43.9, 1880.0], [44.0, 1881.0], [44.1, 1881.0], [44.2, 1881.0], [44.3, 1881.0], [44.4, 1881.0], [44.5, 1881.0], [44.6, 1881.0], [44.7, 1881.0], [44.8, 1881.0], [44.9, 1881.0], [45.0, 1887.0], [45.1, 1887.0], [45.2, 1887.0], [45.3, 1887.0], [45.4, 1887.0], [45.5, 1887.0], [45.6, 1887.0], [45.7, 1887.0], [45.8, 1887.0], [45.9, 1887.0], [46.0, 1888.0], [46.1, 1888.0], [46.2, 1888.0], [46.3, 1888.0], [46.4, 1888.0], [46.5, 1888.0], [46.6, 1888.0], [46.7, 1888.0], [46.8, 1888.0], [46.9, 1888.0], [47.0, 1890.0], [47.1, 1890.0], [47.2, 1890.0], [47.3, 1890.0], [47.4, 1890.0], [47.5, 1890.0], [47.6, 1890.0], [47.7, 1890.0], [47.8, 1890.0], [47.9, 1890.0], [48.0, 1894.0], [48.1, 1894.0], [48.2, 1894.0], [48.3, 1894.0], [48.4, 1894.0], [48.5, 1894.0], [48.6, 1894.0], [48.7, 1894.0], [48.8, 1894.0], [48.9, 1894.0], [49.0, 1895.0], [49.1, 1895.0], [49.2, 1895.0], [49.3, 1895.0], [49.4, 1895.0], [49.5, 1895.0], [49.6, 1895.0], [49.7, 1895.0], [49.8, 1895.0], [49.9, 1895.0], [50.0, 1897.0], [50.1, 1897.0], [50.2, 1897.0], [50.3, 1897.0], [50.4, 1897.0], [50.5, 1897.0], [50.6, 1897.0], [50.7, 1897.0], [50.8, 1897.0], [50.9, 1897.0], [51.0, 1901.0], [51.1, 1901.0], [51.2, 1901.0], [51.3, 1901.0], [51.4, 1901.0], [51.5, 1901.0], [51.6, 1901.0], [51.7, 1901.0], [51.8, 1901.0], [51.9, 1901.0], [52.0, 1901.0], [52.1, 1901.0], [52.2, 1901.0], [52.3, 1901.0], [52.4, 1901.0], [52.5, 1901.0], [52.6, 1901.0], [52.7, 1901.0], [52.8, 1901.0], [52.9, 1901.0], [53.0, 1902.0], [53.1, 1902.0], [53.2, 1902.0], [53.3, 1902.0], [53.4, 1902.0], [53.5, 1902.0], [53.6, 1902.0], [53.7, 1902.0], [53.8, 1902.0], [53.9, 1902.0], [54.0, 1908.0], [54.1, 1908.0], [54.2, 1908.0], [54.3, 1908.0], [54.4, 1908.0], [54.5, 1908.0], [54.6, 1908.0], [54.7, 1908.0], [54.8, 1908.0], [54.9, 1908.0], [55.0, 1911.0], [55.1, 1911.0], [55.2, 1911.0], [55.3, 1911.0], [55.4, 1911.0], [55.5, 1911.0], [55.6, 1911.0], [55.7, 1911.0], [55.8, 1911.0], [55.9, 1911.0], [56.0, 1911.0], [56.1, 1911.0], [56.2, 1911.0], [56.3, 1911.0], [56.4, 1911.0], [56.5, 1911.0], [56.6, 1911.0], [56.7, 1911.0], [56.8, 1911.0], [56.9, 1911.0], [57.0, 1912.0], [57.1, 1912.0], [57.2, 1912.0], [57.3, 1912.0], [57.4, 1912.0], [57.5, 1912.0], [57.6, 1912.0], [57.7, 1912.0], [57.8, 1912.0], [57.9, 1912.0], [58.0, 1915.0], [58.1, 1915.0], [58.2, 1915.0], [58.3, 1915.0], [58.4, 1915.0], [58.5, 1915.0], [58.6, 1915.0], [58.7, 1915.0], [58.8, 1915.0], [58.9, 1915.0], [59.0, 1916.0], [59.1, 1916.0], [59.2, 1916.0], [59.3, 1916.0], [59.4, 1916.0], [59.5, 1916.0], [59.6, 1916.0], [59.7, 1916.0], [59.8, 1916.0], [59.9, 1916.0], [60.0, 1919.0], [60.1, 1919.0], [60.2, 1919.0], [60.3, 1919.0], [60.4, 1919.0], [60.5, 1919.0], [60.6, 1919.0], [60.7, 1919.0], [60.8, 1919.0], [60.9, 1919.0], [61.0, 1920.0], [61.1, 1920.0], [61.2, 1920.0], [61.3, 1920.0], [61.4, 1920.0], [61.5, 1920.0], [61.6, 1920.0], [61.7, 1920.0], [61.8, 1920.0], [61.9, 1920.0], [62.0, 1921.0], [62.1, 1921.0], [62.2, 1921.0], [62.3, 1921.0], [62.4, 1921.0], [62.5, 1921.0], [62.6, 1921.0], [62.7, 1921.0], [62.8, 1921.0], [62.9, 1921.0], [63.0, 1924.0], [63.1, 1924.0], [63.2, 1924.0], [63.3, 1924.0], [63.4, 1924.0], [63.5, 1924.0], [63.6, 1924.0], [63.7, 1924.0], [63.8, 1924.0], [63.9, 1924.0], [64.0, 1925.0], [64.1, 1925.0], [64.2, 1925.0], [64.3, 1925.0], [64.4, 1925.0], [64.5, 1925.0], [64.6, 1925.0], [64.7, 1925.0], [64.8, 1925.0], [64.9, 1925.0], [65.0, 1927.0], [65.1, 1927.0], [65.2, 1927.0], [65.3, 1927.0], [65.4, 1927.0], [65.5, 1927.0], [65.6, 1927.0], [65.7, 1927.0], [65.8, 1927.0], [65.9, 1927.0], [66.0, 1928.0], [66.1, 1928.0], [66.2, 1928.0], [66.3, 1928.0], [66.4, 1928.0], [66.5, 1928.0], [66.6, 1928.0], [66.7, 1928.0], [66.8, 1928.0], [66.9, 1928.0], [67.0, 1928.0], [67.1, 1928.0], [67.2, 1928.0], [67.3, 1928.0], [67.4, 1928.0], [67.5, 1928.0], [67.6, 1928.0], [67.7, 1928.0], [67.8, 1928.0], [67.9, 1928.0], [68.0, 1928.0], [68.1, 1928.0], [68.2, 1928.0], [68.3, 1928.0], [68.4, 1928.0], [68.5, 1928.0], [68.6, 1928.0], [68.7, 1928.0], [68.8, 1928.0], [68.9, 1928.0], [69.0, 1928.0], [69.1, 1928.0], [69.2, 1928.0], [69.3, 1928.0], [69.4, 1928.0], [69.5, 1928.0], [69.6, 1928.0], [69.7, 1928.0], [69.8, 1928.0], [69.9, 1928.0], [70.0, 1930.0], [70.1, 1930.0], [70.2, 1930.0], [70.3, 1930.0], [70.4, 1930.0], [70.5, 1930.0], [70.6, 1930.0], [70.7, 1930.0], [70.8, 1930.0], [70.9, 1930.0], [71.0, 1932.0], [71.1, 1932.0], [71.2, 1932.0], [71.3, 1932.0], [71.4, 1932.0], [71.5, 1932.0], [71.6, 1932.0], [71.7, 1932.0], [71.8, 1932.0], [71.9, 1932.0], [72.0, 1935.0], [72.1, 1935.0], [72.2, 1935.0], [72.3, 1935.0], [72.4, 1935.0], [72.5, 1935.0], [72.6, 1935.0], [72.7, 1935.0], [72.8, 1935.0], [72.9, 1935.0], [73.0, 1941.0], [73.1, 1941.0], [73.2, 1941.0], [73.3, 1941.0], [73.4, 1941.0], [73.5, 1941.0], [73.6, 1941.0], [73.7, 1941.0], [73.8, 1941.0], [73.9, 1941.0], [74.0, 1941.0], [74.1, 1941.0], [74.2, 1941.0], [74.3, 1941.0], [74.4, 1941.0], [74.5, 1941.0], [74.6, 1941.0], [74.7, 1941.0], [74.8, 1941.0], [74.9, 1941.0], [75.0, 1941.0], [75.1, 1941.0], [75.2, 1941.0], [75.3, 1941.0], [75.4, 1941.0], [75.5, 1941.0], [75.6, 1941.0], [75.7, 1941.0], [75.8, 1941.0], [75.9, 1941.0], [76.0, 1943.0], [76.1, 1943.0], [76.2, 1943.0], [76.3, 1943.0], [76.4, 1943.0], [76.5, 1943.0], [76.6, 1943.0], [76.7, 1943.0], [76.8, 1943.0], [76.9, 1943.0], [77.0, 1944.0], [77.1, 1944.0], [77.2, 1944.0], [77.3, 1944.0], [77.4, 1944.0], [77.5, 1944.0], [77.6, 1944.0], [77.7, 1944.0], [77.8, 1944.0], [77.9, 1944.0], [78.0, 1944.0], [78.1, 1944.0], [78.2, 1944.0], [78.3, 1944.0], [78.4, 1944.0], [78.5, 1944.0], [78.6, 1944.0], [78.7, 1944.0], [78.8, 1944.0], [78.9, 1944.0], [79.0, 1949.0], [79.1, 1949.0], [79.2, 1949.0], [79.3, 1949.0], [79.4, 1949.0], [79.5, 1949.0], [79.6, 1949.0], [79.7, 1949.0], [79.8, 1949.0], [79.9, 1949.0], [80.0, 1949.0], [80.1, 1949.0], [80.2, 1949.0], [80.3, 1949.0], [80.4, 1949.0], [80.5, 1949.0], [80.6, 1949.0], [80.7, 1949.0], [80.8, 1949.0], [80.9, 1949.0], [81.0, 1949.0], [81.1, 1949.0], [81.2, 1949.0], [81.3, 1949.0], [81.4, 1949.0], [81.5, 1949.0], [81.6, 1949.0], [81.7, 1949.0], [81.8, 1949.0], [81.9, 1949.0], [82.0, 1955.0], [82.1, 1955.0], [82.2, 1955.0], [82.3, 1955.0], [82.4, 1955.0], [82.5, 1955.0], [82.6, 1955.0], [82.7, 1955.0], [82.8, 1955.0], [82.9, 1955.0], [83.0, 1957.0], [83.1, 1957.0], [83.2, 1957.0], [83.3, 1957.0], [83.4, 1957.0], [83.5, 1957.0], [83.6, 1957.0], [83.7, 1957.0], [83.8, 1957.0], [83.9, 1957.0], [84.0, 1963.0], [84.1, 1963.0], [84.2, 1963.0], [84.3, 1963.0], [84.4, 1963.0], [84.5, 1963.0], [84.6, 1963.0], [84.7, 1963.0], [84.8, 1963.0], [84.9, 1963.0], [85.0, 1978.0], [85.1, 1978.0], [85.2, 1978.0], [85.3, 1978.0], [85.4, 1978.0], [85.5, 1978.0], [85.6, 1978.0], [85.7, 1978.0], [85.8, 1978.0], [85.9, 1978.0], [86.0, 1998.0], [86.1, 1998.0], [86.2, 1998.0], [86.3, 1998.0], [86.4, 1998.0], [86.5, 1998.0], [86.6, 1998.0], [86.7, 1998.0], [86.8, 1998.0], [86.9, 1998.0], [87.0, 1999.0], [87.1, 1999.0], [87.2, 1999.0], [87.3, 1999.0], [87.4, 1999.0], [87.5, 1999.0], [87.6, 1999.0], [87.7, 1999.0], [87.8, 1999.0], [87.9, 1999.0], [88.0, 2001.0], [88.1, 2001.0], [88.2, 2001.0], [88.3, 2001.0], [88.4, 2001.0], [88.5, 2001.0], [88.6, 2001.0], [88.7, 2001.0], [88.8, 2001.0], [88.9, 2001.0], [89.0, 2005.0], [89.1, 2005.0], [89.2, 2005.0], [89.3, 2005.0], [89.4, 2005.0], [89.5, 2005.0], [89.6, 2005.0], [89.7, 2005.0], [89.8, 2005.0], [89.9, 2005.0], [90.0, 2012.0], [90.1, 2012.0], [90.2, 2012.0], [90.3, 2012.0], [90.4, 2012.0], [90.5, 2012.0], [90.6, 2012.0], [90.7, 2012.0], [90.8, 2012.0], [90.9, 2012.0], [91.0, 2303.0], [91.1, 2303.0], [91.2, 2303.0], [91.3, 2303.0], [91.4, 2303.0], [91.5, 2303.0], [91.6, 2303.0], [91.7, 2303.0], [91.8, 2303.0], [91.9, 2303.0], [92.0, 2307.0], [92.1, 2307.0], [92.2, 2307.0], [92.3, 2307.0], [92.4, 2307.0], [92.5, 2307.0], [92.6, 2307.0], [92.7, 2307.0], [92.8, 2307.0], [92.9, 2307.0], [93.0, 2314.0], [93.1, 2314.0], [93.2, 2314.0], [93.3, 2314.0], [93.4, 2314.0], [93.5, 2314.0], [93.6, 2314.0], [93.7, 2314.0], [93.8, 2314.0], [93.9, 2314.0], [94.0, 2335.0], [94.1, 2335.0], [94.2, 2335.0], [94.3, 2335.0], [94.4, 2335.0], [94.5, 2335.0], [94.6, 2335.0], [94.7, 2335.0], [94.8, 2335.0], [94.9, 2335.0], [95.0, 2335.0], [95.1, 2335.0], [95.2, 2335.0], [95.3, 2335.0], [95.4, 2335.0], [95.5, 2335.0], [95.6, 2335.0], [95.7, 2335.0], [95.8, 2335.0], [95.9, 2335.0], [96.0, 2336.0], [96.1, 2336.0], [96.2, 2336.0], [96.3, 2336.0], [96.4, 2336.0], [96.5, 2336.0], [96.6, 2336.0], [96.7, 2336.0], [96.8, 2336.0], [96.9, 2336.0], [97.0, 2355.0], [97.1, 2355.0], [97.2, 2355.0], [97.3, 2355.0], [97.4, 2355.0], [97.5, 2355.0], [97.6, 2355.0], [97.7, 2355.0], [97.8, 2355.0], [97.9, 2355.0], [98.0, 2372.0], [98.1, 2372.0], [98.2, 2372.0], [98.3, 2372.0], [98.4, 2372.0], [98.5, 2372.0], [98.6, 2372.0], [98.7, 2372.0], [98.8, 2372.0], [98.9, 2372.0], [99.0, 2395.0], [99.1, 2395.0], [99.2, 2395.0], [99.3, 2395.0], [99.4, 2395.0], [99.5, 2395.0], [99.6, 2395.0], [99.7, 2395.0], [99.8, 2395.0], [99.9, 2395.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[0.0, 1887.0], [0.1, 1887.0], [0.2, 1887.0], [0.3, 1887.0], [0.4, 1887.0], [0.5, 1887.0], [0.6, 1887.0], [0.7, 1887.0], [0.8, 1887.0], [0.9, 1887.0], [1.0, 1921.0], [1.1, 1921.0], [1.2, 1921.0], [1.3, 1921.0], [1.4, 1921.0], [1.5, 1921.0], [1.6, 1921.0], [1.7, 1921.0], [1.8, 1921.0], [1.9, 1921.0], [2.0, 2009.0], [2.1, 2009.0], [2.2, 2009.0], [2.3, 2009.0], [2.4, 2009.0], [2.5, 2009.0], [2.6, 2009.0], [2.7, 2009.0], [2.8, 2009.0], [2.9, 2009.0], [3.0, 2043.0], [3.1, 2043.0], [3.2, 2043.0], [3.3, 2043.0], [3.4, 2043.0], [3.5, 2043.0], [3.6, 2043.0], [3.7, 2043.0], [3.8, 2043.0], [3.9, 2043.0], [4.0, 2070.0], [4.1, 2070.0], [4.2, 2070.0], [4.3, 2070.0], [4.4, 2070.0], [4.5, 2070.0], [4.6, 2070.0], [4.7, 2070.0], [4.8, 2070.0], [4.9, 2070.0], [5.0, 2081.0], [5.1, 2081.0], [5.2, 2081.0], [5.3, 2081.0], [5.4, 2081.0], [5.5, 2081.0], [5.6, 2081.0], [5.7, 2081.0], [5.8, 2081.0], [5.9, 2081.0], [6.0, 2103.0], [6.1, 2103.0], [6.2, 2103.0], [6.3, 2103.0], [6.4, 2103.0], [6.5, 2103.0], [6.6, 2103.0], [6.7, 2103.0], [6.8, 2103.0], [6.9, 2103.0], [7.0, 2119.0], [7.1, 2119.0], [7.2, 2119.0], [7.3, 2119.0], [7.4, 2119.0], [7.5, 2119.0], [7.6, 2119.0], [7.7, 2119.0], [7.8, 2119.0], [7.9, 2119.0], [8.0, 2120.0], [8.1, 2120.0], [8.2, 2120.0], [8.3, 2120.0], [8.4, 2120.0], [8.5, 2120.0], [8.6, 2120.0], [8.7, 2120.0], [8.8, 2120.0], [8.9, 2120.0], [9.0, 2134.0], [9.1, 2134.0], [9.2, 2134.0], [9.3, 2134.0], [9.4, 2134.0], [9.5, 2134.0], [9.6, 2134.0], [9.7, 2134.0], [9.8, 2134.0], [9.9, 2134.0], [10.0, 2142.0], [10.1, 2142.0], [10.2, 2142.0], [10.3, 2142.0], [10.4, 2142.0], [10.5, 2142.0], [10.6, 2142.0], [10.7, 2142.0], [10.8, 2142.0], [10.9, 2142.0], [11.0, 2148.0], [11.1, 2148.0], [11.2, 2148.0], [11.3, 2148.0], [11.4, 2148.0], [11.5, 2148.0], [11.6, 2148.0], [11.7, 2148.0], [11.8, 2148.0], [11.9, 2148.0], [12.0, 2151.0], [12.1, 2151.0], [12.2, 2151.0], [12.3, 2151.0], [12.4, 2151.0], [12.5, 2151.0], [12.6, 2151.0], [12.7, 2151.0], [12.8, 2151.0], [12.9, 2151.0], [13.0, 2159.0], [13.1, 2159.0], [13.2, 2159.0], [13.3, 2159.0], [13.4, 2159.0], [13.5, 2159.0], [13.6, 2159.0], [13.7, 2159.0], [13.8, 2159.0], [13.9, 2159.0], [14.0, 2162.0], [14.1, 2162.0], [14.2, 2162.0], [14.3, 2162.0], [14.4, 2162.0], [14.5, 2162.0], [14.6, 2162.0], [14.7, 2162.0], [14.8, 2162.0], [14.9, 2162.0], [15.0, 2163.0], [15.1, 2163.0], [15.2, 2163.0], [15.3, 2163.0], [15.4, 2163.0], [15.5, 2163.0], [15.6, 2163.0], [15.7, 2163.0], [15.8, 2163.0], [15.9, 2163.0], [16.0, 2166.0], [16.1, 2166.0], [16.2, 2166.0], [16.3, 2166.0], [16.4, 2166.0], [16.5, 2166.0], [16.6, 2166.0], [16.7, 2166.0], [16.8, 2166.0], [16.9, 2166.0], [17.0, 2171.0], [17.1, 2171.0], [17.2, 2171.0], [17.3, 2171.0], [17.4, 2171.0], [17.5, 2171.0], [17.6, 2171.0], [17.7, 2171.0], [17.8, 2171.0], [17.9, 2171.0], [18.0, 2182.0], [18.1, 2182.0], [18.2, 2182.0], [18.3, 2182.0], [18.4, 2182.0], [18.5, 2182.0], [18.6, 2182.0], [18.7, 2182.0], [18.8, 2182.0], [18.9, 2182.0], [19.0, 2183.0], [19.1, 2183.0], [19.2, 2183.0], [19.3, 2183.0], [19.4, 2183.0], [19.5, 2183.0], [19.6, 2183.0], [19.7, 2183.0], [19.8, 2183.0], [19.9, 2183.0], [20.0, 2186.0], [20.1, 2186.0], [20.2, 2186.0], [20.3, 2186.0], [20.4, 2186.0], [20.5, 2186.0], [20.6, 2186.0], [20.7, 2186.0], [20.8, 2186.0], [20.9, 2186.0], [21.0, 2195.0], [21.1, 2195.0], [21.2, 2195.0], [21.3, 2195.0], [21.4, 2195.0], [21.5, 2195.0], [21.6, 2195.0], [21.7, 2195.0], [21.8, 2195.0], [21.9, 2195.0], [22.0, 2196.0], [22.1, 2196.0], [22.2, 2196.0], [22.3, 2196.0], [22.4, 2196.0], [22.5, 2196.0], [22.6, 2196.0], [22.7, 2196.0], [22.8, 2196.0], [22.9, 2196.0], [23.0, 2202.0], [23.1, 2202.0], [23.2, 2202.0], [23.3, 2202.0], [23.4, 2202.0], [23.5, 2202.0], [23.6, 2202.0], [23.7, 2202.0], [23.8, 2202.0], [23.9, 2202.0], [24.0, 2212.0], [24.1, 2212.0], [24.2, 2212.0], [24.3, 2212.0], [24.4, 2212.0], [24.5, 2212.0], [24.6, 2212.0], [24.7, 2212.0], [24.8, 2212.0], [24.9, 2212.0], [25.0, 2212.0], [25.1, 2212.0], [25.2, 2212.0], [25.3, 2212.0], [25.4, 2212.0], [25.5, 2212.0], [25.6, 2212.0], [25.7, 2212.0], [25.8, 2212.0], [25.9, 2212.0], [26.0, 2216.0], [26.1, 2216.0], [26.2, 2216.0], [26.3, 2216.0], [26.4, 2216.0], [26.5, 2216.0], [26.6, 2216.0], [26.7, 2216.0], [26.8, 2216.0], [26.9, 2216.0], [27.0, 2219.0], [27.1, 2219.0], [27.2, 2219.0], [27.3, 2219.0], [27.4, 2219.0], [27.5, 2219.0], [27.6, 2219.0], [27.7, 2219.0], [27.8, 2219.0], [27.9, 2219.0], [28.0, 2227.0], [28.1, 2227.0], [28.2, 2227.0], [28.3, 2227.0], [28.4, 2227.0], [28.5, 2227.0], [28.6, 2227.0], [28.7, 2227.0], [28.8, 2227.0], [28.9, 2227.0], [29.0, 2227.0], [29.1, 2227.0], [29.2, 2227.0], [29.3, 2227.0], [29.4, 2227.0], [29.5, 2227.0], [29.6, 2227.0], [29.7, 2227.0], [29.8, 2227.0], [29.9, 2227.0], [30.0, 2235.0], [30.1, 2235.0], [30.2, 2235.0], [30.3, 2235.0], [30.4, 2235.0], [30.5, 2235.0], [30.6, 2235.0], [30.7, 2235.0], [30.8, 2235.0], [30.9, 2235.0], [31.0, 2242.0], [31.1, 2242.0], [31.2, 2242.0], [31.3, 2242.0], [31.4, 2242.0], [31.5, 2242.0], [31.6, 2242.0], [31.7, 2242.0], [31.8, 2242.0], [31.9, 2242.0], [32.0, 2242.0], [32.1, 2242.0], [32.2, 2242.0], [32.3, 2242.0], [32.4, 2242.0], [32.5, 2242.0], [32.6, 2242.0], [32.7, 2242.0], [32.8, 2242.0], [32.9, 2242.0], [33.0, 2248.0], [33.1, 2248.0], [33.2, 2248.0], [33.3, 2248.0], [33.4, 2248.0], [33.5, 2248.0], [33.6, 2248.0], [33.7, 2248.0], [33.8, 2248.0], [33.9, 2248.0], [34.0, 2251.0], [34.1, 2251.0], [34.2, 2251.0], [34.3, 2251.0], [34.4, 2251.0], [34.5, 2251.0], [34.6, 2251.0], [34.7, 2251.0], [34.8, 2251.0], [34.9, 2251.0], [35.0, 2256.0], [35.1, 2256.0], [35.2, 2256.0], [35.3, 2256.0], [35.4, 2256.0], [35.5, 2256.0], [35.6, 2256.0], [35.7, 2256.0], [35.8, 2256.0], [35.9, 2256.0], [36.0, 2262.0], [36.1, 2262.0], [36.2, 2262.0], [36.3, 2262.0], [36.4, 2262.0], [36.5, 2262.0], [36.6, 2262.0], [36.7, 2262.0], [36.8, 2262.0], [36.9, 2262.0], [37.0, 2262.0], [37.1, 2262.0], [37.2, 2262.0], [37.3, 2262.0], [37.4, 2262.0], [37.5, 2262.0], [37.6, 2262.0], [37.7, 2262.0], [37.8, 2262.0], [37.9, 2262.0], [38.0, 2267.0], [38.1, 2267.0], [38.2, 2267.0], [38.3, 2267.0], [38.4, 2267.0], [38.5, 2267.0], [38.6, 2267.0], [38.7, 2267.0], [38.8, 2267.0], [38.9, 2267.0], [39.0, 2274.0], [39.1, 2274.0], [39.2, 2274.0], [39.3, 2274.0], [39.4, 2274.0], [39.5, 2274.0], [39.6, 2274.0], [39.7, 2274.0], [39.8, 2274.0], [39.9, 2274.0], [40.0, 2275.0], [40.1, 2275.0], [40.2, 2275.0], [40.3, 2275.0], [40.4, 2275.0], [40.5, 2275.0], [40.6, 2275.0], [40.7, 2275.0], [40.8, 2275.0], [40.9, 2275.0], [41.0, 2275.0], [41.1, 2275.0], [41.2, 2275.0], [41.3, 2275.0], [41.4, 2275.0], [41.5, 2275.0], [41.6, 2275.0], [41.7, 2275.0], [41.8, 2275.0], [41.9, 2275.0], [42.0, 2285.0], [42.1, 2285.0], [42.2, 2285.0], [42.3, 2285.0], [42.4, 2285.0], [42.5, 2285.0], [42.6, 2285.0], [42.7, 2285.0], [42.8, 2285.0], [42.9, 2285.0], [43.0, 2289.0], [43.1, 2289.0], [43.2, 2289.0], [43.3, 2289.0], [43.4, 2289.0], [43.5, 2289.0], [43.6, 2289.0], [43.7, 2289.0], [43.8, 2289.0], [43.9, 2289.0], [44.0, 2300.0], [44.1, 2300.0], [44.2, 2300.0], [44.3, 2300.0], [44.4, 2300.0], [44.5, 2300.0], [44.6, 2300.0], [44.7, 2300.0], [44.8, 2300.0], [44.9, 2300.0], [45.0, 2310.0], [45.1, 2310.0], [45.2, 2310.0], [45.3, 2310.0], [45.4, 2310.0], [45.5, 2310.0], [45.6, 2310.0], [45.7, 2310.0], [45.8, 2310.0], [45.9, 2310.0], [46.0, 2311.0], [46.1, 2311.0], [46.2, 2311.0], [46.3, 2311.0], [46.4, 2311.0], [46.5, 2311.0], [46.6, 2311.0], [46.7, 2311.0], [46.8, 2311.0], [46.9, 2311.0], [47.0, 2318.0], [47.1, 2318.0], [47.2, 2318.0], [47.3, 2318.0], [47.4, 2318.0], [47.5, 2318.0], [47.6, 2318.0], [47.7, 2318.0], [47.8, 2318.0], [47.9, 2318.0], [48.0, 2320.0], [48.1, 2320.0], [48.2, 2320.0], [48.3, 2320.0], [48.4, 2320.0], [48.5, 2320.0], [48.6, 2320.0], [48.7, 2320.0], [48.8, 2320.0], [48.9, 2320.0], [49.0, 2325.0], [49.1, 2325.0], [49.2, 2325.0], [49.3, 2325.0], [49.4, 2325.0], [49.5, 2325.0], [49.6, 2325.0], [49.7, 2325.0], [49.8, 2325.0], [49.9, 2325.0], [50.0, 2326.0], [50.1, 2326.0], [50.2, 2326.0], [50.3, 2326.0], [50.4, 2326.0], [50.5, 2326.0], [50.6, 2326.0], [50.7, 2326.0], [50.8, 2326.0], [50.9, 2326.0], [51.0, 2327.0], [51.1, 2327.0], [51.2, 2327.0], [51.3, 2327.0], [51.4, 2327.0], [51.5, 2327.0], [51.6, 2327.0], [51.7, 2327.0], [51.8, 2327.0], [51.9, 2327.0], [52.0, 2331.0], [52.1, 2331.0], [52.2, 2331.0], [52.3, 2331.0], [52.4, 2331.0], [52.5, 2331.0], [52.6, 2331.0], [52.7, 2331.0], [52.8, 2331.0], [52.9, 2331.0], [53.0, 2331.0], [53.1, 2331.0], [53.2, 2331.0], [53.3, 2331.0], [53.4, 2331.0], [53.5, 2331.0], [53.6, 2331.0], [53.7, 2331.0], [53.8, 2331.0], [53.9, 2331.0], [54.0, 2332.0], [54.1, 2332.0], [54.2, 2332.0], [54.3, 2332.0], [54.4, 2332.0], [54.5, 2332.0], [54.6, 2332.0], [54.7, 2332.0], [54.8, 2332.0], [54.9, 2332.0], [55.0, 2340.0], [55.1, 2340.0], [55.2, 2340.0], [55.3, 2340.0], [55.4, 2340.0], [55.5, 2340.0], [55.6, 2340.0], [55.7, 2340.0], [55.8, 2340.0], [55.9, 2340.0], [56.0, 2343.0], [56.1, 2343.0], [56.2, 2343.0], [56.3, 2343.0], [56.4, 2343.0], [56.5, 2343.0], [56.6, 2343.0], [56.7, 2343.0], [56.8, 2343.0], [56.9, 2343.0], [57.0, 2349.0], [57.1, 2349.0], [57.2, 2349.0], [57.3, 2349.0], [57.4, 2349.0], [57.5, 2349.0], [57.6, 2349.0], [57.7, 2349.0], [57.8, 2349.0], [57.9, 2349.0], [58.0, 2350.0], [58.1, 2350.0], [58.2, 2350.0], [58.3, 2350.0], [58.4, 2350.0], [58.5, 2350.0], [58.6, 2350.0], [58.7, 2350.0], [58.8, 2350.0], [58.9, 2350.0], [59.0, 2353.0], [59.1, 2353.0], [59.2, 2353.0], [59.3, 2353.0], [59.4, 2353.0], [59.5, 2353.0], [59.6, 2353.0], [59.7, 2353.0], [59.8, 2353.0], [59.9, 2353.0], [60.0, 2356.0], [60.1, 2356.0], [60.2, 2356.0], [60.3, 2356.0], [60.4, 2356.0], [60.5, 2356.0], [60.6, 2356.0], [60.7, 2356.0], [60.8, 2356.0], [60.9, 2356.0], [61.0, 2357.0], [61.1, 2357.0], [61.2, 2357.0], [61.3, 2357.0], [61.4, 2357.0], [61.5, 2357.0], [61.6, 2357.0], [61.7, 2357.0], [61.8, 2357.0], [61.9, 2357.0], [62.0, 2360.0], [62.1, 2360.0], [62.2, 2360.0], [62.3, 2360.0], [62.4, 2360.0], [62.5, 2360.0], [62.6, 2360.0], [62.7, 2360.0], [62.8, 2360.0], [62.9, 2360.0], [63.0, 2363.0], [63.1, 2363.0], [63.2, 2363.0], [63.3, 2363.0], [63.4, 2363.0], [63.5, 2363.0], [63.6, 2363.0], [63.7, 2363.0], [63.8, 2363.0], [63.9, 2363.0], [64.0, 2364.0], [64.1, 2364.0], [64.2, 2364.0], [64.3, 2364.0], [64.4, 2364.0], [64.5, 2364.0], [64.6, 2364.0], [64.7, 2364.0], [64.8, 2364.0], [64.9, 2364.0], [65.0, 2365.0], [65.1, 2365.0], [65.2, 2365.0], [65.3, 2365.0], [65.4, 2365.0], [65.5, 2365.0], [65.6, 2365.0], [65.7, 2365.0], [65.8, 2365.0], [65.9, 2365.0], [66.0, 2368.0], [66.1, 2368.0], [66.2, 2368.0], [66.3, 2368.0], [66.4, 2368.0], [66.5, 2368.0], [66.6, 2368.0], [66.7, 2368.0], [66.8, 2368.0], [66.9, 2368.0], [67.0, 2377.0], [67.1, 2377.0], [67.2, 2377.0], [67.3, 2377.0], [67.4, 2377.0], [67.5, 2377.0], [67.6, 2377.0], [67.7, 2377.0], [67.8, 2377.0], [67.9, 2377.0], [68.0, 2377.0], [68.1, 2377.0], [68.2, 2377.0], [68.3, 2377.0], [68.4, 2377.0], [68.5, 2377.0], [68.6, 2377.0], [68.7, 2377.0], [68.8, 2377.0], [68.9, 2377.0], [69.0, 2380.0], [69.1, 2380.0], [69.2, 2380.0], [69.3, 2380.0], [69.4, 2380.0], [69.5, 2380.0], [69.6, 2380.0], [69.7, 2380.0], [69.8, 2380.0], [69.9, 2380.0], [70.0, 2384.0], [70.1, 2384.0], [70.2, 2384.0], [70.3, 2384.0], [70.4, 2384.0], [70.5, 2384.0], [70.6, 2384.0], [70.7, 2384.0], [70.8, 2384.0], [70.9, 2384.0], [71.0, 2390.0], [71.1, 2390.0], [71.2, 2390.0], [71.3, 2390.0], [71.4, 2390.0], [71.5, 2390.0], [71.6, 2390.0], [71.7, 2390.0], [71.8, 2390.0], [71.9, 2390.0], [72.0, 2395.0], [72.1, 2395.0], [72.2, 2395.0], [72.3, 2395.0], [72.4, 2395.0], [72.5, 2395.0], [72.6, 2395.0], [72.7, 2395.0], [72.8, 2395.0], [72.9, 2395.0], [73.0, 2397.0], [73.1, 2397.0], [73.2, 2397.0], [73.3, 2397.0], [73.4, 2397.0], [73.5, 2397.0], [73.6, 2397.0], [73.7, 2397.0], [73.8, 2397.0], [73.9, 2397.0], [74.0, 2401.0], [74.1, 2401.0], [74.2, 2401.0], [74.3, 2401.0], [74.4, 2401.0], [74.5, 2401.0], [74.6, 2401.0], [74.7, 2401.0], [74.8, 2401.0], [74.9, 2401.0], [75.0, 2404.0], [75.1, 2404.0], [75.2, 2404.0], [75.3, 2404.0], [75.4, 2404.0], [75.5, 2404.0], [75.6, 2404.0], [75.7, 2404.0], [75.8, 2404.0], [75.9, 2404.0], [76.0, 2405.0], [76.1, 2405.0], [76.2, 2405.0], [76.3, 2405.0], [76.4, 2405.0], [76.5, 2405.0], [76.6, 2405.0], [76.7, 2405.0], [76.8, 2405.0], [76.9, 2405.0], [77.0, 2406.0], [77.1, 2406.0], [77.2, 2406.0], [77.3, 2406.0], [77.4, 2406.0], [77.5, 2406.0], [77.6, 2406.0], [77.7, 2406.0], [77.8, 2406.0], [77.9, 2406.0], [78.0, 2406.0], [78.1, 2406.0], [78.2, 2406.0], [78.3, 2406.0], [78.4, 2406.0], [78.5, 2406.0], [78.6, 2406.0], [78.7, 2406.0], [78.8, 2406.0], [78.9, 2406.0], [79.0, 2412.0], [79.1, 2412.0], [79.2, 2412.0], [79.3, 2412.0], [79.4, 2412.0], [79.5, 2412.0], [79.6, 2412.0], [79.7, 2412.0], [79.8, 2412.0], [79.9, 2412.0], [80.0, 2412.0], [80.1, 2412.0], [80.2, 2412.0], [80.3, 2412.0], [80.4, 2412.0], [80.5, 2412.0], [80.6, 2412.0], [80.7, 2412.0], [80.8, 2412.0], [80.9, 2412.0], [81.0, 2415.0], [81.1, 2415.0], [81.2, 2415.0], [81.3, 2415.0], [81.4, 2415.0], [81.5, 2415.0], [81.6, 2415.0], [81.7, 2415.0], [81.8, 2415.0], [81.9, 2415.0], [82.0, 2418.0], [82.1, 2418.0], [82.2, 2418.0], [82.3, 2418.0], [82.4, 2418.0], [82.5, 2418.0], [82.6, 2418.0], [82.7, 2418.0], [82.8, 2418.0], [82.9, 2418.0], [83.0, 2422.0], [83.1, 2422.0], [83.2, 2422.0], [83.3, 2422.0], [83.4, 2422.0], [83.5, 2422.0], [83.6, 2422.0], [83.7, 2422.0], [83.8, 2422.0], [83.9, 2422.0], [84.0, 2439.0], [84.1, 2439.0], [84.2, 2439.0], [84.3, 2439.0], [84.4, 2439.0], [84.5, 2439.0], [84.6, 2439.0], [84.7, 2439.0], [84.8, 2439.0], [84.9, 2439.0], [85.0, 2441.0], [85.1, 2441.0], [85.2, 2441.0], [85.3, 2441.0], [85.4, 2441.0], [85.5, 2441.0], [85.6, 2441.0], [85.7, 2441.0], [85.8, 2441.0], [85.9, 2441.0], [86.0, 2442.0], [86.1, 2442.0], [86.2, 2442.0], [86.3, 2442.0], [86.4, 2442.0], [86.5, 2442.0], [86.6, 2442.0], [86.7, 2442.0], [86.8, 2442.0], [86.9, 2442.0], [87.0, 2445.0], [87.1, 2445.0], [87.2, 2445.0], [87.3, 2445.0], [87.4, 2445.0], [87.5, 2445.0], [87.6, 2445.0], [87.7, 2445.0], [87.8, 2445.0], [87.9, 2445.0], [88.0, 2448.0], [88.1, 2448.0], [88.2, 2448.0], [88.3, 2448.0], [88.4, 2448.0], [88.5, 2448.0], [88.6, 2448.0], [88.7, 2448.0], [88.8, 2448.0], [88.9, 2448.0], [89.0, 2450.0], [89.1, 2450.0], [89.2, 2450.0], [89.3, 2450.0], [89.4, 2450.0], [89.5, 2450.0], [89.6, 2450.0], [89.7, 2450.0], [89.8, 2450.0], [89.9, 2450.0], [90.0, 2456.0], [90.1, 2456.0], [90.2, 2456.0], [90.3, 2456.0], [90.4, 2456.0], [90.5, 2456.0], [90.6, 2456.0], [90.7, 2456.0], [90.8, 2456.0], [90.9, 2456.0], [91.0, 2461.0], [91.1, 2461.0], [91.2, 2461.0], [91.3, 2461.0], [91.4, 2461.0], [91.5, 2461.0], [91.6, 2461.0], [91.7, 2461.0], [91.8, 2461.0], [91.9, 2461.0], [92.0, 2463.0], [92.1, 2463.0], [92.2, 2463.0], [92.3, 2463.0], [92.4, 2463.0], [92.5, 2463.0], [92.6, 2463.0], [92.7, 2463.0], [92.8, 2463.0], [92.9, 2463.0], [93.0, 2471.0], [93.1, 2471.0], [93.2, 2471.0], [93.3, 2471.0], [93.4, 2471.0], [93.5, 2471.0], [93.6, 2471.0], [93.7, 2471.0], [93.8, 2471.0], [93.9, 2471.0], [94.0, 2477.0], [94.1, 2477.0], [94.2, 2477.0], [94.3, 2477.0], [94.4, 2477.0], [94.5, 2477.0], [94.6, 2477.0], [94.7, 2477.0], [94.8, 2477.0], [94.9, 2477.0], [95.0, 2494.0], [95.1, 2494.0], [95.2, 2494.0], [95.3, 2494.0], [95.4, 2494.0], [95.5, 2494.0], [95.6, 2494.0], [95.7, 2494.0], [95.8, 2494.0], [95.9, 2494.0], [96.0, 2529.0], [96.1, 2529.0], [96.2, 2529.0], [96.3, 2529.0], [96.4, 2529.0], [96.5, 2529.0], [96.6, 2529.0], [96.7, 2529.0], [96.8, 2529.0], [96.9, 2529.0], [97.0, 2562.0], [97.1, 2562.0], [97.2, 2562.0], [97.3, 2562.0], [97.4, 2562.0], [97.5, 2562.0], [97.6, 2562.0], [97.7, 2562.0], [97.8, 2562.0], [97.9, 2562.0], [98.0, 2609.0], [98.1, 2609.0], [98.2, 2609.0], [98.3, 2609.0], [98.4, 2609.0], [98.5, 2609.0], [98.6, 2609.0], [98.7, 2609.0], [98.8, 2609.0], [98.9, 2609.0], [99.0, 2619.0], [99.1, 2619.0], [99.2, 2619.0], [99.3, 2619.0], [99.4, 2619.0], [99.5, 2619.0], [99.6, 2619.0], [99.7, 2619.0], [99.8, 2619.0], [99.9, 2619.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[0.0, 1896.0], [0.1, 1896.0], [0.2, 1896.0], [0.3, 1896.0], [0.4, 1896.0], [0.5, 1896.0], [0.6, 1896.0], [0.7, 1896.0], [0.8, 1896.0], [0.9, 1896.0], [1.0, 1943.0], [1.1, 1943.0], [1.2, 1943.0], [1.3, 1943.0], [1.4, 1943.0], [1.5, 1943.0], [1.6, 1943.0], [1.7, 1943.0], [1.8, 1943.0], [1.9, 1943.0], [2.0, 1984.0], [2.1, 1984.0], [2.2, 1984.0], [2.3, 1984.0], [2.4, 1984.0], [2.5, 1984.0], [2.6, 1984.0], [2.7, 1984.0], [2.8, 1984.0], [2.9, 1984.0], [3.0, 2029.0], [3.1, 2029.0], [3.2, 2029.0], [3.3, 2029.0], [3.4, 2029.0], [3.5, 2029.0], [3.6, 2029.0], [3.7, 2029.0], [3.8, 2029.0], [3.9, 2029.0], [4.0, 2035.0], [4.1, 2035.0], [4.2, 2035.0], [4.3, 2035.0], [4.4, 2035.0], [4.5, 2035.0], [4.6, 2035.0], [4.7, 2035.0], [4.8, 2035.0], [4.9, 2035.0], [5.0, 2043.0], [5.1, 2043.0], [5.2, 2043.0], [5.3, 2043.0], [5.4, 2043.0], [5.5, 2043.0], [5.6, 2043.0], [5.7, 2043.0], [5.8, 2043.0], [5.9, 2043.0], [6.0, 2044.0], [6.1, 2044.0], [6.2, 2044.0], [6.3, 2044.0], [6.4, 2044.0], [6.5, 2044.0], [6.6, 2044.0], [6.7, 2044.0], [6.8, 2044.0], [6.9, 2044.0], [7.0, 2046.0], [7.1, 2046.0], [7.2, 2046.0], [7.3, 2046.0], [7.4, 2046.0], [7.5, 2046.0], [7.6, 2046.0], [7.7, 2046.0], [7.8, 2046.0], [7.9, 2046.0], [8.0, 2058.0], [8.1, 2058.0], [8.2, 2058.0], [8.3, 2058.0], [8.4, 2058.0], [8.5, 2058.0], [8.6, 2058.0], [8.7, 2058.0], [8.8, 2058.0], [8.9, 2058.0], [9.0, 2068.0], [9.1, 2068.0], [9.2, 2068.0], [9.3, 2068.0], [9.4, 2068.0], [9.5, 2068.0], [9.6, 2068.0], [9.7, 2068.0], [9.8, 2068.0], [9.9, 2068.0], [10.0, 2070.0], [10.1, 2070.0], [10.2, 2070.0], [10.3, 2070.0], [10.4, 2070.0], [10.5, 2070.0], [10.6, 2070.0], [10.7, 2070.0], [10.8, 2070.0], [10.9, 2070.0], [11.0, 2075.0], [11.1, 2075.0], [11.2, 2075.0], [11.3, 2075.0], [11.4, 2075.0], [11.5, 2075.0], [11.6, 2075.0], [11.7, 2075.0], [11.8, 2075.0], [11.9, 2075.0], [12.0, 2079.0], [12.1, 2079.0], [12.2, 2079.0], [12.3, 2079.0], [12.4, 2079.0], [12.5, 2079.0], [12.6, 2079.0], [12.7, 2079.0], [12.8, 2079.0], [12.9, 2079.0], [13.0, 2115.0], [13.1, 2115.0], [13.2, 2115.0], [13.3, 2115.0], [13.4, 2115.0], [13.5, 2115.0], [13.6, 2115.0], [13.7, 2115.0], [13.8, 2115.0], [13.9, 2115.0], [14.0, 2120.0], [14.1, 2120.0], [14.2, 2120.0], [14.3, 2120.0], [14.4, 2120.0], [14.5, 2120.0], [14.6, 2120.0], [14.7, 2120.0], [14.8, 2120.0], [14.9, 2120.0], [15.0, 2128.0], [15.1, 2128.0], [15.2, 2128.0], [15.3, 2128.0], [15.4, 2128.0], [15.5, 2128.0], [15.6, 2128.0], [15.7, 2128.0], [15.8, 2128.0], [15.9, 2128.0], [16.0, 2131.0], [16.1, 2131.0], [16.2, 2131.0], [16.3, 2131.0], [16.4, 2131.0], [16.5, 2131.0], [16.6, 2131.0], [16.7, 2131.0], [16.8, 2131.0], [16.9, 2131.0], [17.0, 2136.0], [17.1, 2136.0], [17.2, 2136.0], [17.3, 2136.0], [17.4, 2136.0], [17.5, 2136.0], [17.6, 2136.0], [17.7, 2136.0], [17.8, 2136.0], [17.9, 2136.0], [18.0, 2139.0], [18.1, 2139.0], [18.2, 2139.0], [18.3, 2139.0], [18.4, 2139.0], [18.5, 2139.0], [18.6, 2139.0], [18.7, 2139.0], [18.8, 2139.0], [18.9, 2139.0], [19.0, 2142.0], [19.1, 2142.0], [19.2, 2142.0], [19.3, 2142.0], [19.4, 2142.0], [19.5, 2142.0], [19.6, 2142.0], [19.7, 2142.0], [19.8, 2142.0], [19.9, 2142.0], [20.0, 2146.0], [20.1, 2146.0], [20.2, 2146.0], [20.3, 2146.0], [20.4, 2146.0], [20.5, 2146.0], [20.6, 2146.0], [20.7, 2146.0], [20.8, 2146.0], [20.9, 2146.0], [21.0, 2159.0], [21.1, 2159.0], [21.2, 2159.0], [21.3, 2159.0], [21.4, 2159.0], [21.5, 2159.0], [21.6, 2159.0], [21.7, 2159.0], [21.8, 2159.0], [21.9, 2159.0], [22.0, 2169.0], [22.1, 2169.0], [22.2, 2169.0], [22.3, 2169.0], [22.4, 2169.0], [22.5, 2169.0], [22.6, 2169.0], [22.7, 2169.0], [22.8, 2169.0], [22.9, 2169.0], [23.0, 2173.0], [23.1, 2173.0], [23.2, 2173.0], [23.3, 2173.0], [23.4, 2173.0], [23.5, 2173.0], [23.6, 2173.0], [23.7, 2173.0], [23.8, 2173.0], [23.9, 2173.0], [24.0, 2178.0], [24.1, 2178.0], [24.2, 2178.0], [24.3, 2178.0], [24.4, 2178.0], [24.5, 2178.0], [24.6, 2178.0], [24.7, 2178.0], [24.8, 2178.0], [24.9, 2178.0], [25.0, 2188.0], [25.1, 2188.0], [25.2, 2188.0], [25.3, 2188.0], [25.4, 2188.0], [25.5, 2188.0], [25.6, 2188.0], [25.7, 2188.0], [25.8, 2188.0], [25.9, 2188.0], [26.0, 2195.0], [26.1, 2195.0], [26.2, 2195.0], [26.3, 2195.0], [26.4, 2195.0], [26.5, 2195.0], [26.6, 2195.0], [26.7, 2195.0], [26.8, 2195.0], [26.9, 2195.0], [27.0, 2197.0], [27.1, 2197.0], [27.2, 2197.0], [27.3, 2197.0], [27.4, 2197.0], [27.5, 2197.0], [27.6, 2197.0], [27.7, 2197.0], [27.8, 2197.0], [27.9, 2197.0], [28.0, 2222.0], [28.1, 2222.0], [28.2, 2222.0], [28.3, 2222.0], [28.4, 2222.0], [28.5, 2222.0], [28.6, 2222.0], [28.7, 2222.0], [28.8, 2222.0], [28.9, 2222.0], [29.0, 2236.0], [29.1, 2236.0], [29.2, 2236.0], [29.3, 2236.0], [29.4, 2236.0], [29.5, 2236.0], [29.6, 2236.0], [29.7, 2236.0], [29.8, 2236.0], [29.9, 2236.0], [30.0, 2244.0], [30.1, 2244.0], [30.2, 2244.0], [30.3, 2244.0], [30.4, 2244.0], [30.5, 2244.0], [30.6, 2244.0], [30.7, 2244.0], [30.8, 2244.0], [30.9, 2244.0], [31.0, 2251.0], [31.1, 2251.0], [31.2, 2251.0], [31.3, 2251.0], [31.4, 2251.0], [31.5, 2251.0], [31.6, 2251.0], [31.7, 2251.0], [31.8, 2251.0], [31.9, 2251.0], [32.0, 2258.0], [32.1, 2258.0], [32.2, 2258.0], [32.3, 2258.0], [32.4, 2258.0], [32.5, 2258.0], [32.6, 2258.0], [32.7, 2258.0], [32.8, 2258.0], [32.9, 2258.0], [33.0, 2261.0], [33.1, 2261.0], [33.2, 2261.0], [33.3, 2261.0], [33.4, 2261.0], [33.5, 2261.0], [33.6, 2261.0], [33.7, 2261.0], [33.8, 2261.0], [33.9, 2261.0], [34.0, 2269.0], [34.1, 2269.0], [34.2, 2269.0], [34.3, 2269.0], [34.4, 2269.0], [34.5, 2269.0], [34.6, 2269.0], [34.7, 2269.0], [34.8, 2269.0], [34.9, 2269.0], [35.0, 2277.0], [35.1, 2277.0], [35.2, 2277.0], [35.3, 2277.0], [35.4, 2277.0], [35.5, 2277.0], [35.6, 2277.0], [35.7, 2277.0], [35.8, 2277.0], [35.9, 2277.0], [36.0, 2281.0], [36.1, 2281.0], [36.2, 2281.0], [36.3, 2281.0], [36.4, 2281.0], [36.5, 2281.0], [36.6, 2281.0], [36.7, 2281.0], [36.8, 2281.0], [36.9, 2281.0], [37.0, 2282.0], [37.1, 2282.0], [37.2, 2282.0], [37.3, 2282.0], [37.4, 2282.0], [37.5, 2282.0], [37.6, 2282.0], [37.7, 2282.0], [37.8, 2282.0], [37.9, 2282.0], [38.0, 2288.0], [38.1, 2288.0], [38.2, 2288.0], [38.3, 2288.0], [38.4, 2288.0], [38.5, 2288.0], [38.6, 2288.0], [38.7, 2288.0], [38.8, 2288.0], [38.9, 2288.0], [39.0, 2291.0], [39.1, 2291.0], [39.2, 2291.0], [39.3, 2291.0], [39.4, 2291.0], [39.5, 2291.0], [39.6, 2291.0], [39.7, 2291.0], [39.8, 2291.0], [39.9, 2291.0], [40.0, 2304.0], [40.1, 2304.0], [40.2, 2304.0], [40.3, 2304.0], [40.4, 2304.0], [40.5, 2304.0], [40.6, 2304.0], [40.7, 2304.0], [40.8, 2304.0], [40.9, 2304.0], [41.0, 2304.0], [41.1, 2304.0], [41.2, 2304.0], [41.3, 2304.0], [41.4, 2304.0], [41.5, 2304.0], [41.6, 2304.0], [41.7, 2304.0], [41.8, 2304.0], [41.9, 2304.0], [42.0, 2305.0], [42.1, 2305.0], [42.2, 2305.0], [42.3, 2305.0], [42.4, 2305.0], [42.5, 2305.0], [42.6, 2305.0], [42.7, 2305.0], [42.8, 2305.0], [42.9, 2305.0], [43.0, 2307.0], [43.1, 2307.0], [43.2, 2307.0], [43.3, 2307.0], [43.4, 2307.0], [43.5, 2307.0], [43.6, 2307.0], [43.7, 2307.0], [43.8, 2307.0], [43.9, 2307.0], [44.0, 2317.0], [44.1, 2317.0], [44.2, 2317.0], [44.3, 2317.0], [44.4, 2317.0], [44.5, 2317.0], [44.6, 2317.0], [44.7, 2317.0], [44.8, 2317.0], [44.9, 2317.0], [45.0, 2333.0], [45.1, 2333.0], [45.2, 2333.0], [45.3, 2333.0], [45.4, 2333.0], [45.5, 2333.0], [45.6, 2333.0], [45.7, 2333.0], [45.8, 2333.0], [45.9, 2333.0], [46.0, 2343.0], [46.1, 2343.0], [46.2, 2343.0], [46.3, 2343.0], [46.4, 2343.0], [46.5, 2343.0], [46.6, 2343.0], [46.7, 2343.0], [46.8, 2343.0], [46.9, 2343.0], [47.0, 2353.0], [47.1, 2353.0], [47.2, 2353.0], [47.3, 2353.0], [47.4, 2353.0], [47.5, 2353.0], [47.6, 2353.0], [47.7, 2353.0], [47.8, 2353.0], [47.9, 2353.0], [48.0, 2361.0], [48.1, 2361.0], [48.2, 2361.0], [48.3, 2361.0], [48.4, 2361.0], [48.5, 2361.0], [48.6, 2361.0], [48.7, 2361.0], [48.8, 2361.0], [48.9, 2361.0], [49.0, 2366.0], [49.1, 2366.0], [49.2, 2366.0], [49.3, 2366.0], [49.4, 2366.0], [49.5, 2366.0], [49.6, 2366.0], [49.7, 2366.0], [49.8, 2366.0], [49.9, 2366.0], [50.0, 2367.0], [50.1, 2367.0], [50.2, 2367.0], [50.3, 2367.0], [50.4, 2367.0], [50.5, 2367.0], [50.6, 2367.0], [50.7, 2367.0], [50.8, 2367.0], [50.9, 2367.0], [51.0, 2369.0], [51.1, 2369.0], [51.2, 2369.0], [51.3, 2369.0], [51.4, 2369.0], [51.5, 2369.0], [51.6, 2369.0], [51.7, 2369.0], [51.8, 2369.0], [51.9, 2369.0], [52.0, 2369.0], [52.1, 2369.0], [52.2, 2369.0], [52.3, 2369.0], [52.4, 2369.0], [52.5, 2369.0], [52.6, 2369.0], [52.7, 2369.0], [52.8, 2369.0], [52.9, 2369.0], [53.0, 2386.0], [53.1, 2386.0], [53.2, 2386.0], [53.3, 2386.0], [53.4, 2386.0], [53.5, 2386.0], [53.6, 2386.0], [53.7, 2386.0], [53.8, 2386.0], [53.9, 2386.0], [54.0, 2392.0], [54.1, 2392.0], [54.2, 2392.0], [54.3, 2392.0], [54.4, 2392.0], [54.5, 2392.0], [54.6, 2392.0], [54.7, 2392.0], [54.8, 2392.0], [54.9, 2392.0], [55.0, 2418.0], [55.1, 2418.0], [55.2, 2418.0], [55.3, 2418.0], [55.4, 2418.0], [55.5, 2418.0], [55.6, 2418.0], [55.7, 2418.0], [55.8, 2418.0], [55.9, 2418.0], [56.0, 2432.0], [56.1, 2432.0], [56.2, 2432.0], [56.3, 2432.0], [56.4, 2432.0], [56.5, 2432.0], [56.6, 2432.0], [56.7, 2432.0], [56.8, 2432.0], [56.9, 2432.0], [57.0, 2443.0], [57.1, 2443.0], [57.2, 2443.0], [57.3, 2443.0], [57.4, 2443.0], [57.5, 2443.0], [57.6, 2443.0], [57.7, 2443.0], [57.8, 2443.0], [57.9, 2443.0], [58.0, 2458.0], [58.1, 2458.0], [58.2, 2458.0], [58.3, 2458.0], [58.4, 2458.0], [58.5, 2458.0], [58.6, 2458.0], [58.7, 2458.0], [58.8, 2458.0], [58.9, 2458.0], [59.0, 2477.0], [59.1, 2477.0], [59.2, 2477.0], [59.3, 2477.0], [59.4, 2477.0], [59.5, 2477.0], [59.6, 2477.0], [59.7, 2477.0], [59.8, 2477.0], [59.9, 2477.0], [60.0, 2478.0], [60.1, 2478.0], [60.2, 2478.0], [60.3, 2478.0], [60.4, 2478.0], [60.5, 2478.0], [60.6, 2478.0], [60.7, 2478.0], [60.8, 2478.0], [60.9, 2478.0], [61.0, 2487.0], [61.1, 2487.0], [61.2, 2487.0], [61.3, 2487.0], [61.4, 2487.0], [61.5, 2487.0], [61.6, 2487.0], [61.7, 2487.0], [61.8, 2487.0], [61.9, 2487.0], [62.0, 2499.0], [62.1, 2499.0], [62.2, 2499.0], [62.3, 2499.0], [62.4, 2499.0], [62.5, 2499.0], [62.6, 2499.0], [62.7, 2499.0], [62.8, 2499.0], [62.9, 2499.0], [63.0, 2502.0], [63.1, 2502.0], [63.2, 2502.0], [63.3, 2502.0], [63.4, 2502.0], [63.5, 2502.0], [63.6, 2502.0], [63.7, 2502.0], [63.8, 2502.0], [63.9, 2502.0], [64.0, 2510.0], [64.1, 2510.0], [64.2, 2510.0], [64.3, 2510.0], [64.4, 2510.0], [64.5, 2510.0], [64.6, 2510.0], [64.7, 2510.0], [64.8, 2510.0], [64.9, 2510.0], [65.0, 2517.0], [65.1, 2517.0], [65.2, 2517.0], [65.3, 2517.0], [65.4, 2517.0], [65.5, 2517.0], [65.6, 2517.0], [65.7, 2517.0], [65.8, 2517.0], [65.9, 2517.0], [66.0, 2530.0], [66.1, 2530.0], [66.2, 2530.0], [66.3, 2530.0], [66.4, 2530.0], [66.5, 2530.0], [66.6, 2530.0], [66.7, 2530.0], [66.8, 2530.0], [66.9, 2530.0], [67.0, 2533.0], [67.1, 2533.0], [67.2, 2533.0], [67.3, 2533.0], [67.4, 2533.0], [67.5, 2533.0], [67.6, 2533.0], [67.7, 2533.0], [67.8, 2533.0], [67.9, 2533.0], [68.0, 2533.0], [68.1, 2533.0], [68.2, 2533.0], [68.3, 2533.0], [68.4, 2533.0], [68.5, 2533.0], [68.6, 2533.0], [68.7, 2533.0], [68.8, 2533.0], [68.9, 2533.0], [69.0, 2539.0], [69.1, 2539.0], [69.2, 2539.0], [69.3, 2539.0], [69.4, 2539.0], [69.5, 2539.0], [69.6, 2539.0], [69.7, 2539.0], [69.8, 2539.0], [69.9, 2539.0], [70.0, 2543.0], [70.1, 2543.0], [70.2, 2543.0], [70.3, 2543.0], [70.4, 2543.0], [70.5, 2543.0], [70.6, 2543.0], [70.7, 2543.0], [70.8, 2543.0], [70.9, 2543.0], [71.0, 2555.0], [71.1, 2555.0], [71.2, 2555.0], [71.3, 2555.0], [71.4, 2555.0], [71.5, 2555.0], [71.6, 2555.0], [71.7, 2555.0], [71.8, 2555.0], [71.9, 2555.0], [72.0, 2563.0], [72.1, 2563.0], [72.2, 2563.0], [72.3, 2563.0], [72.4, 2563.0], [72.5, 2563.0], [72.6, 2563.0], [72.7, 2563.0], [72.8, 2563.0], [72.9, 2563.0], [73.0, 2569.0], [73.1, 2569.0], [73.2, 2569.0], [73.3, 2569.0], [73.4, 2569.0], [73.5, 2569.0], [73.6, 2569.0], [73.7, 2569.0], [73.8, 2569.0], [73.9, 2569.0], [74.0, 2577.0], [74.1, 2577.0], [74.2, 2577.0], [74.3, 2577.0], [74.4, 2577.0], [74.5, 2577.0], [74.6, 2577.0], [74.7, 2577.0], [74.8, 2577.0], [74.9, 2577.0], [75.0, 2592.0], [75.1, 2592.0], [75.2, 2592.0], [75.3, 2592.0], [75.4, 2592.0], [75.5, 2592.0], [75.6, 2592.0], [75.7, 2592.0], [75.8, 2592.0], [75.9, 2592.0], [76.0, 2595.0], [76.1, 2595.0], [76.2, 2595.0], [76.3, 2595.0], [76.4, 2595.0], [76.5, 2595.0], [76.6, 2595.0], [76.7, 2595.0], [76.8, 2595.0], [76.9, 2595.0], [77.0, 2644.0], [77.1, 2644.0], [77.2, 2644.0], [77.3, 2644.0], [77.4, 2644.0], [77.5, 2644.0], [77.6, 2644.0], [77.7, 2644.0], [77.8, 2644.0], [77.9, 2644.0], [78.0, 2647.0], [78.1, 2647.0], [78.2, 2647.0], [78.3, 2647.0], [78.4, 2647.0], [78.5, 2647.0], [78.6, 2647.0], [78.7, 2647.0], [78.8, 2647.0], [78.9, 2647.0], [79.0, 2658.0], [79.1, 2658.0], [79.2, 2658.0], [79.3, 2658.0], [79.4, 2658.0], [79.5, 2658.0], [79.6, 2658.0], [79.7, 2658.0], [79.8, 2658.0], [79.9, 2658.0], [80.0, 2658.0], [80.1, 2658.0], [80.2, 2658.0], [80.3, 2658.0], [80.4, 2658.0], [80.5, 2658.0], [80.6, 2658.0], [80.7, 2658.0], [80.8, 2658.0], [80.9, 2658.0], [81.0, 2669.0], [81.1, 2669.0], [81.2, 2669.0], [81.3, 2669.0], [81.4, 2669.0], [81.5, 2669.0], [81.6, 2669.0], [81.7, 2669.0], [81.8, 2669.0], [81.9, 2669.0], [82.0, 2674.0], [82.1, 2674.0], [82.2, 2674.0], [82.3, 2674.0], [82.4, 2674.0], [82.5, 2674.0], [82.6, 2674.0], [82.7, 2674.0], [82.8, 2674.0], [82.9, 2674.0], [83.0, 2681.0], [83.1, 2681.0], [83.2, 2681.0], [83.3, 2681.0], [83.4, 2681.0], [83.5, 2681.0], [83.6, 2681.0], [83.7, 2681.0], [83.8, 2681.0], [83.9, 2681.0], [84.0, 2703.0], [84.1, 2703.0], [84.2, 2703.0], [84.3, 2703.0], [84.4, 2703.0], [84.5, 2703.0], [84.6, 2703.0], [84.7, 2703.0], [84.8, 2703.0], [84.9, 2703.0], [85.0, 2726.0], [85.1, 2726.0], [85.2, 2726.0], [85.3, 2726.0], [85.4, 2726.0], [85.5, 2726.0], [85.6, 2726.0], [85.7, 2726.0], [85.8, 2726.0], [85.9, 2726.0], [86.0, 2759.0], [86.1, 2759.0], [86.2, 2759.0], [86.3, 2759.0], [86.4, 2759.0], [86.5, 2759.0], [86.6, 2759.0], [86.7, 2759.0], [86.8, 2759.0], [86.9, 2759.0], [87.0, 2794.0], [87.1, 2794.0], [87.2, 2794.0], [87.3, 2794.0], [87.4, 2794.0], [87.5, 2794.0], [87.6, 2794.0], [87.7, 2794.0], [87.8, 2794.0], [87.9, 2794.0], [88.0, 2804.0], [88.1, 2804.0], [88.2, 2804.0], [88.3, 2804.0], [88.4, 2804.0], [88.5, 2804.0], [88.6, 2804.0], [88.7, 2804.0], [88.8, 2804.0], [88.9, 2804.0], [89.0, 2819.0], [89.1, 2819.0], [89.2, 2819.0], [89.3, 2819.0], [89.4, 2819.0], [89.5, 2819.0], [89.6, 2819.0], [89.7, 2819.0], [89.8, 2819.0], [89.9, 2819.0], [90.0, 2822.0], [90.1, 2822.0], [90.2, 2822.0], [90.3, 2822.0], [90.4, 2822.0], [90.5, 2822.0], [90.6, 2822.0], [90.7, 2822.0], [90.8, 2822.0], [90.9, 2822.0], [91.0, 2828.0], [91.1, 2828.0], [91.2, 2828.0], [91.3, 2828.0], [91.4, 2828.0], [91.5, 2828.0], [91.6, 2828.0], [91.7, 2828.0], [91.8, 2828.0], [91.9, 2828.0], [92.0, 2868.0], [92.1, 2868.0], [92.2, 2868.0], [92.3, 2868.0], [92.4, 2868.0], [92.5, 2868.0], [92.6, 2868.0], [92.7, 2868.0], [92.8, 2868.0], [92.9, 2868.0], [93.0, 2872.0], [93.1, 2872.0], [93.2, 2872.0], [93.3, 2872.0], [93.4, 2872.0], [93.5, 2872.0], [93.6, 2872.0], [93.7, 2872.0], [93.8, 2872.0], [93.9, 2872.0], [94.0, 2874.0], [94.1, 2874.0], [94.2, 2874.0], [94.3, 2874.0], [94.4, 2874.0], [94.5, 2874.0], [94.6, 2874.0], [94.7, 2874.0], [94.8, 2874.0], [94.9, 2874.0], [95.0, 2901.0], [95.1, 2901.0], [95.2, 2901.0], [95.3, 2901.0], [95.4, 2901.0], [95.5, 2901.0], [95.6, 2901.0], [95.7, 2901.0], [95.8, 2901.0], [95.9, 2901.0], [96.0, 2902.0], [96.1, 2902.0], [96.2, 2902.0], [96.3, 2902.0], [96.4, 2902.0], [96.5, 2902.0], [96.6, 2902.0], [96.7, 2902.0], [96.8, 2902.0], [96.9, 2902.0], [97.0, 2949.0], [97.1, 2949.0], [97.2, 2949.0], [97.3, 2949.0], [97.4, 2949.0], [97.5, 2949.0], [97.6, 2949.0], [97.7, 2949.0], [97.8, 2949.0], [97.9, 2949.0], [98.0, 3017.0], [98.1, 3017.0], [98.2, 3017.0], [98.3, 3017.0], [98.4, 3017.0], [98.5, 3017.0], [98.6, 3017.0], [98.7, 3017.0], [98.8, 3017.0], [98.9, 3017.0], [99.0, 3026.0], [99.1, 3026.0], [99.2, 3026.0], [99.3, 3026.0], [99.4, 3026.0], [99.5, 3026.0], [99.6, 3026.0], [99.7, 3026.0], [99.8, 3026.0], [99.9, 3026.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[0.0, 5113.0], [0.1, 5113.0], [0.2, 5113.0], [0.3, 5113.0], [0.4, 5113.0], [0.5, 5113.0], [0.6, 5113.0], [0.7, 5113.0], [0.8, 5113.0], [0.9, 5113.0], [1.0, 5116.0], [1.1, 5116.0], [1.2, 5116.0], [1.3, 5116.0], [1.4, 5116.0], [1.5, 5116.0], [1.6, 5116.0], [1.7, 5116.0], [1.8, 5116.0], [1.9, 5116.0], [2.0, 5124.0], [2.1, 5124.0], [2.2, 5124.0], [2.3, 5124.0], [2.4, 5124.0], [2.5, 5124.0], [2.6, 5124.0], [2.7, 5124.0], [2.8, 5124.0], [2.9, 5124.0], [3.0, 5125.0], [3.1, 5125.0], [3.2, 5125.0], [3.3, 5125.0], [3.4, 5125.0], [3.5, 5125.0], [3.6, 5125.0], [3.7, 5125.0], [3.8, 5125.0], [3.9, 5125.0], [4.0, 5134.0], [4.1, 5134.0], [4.2, 5134.0], [4.3, 5134.0], [4.4, 5134.0], [4.5, 5134.0], [4.6, 5134.0], [4.7, 5134.0], [4.8, 5134.0], [4.9, 5134.0], [5.0, 5137.0], [5.1, 5137.0], [5.2, 5137.0], [5.3, 5137.0], [5.4, 5137.0], [5.5, 5137.0], [5.6, 5137.0], [5.7, 5137.0], [5.8, 5137.0], [5.9, 5137.0], [6.0, 5137.0], [6.1, 5137.0], [6.2, 5137.0], [6.3, 5137.0], [6.4, 5137.0], [6.5, 5137.0], [6.6, 5137.0], [6.7, 5137.0], [6.8, 5137.0], [6.9, 5137.0], [7.0, 5146.0], [7.1, 5146.0], [7.2, 5146.0], [7.3, 5146.0], [7.4, 5146.0], [7.5, 5146.0], [7.6, 5146.0], [7.7, 5146.0], [7.8, 5146.0], [7.9, 5146.0], [8.0, 5148.0], [8.1, 5148.0], [8.2, 5148.0], [8.3, 5148.0], [8.4, 5148.0], [8.5, 5148.0], [8.6, 5148.0], [8.7, 5148.0], [8.8, 5148.0], [8.9, 5148.0], [9.0, 5148.0], [9.1, 5148.0], [9.2, 5148.0], [9.3, 5148.0], [9.4, 5148.0], [9.5, 5148.0], [9.6, 5148.0], [9.7, 5148.0], [9.8, 5148.0], [9.9, 5148.0], [10.0, 5154.0], [10.1, 5154.0], [10.2, 5154.0], [10.3, 5154.0], [10.4, 5154.0], [10.5, 5154.0], [10.6, 5154.0], [10.7, 5154.0], [10.8, 5154.0], [10.9, 5154.0], [11.0, 5179.0], [11.1, 5179.0], [11.2, 5179.0], [11.3, 5179.0], [11.4, 5179.0], [11.5, 5179.0], [11.6, 5179.0], [11.7, 5179.0], [11.8, 5179.0], [11.9, 5179.0], [12.0, 5181.0], [12.1, 5181.0], [12.2, 5181.0], [12.3, 5181.0], [12.4, 5181.0], [12.5, 5181.0], [12.6, 5181.0], [12.7, 5181.0], [12.8, 5181.0], [12.9, 5181.0], [13.0, 5182.0], [13.1, 5182.0], [13.2, 5182.0], [13.3, 5182.0], [13.4, 5182.0], [13.5, 5182.0], [13.6, 5182.0], [13.7, 5182.0], [13.8, 5182.0], [13.9, 5182.0], [14.0, 5183.0], [14.1, 5183.0], [14.2, 5183.0], [14.3, 5183.0], [14.4, 5183.0], [14.5, 5183.0], [14.6, 5183.0], [14.7, 5183.0], [14.8, 5183.0], [14.9, 5183.0], [15.0, 5186.0], [15.1, 5186.0], [15.2, 5186.0], [15.3, 5186.0], [15.4, 5186.0], [15.5, 5186.0], [15.6, 5186.0], [15.7, 5186.0], [15.8, 5186.0], [15.9, 5186.0], [16.0, 5197.0], [16.1, 5197.0], [16.2, 5197.0], [16.3, 5197.0], [16.4, 5197.0], [16.5, 5197.0], [16.6, 5197.0], [16.7, 5197.0], [16.8, 5197.0], [16.9, 5197.0], [17.0, 5204.0], [17.1, 5204.0], [17.2, 5204.0], [17.3, 5204.0], [17.4, 5204.0], [17.5, 5204.0], [17.6, 5204.0], [17.7, 5204.0], [17.8, 5204.0], [17.9, 5204.0], [18.0, 5205.0], [18.1, 5205.0], [18.2, 5205.0], [18.3, 5205.0], [18.4, 5205.0], [18.5, 5205.0], [18.6, 5205.0], [18.7, 5205.0], [18.8, 5205.0], [18.9, 5205.0], [19.0, 5205.0], [19.1, 5205.0], [19.2, 5205.0], [19.3, 5205.0], [19.4, 5205.0], [19.5, 5205.0], [19.6, 5205.0], [19.7, 5205.0], [19.8, 5205.0], [19.9, 5205.0], [20.0, 5206.0], [20.1, 5206.0], [20.2, 5206.0], [20.3, 5206.0], [20.4, 5206.0], [20.5, 5206.0], [20.6, 5206.0], [20.7, 5206.0], [20.8, 5206.0], [20.9, 5206.0], [21.0, 5206.0], [21.1, 5206.0], [21.2, 5206.0], [21.3, 5206.0], [21.4, 5206.0], [21.5, 5206.0], [21.6, 5206.0], [21.7, 5206.0], [21.8, 5206.0], [21.9, 5206.0], [22.0, 5209.0], [22.1, 5209.0], [22.2, 5209.0], [22.3, 5209.0], [22.4, 5209.0], [22.5, 5209.0], [22.6, 5209.0], [22.7, 5209.0], [22.8, 5209.0], [22.9, 5209.0], [23.0, 5210.0], [23.1, 5210.0], [23.2, 5210.0], [23.3, 5210.0], [23.4, 5210.0], [23.5, 5210.0], [23.6, 5210.0], [23.7, 5210.0], [23.8, 5210.0], [23.9, 5210.0], [24.0, 5219.0], [24.1, 5219.0], [24.2, 5219.0], [24.3, 5219.0], [24.4, 5219.0], [24.5, 5219.0], [24.6, 5219.0], [24.7, 5219.0], [24.8, 5219.0], [24.9, 5219.0], [25.0, 5219.0], [25.1, 5219.0], [25.2, 5219.0], [25.3, 5219.0], [25.4, 5219.0], [25.5, 5219.0], [25.6, 5219.0], [25.7, 5219.0], [25.8, 5219.0], [25.9, 5219.0], [26.0, 5220.0], [26.1, 5220.0], [26.2, 5220.0], [26.3, 5220.0], [26.4, 5220.0], [26.5, 5220.0], [26.6, 5220.0], [26.7, 5220.0], [26.8, 5220.0], [26.9, 5220.0], [27.0, 5222.0], [27.1, 5222.0], [27.2, 5222.0], [27.3, 5222.0], [27.4, 5222.0], [27.5, 5222.0], [27.6, 5222.0], [27.7, 5222.0], [27.8, 5222.0], [27.9, 5222.0], [28.0, 5222.0], [28.1, 5222.0], [28.2, 5222.0], [28.3, 5222.0], [28.4, 5222.0], [28.5, 5222.0], [28.6, 5222.0], [28.7, 5222.0], [28.8, 5222.0], [28.9, 5222.0], [29.0, 5223.0], [29.1, 5223.0], [29.2, 5223.0], [29.3, 5223.0], [29.4, 5223.0], [29.5, 5223.0], [29.6, 5223.0], [29.7, 5223.0], [29.8, 5223.0], [29.9, 5223.0], [30.0, 5223.0], [30.1, 5223.0], [30.2, 5223.0], [30.3, 5223.0], [30.4, 5223.0], [30.5, 5223.0], [30.6, 5223.0], [30.7, 5223.0], [30.8, 5223.0], [30.9, 5223.0], [31.0, 5224.0], [31.1, 5224.0], [31.2, 5224.0], [31.3, 5224.0], [31.4, 5224.0], [31.5, 5224.0], [31.6, 5224.0], [31.7, 5224.0], [31.8, 5224.0], [31.9, 5224.0], [32.0, 5224.0], [32.1, 5224.0], [32.2, 5224.0], [32.3, 5224.0], [32.4, 5224.0], [32.5, 5224.0], [32.6, 5224.0], [32.7, 5224.0], [32.8, 5224.0], [32.9, 5224.0], [33.0, 5225.0], [33.1, 5225.0], [33.2, 5225.0], [33.3, 5225.0], [33.4, 5225.0], [33.5, 5225.0], [33.6, 5225.0], [33.7, 5225.0], [33.8, 5225.0], [33.9, 5225.0], [34.0, 5225.0], [34.1, 5225.0], [34.2, 5225.0], [34.3, 5225.0], [34.4, 5225.0], [34.5, 5225.0], [34.6, 5225.0], [34.7, 5225.0], [34.8, 5225.0], [34.9, 5225.0], [35.0, 5226.0], [35.1, 5226.0], [35.2, 5226.0], [35.3, 5226.0], [35.4, 5226.0], [35.5, 5226.0], [35.6, 5226.0], [35.7, 5226.0], [35.8, 5226.0], [35.9, 5226.0], [36.0, 5229.0], [36.1, 5229.0], [36.2, 5229.0], [36.3, 5229.0], [36.4, 5229.0], [36.5, 5229.0], [36.6, 5229.0], [36.7, 5229.0], [36.8, 5229.0], [36.9, 5229.0], [37.0, 5229.0], [37.1, 5229.0], [37.2, 5229.0], [37.3, 5229.0], [37.4, 5229.0], [37.5, 5229.0], [37.6, 5229.0], [37.7, 5229.0], [37.8, 5229.0], [37.9, 5229.0], [38.0, 5231.0], [38.1, 5231.0], [38.2, 5231.0], [38.3, 5231.0], [38.4, 5231.0], [38.5, 5231.0], [38.6, 5231.0], [38.7, 5231.0], [38.8, 5231.0], [38.9, 5231.0], [39.0, 5231.0], [39.1, 5231.0], [39.2, 5231.0], [39.3, 5231.0], [39.4, 5231.0], [39.5, 5231.0], [39.6, 5231.0], [39.7, 5231.0], [39.8, 5231.0], [39.9, 5231.0], [40.0, 5234.0], [40.1, 5234.0], [40.2, 5234.0], [40.3, 5234.0], [40.4, 5234.0], [40.5, 5234.0], [40.6, 5234.0], [40.7, 5234.0], [40.8, 5234.0], [40.9, 5234.0], [41.0, 5235.0], [41.1, 5235.0], [41.2, 5235.0], [41.3, 5235.0], [41.4, 5235.0], [41.5, 5235.0], [41.6, 5235.0], [41.7, 5235.0], [41.8, 5235.0], [41.9, 5235.0], [42.0, 5236.0], [42.1, 5236.0], [42.2, 5236.0], [42.3, 5236.0], [42.4, 5236.0], [42.5, 5236.0], [42.6, 5236.0], [42.7, 5236.0], [42.8, 5236.0], [42.9, 5236.0], [43.0, 5240.0], [43.1, 5240.0], [43.2, 5240.0], [43.3, 5240.0], [43.4, 5240.0], [43.5, 5240.0], [43.6, 5240.0], [43.7, 5240.0], [43.8, 5240.0], [43.9, 5240.0], [44.0, 5242.0], [44.1, 5242.0], [44.2, 5242.0], [44.3, 5242.0], [44.4, 5242.0], [44.5, 5242.0], [44.6, 5242.0], [44.7, 5242.0], [44.8, 5242.0], [44.9, 5242.0], [45.0, 5244.0], [45.1, 5244.0], [45.2, 5244.0], [45.3, 5244.0], [45.4, 5244.0], [45.5, 5244.0], [45.6, 5244.0], [45.7, 5244.0], [45.8, 5244.0], [45.9, 5244.0], [46.0, 5247.0], [46.1, 5247.0], [46.2, 5247.0], [46.3, 5247.0], [46.4, 5247.0], [46.5, 5247.0], [46.6, 5247.0], [46.7, 5247.0], [46.8, 5247.0], [46.9, 5247.0], [47.0, 5247.0], [47.1, 5247.0], [47.2, 5247.0], [47.3, 5247.0], [47.4, 5247.0], [47.5, 5247.0], [47.6, 5247.0], [47.7, 5247.0], [47.8, 5247.0], [47.9, 5247.0], [48.0, 5248.0], [48.1, 5248.0], [48.2, 5248.0], [48.3, 5248.0], [48.4, 5248.0], [48.5, 5248.0], [48.6, 5248.0], [48.7, 5248.0], [48.8, 5248.0], [48.9, 5248.0], [49.0, 5250.0], [49.1, 5250.0], [49.2, 5250.0], [49.3, 5250.0], [49.4, 5250.0], [49.5, 5250.0], [49.6, 5250.0], [49.7, 5250.0], [49.8, 5250.0], [49.9, 5250.0], [50.0, 5250.0], [50.1, 5250.0], [50.2, 5250.0], [50.3, 5250.0], [50.4, 5250.0], [50.5, 5250.0], [50.6, 5250.0], [50.7, 5250.0], [50.8, 5250.0], [50.9, 5250.0], [51.0, 5259.0], [51.1, 5259.0], [51.2, 5259.0], [51.3, 5259.0], [51.4, 5259.0], [51.5, 5259.0], [51.6, 5259.0], [51.7, 5259.0], [51.8, 5259.0], [51.9, 5259.0], [52.0, 5260.0], [52.1, 5260.0], [52.2, 5260.0], [52.3, 5260.0], [52.4, 5260.0], [52.5, 5260.0], [52.6, 5260.0], [52.7, 5260.0], [52.8, 5260.0], [52.9, 5260.0], [53.0, 5261.0], [53.1, 5261.0], [53.2, 5261.0], [53.3, 5261.0], [53.4, 5261.0], [53.5, 5261.0], [53.6, 5261.0], [53.7, 5261.0], [53.8, 5261.0], [53.9, 5261.0], [54.0, 5262.0], [54.1, 5262.0], [54.2, 5262.0], [54.3, 5262.0], [54.4, 5262.0], [54.5, 5262.0], [54.6, 5262.0], [54.7, 5262.0], [54.8, 5262.0], [54.9, 5262.0], [55.0, 5263.0], [55.1, 5263.0], [55.2, 5263.0], [55.3, 5263.0], [55.4, 5263.0], [55.5, 5263.0], [55.6, 5263.0], [55.7, 5263.0], [55.8, 5263.0], [55.9, 5263.0], [56.0, 5264.0], [56.1, 5264.0], [56.2, 5264.0], [56.3, 5264.0], [56.4, 5264.0], [56.5, 5264.0], [56.6, 5264.0], [56.7, 5264.0], [56.8, 5264.0], [56.9, 5264.0], [57.0, 5267.0], [57.1, 5267.0], [57.2, 5267.0], [57.3, 5267.0], [57.4, 5267.0], [57.5, 5267.0], [57.6, 5267.0], [57.7, 5267.0], [57.8, 5267.0], [57.9, 5267.0], [58.0, 5267.0], [58.1, 5267.0], [58.2, 5267.0], [58.3, 5267.0], [58.4, 5267.0], [58.5, 5267.0], [58.6, 5267.0], [58.7, 5267.0], [58.8, 5267.0], [58.9, 5267.0], [59.0, 5268.0], [59.1, 5268.0], [59.2, 5268.0], [59.3, 5268.0], [59.4, 5268.0], [59.5, 5268.0], [59.6, 5268.0], [59.7, 5268.0], [59.8, 5268.0], [59.9, 5268.0], [60.0, 5268.0], [60.1, 5268.0], [60.2, 5268.0], [60.3, 5268.0], [60.4, 5268.0], [60.5, 5268.0], [60.6, 5268.0], [60.7, 5268.0], [60.8, 5268.0], [60.9, 5268.0], [61.0, 5269.0], [61.1, 5269.0], [61.2, 5269.0], [61.3, 5269.0], [61.4, 5269.0], [61.5, 5269.0], [61.6, 5269.0], [61.7, 5269.0], [61.8, 5269.0], [61.9, 5269.0], [62.0, 5289.0], [62.1, 5289.0], [62.2, 5289.0], [62.3, 5289.0], [62.4, 5289.0], [62.5, 5289.0], [62.6, 5289.0], [62.7, 5289.0], [62.8, 5289.0], [62.9, 5289.0], [63.0, 5297.0], [63.1, 5297.0], [63.2, 5297.0], [63.3, 5297.0], [63.4, 5297.0], [63.5, 5297.0], [63.6, 5297.0], [63.7, 5297.0], [63.8, 5297.0], [63.9, 5297.0], [64.0, 5303.0], [64.1, 5303.0], [64.2, 5303.0], [64.3, 5303.0], [64.4, 5303.0], [64.5, 5303.0], [64.6, 5303.0], [64.7, 5303.0], [64.8, 5303.0], [64.9, 5303.0], [65.0, 5307.0], [65.1, 5307.0], [65.2, 5307.0], [65.3, 5307.0], [65.4, 5307.0], [65.5, 5307.0], [65.6, 5307.0], [65.7, 5307.0], [65.8, 5307.0], [65.9, 5307.0], [66.0, 5317.0], [66.1, 5317.0], [66.2, 5317.0], [66.3, 5317.0], [66.4, 5317.0], [66.5, 5317.0], [66.6, 5317.0], [66.7, 5317.0], [66.8, 5317.0], [66.9, 5317.0], [67.0, 5318.0], [67.1, 5318.0], [67.2, 5318.0], [67.3, 5318.0], [67.4, 5318.0], [67.5, 5318.0], [67.6, 5318.0], [67.7, 5318.0], [67.8, 5318.0], [67.9, 5318.0], [68.0, 5320.0], [68.1, 5320.0], [68.2, 5320.0], [68.3, 5320.0], [68.4, 5320.0], [68.5, 5320.0], [68.6, 5320.0], [68.7, 5320.0], [68.8, 5320.0], [68.9, 5320.0], [69.0, 5322.0], [69.1, 5322.0], [69.2, 5322.0], [69.3, 5322.0], [69.4, 5322.0], [69.5, 5322.0], [69.6, 5322.0], [69.7, 5322.0], [69.8, 5322.0], [69.9, 5322.0], [70.0, 5323.0], [70.1, 5323.0], [70.2, 5323.0], [70.3, 5323.0], [70.4, 5323.0], [70.5, 5323.0], [70.6, 5323.0], [70.7, 5323.0], [70.8, 5323.0], [70.9, 5323.0], [71.0, 5324.0], [71.1, 5324.0], [71.2, 5324.0], [71.3, 5324.0], [71.4, 5324.0], [71.5, 5324.0], [71.6, 5324.0], [71.7, 5324.0], [71.8, 5324.0], [71.9, 5324.0], [72.0, 5325.0], [72.1, 5325.0], [72.2, 5325.0], [72.3, 5325.0], [72.4, 5325.0], [72.5, 5325.0], [72.6, 5325.0], [72.7, 5325.0], [72.8, 5325.0], [72.9, 5325.0], [73.0, 5336.0], [73.1, 5336.0], [73.2, 5336.0], [73.3, 5336.0], [73.4, 5336.0], [73.5, 5336.0], [73.6, 5336.0], [73.7, 5336.0], [73.8, 5336.0], [73.9, 5336.0], [74.0, 5344.0], [74.1, 5344.0], [74.2, 5344.0], [74.3, 5344.0], [74.4, 5344.0], [74.5, 5344.0], [74.6, 5344.0], [74.7, 5344.0], [74.8, 5344.0], [74.9, 5344.0], [75.0, 5350.0], [75.1, 5350.0], [75.2, 5350.0], [75.3, 5350.0], [75.4, 5350.0], [75.5, 5350.0], [75.6, 5350.0], [75.7, 5350.0], [75.8, 5350.0], [75.9, 5350.0], [76.0, 5351.0], [76.1, 5351.0], [76.2, 5351.0], [76.3, 5351.0], [76.4, 5351.0], [76.5, 5351.0], [76.6, 5351.0], [76.7, 5351.0], [76.8, 5351.0], [76.9, 5351.0], [77.0, 5354.0], [77.1, 5354.0], [77.2, 5354.0], [77.3, 5354.0], [77.4, 5354.0], [77.5, 5354.0], [77.6, 5354.0], [77.7, 5354.0], [77.8, 5354.0], [77.9, 5354.0], [78.0, 5361.0], [78.1, 5361.0], [78.2, 5361.0], [78.3, 5361.0], [78.4, 5361.0], [78.5, 5361.0], [78.6, 5361.0], [78.7, 5361.0], [78.8, 5361.0], [78.9, 5361.0], [79.0, 5372.0], [79.1, 5372.0], [79.2, 5372.0], [79.3, 5372.0], [79.4, 5372.0], [79.5, 5372.0], [79.6, 5372.0], [79.7, 5372.0], [79.8, 5372.0], [79.9, 5372.0], [80.0, 5373.0], [80.1, 5373.0], [80.2, 5373.0], [80.3, 5373.0], [80.4, 5373.0], [80.5, 5373.0], [80.6, 5373.0], [80.7, 5373.0], [80.8, 5373.0], [80.9, 5373.0], [81.0, 5375.0], [81.1, 5375.0], [81.2, 5375.0], [81.3, 5375.0], [81.4, 5375.0], [81.5, 5375.0], [81.6, 5375.0], [81.7, 5375.0], [81.8, 5375.0], [81.9, 5375.0], [82.0, 5375.0], [82.1, 5375.0], [82.2, 5375.0], [82.3, 5375.0], [82.4, 5375.0], [82.5, 5375.0], [82.6, 5375.0], [82.7, 5375.0], [82.8, 5375.0], [82.9, 5375.0], [83.0, 5377.0], [83.1, 5377.0], [83.2, 5377.0], [83.3, 5377.0], [83.4, 5377.0], [83.5, 5377.0], [83.6, 5377.0], [83.7, 5377.0], [83.8, 5377.0], [83.9, 5377.0], [84.0, 5384.0], [84.1, 5384.0], [84.2, 5384.0], [84.3, 5384.0], [84.4, 5384.0], [84.5, 5384.0], [84.6, 5384.0], [84.7, 5384.0], [84.8, 5384.0], [84.9, 5384.0], [85.0, 5387.0], [85.1, 5387.0], [85.2, 5387.0], [85.3, 5387.0], [85.4, 5387.0], [85.5, 5387.0], [85.6, 5387.0], [85.7, 5387.0], [85.8, 5387.0], [85.9, 5387.0], [86.0, 5389.0], [86.1, 5389.0], [86.2, 5389.0], [86.3, 5389.0], [86.4, 5389.0], [86.5, 5389.0], [86.6, 5389.0], [86.7, 5389.0], [86.8, 5389.0], [86.9, 5389.0], [87.0, 5400.0], [87.1, 5400.0], [87.2, 5400.0], [87.3, 5400.0], [87.4, 5400.0], [87.5, 5400.0], [87.6, 5400.0], [87.7, 5400.0], [87.8, 5400.0], [87.9, 5400.0], [88.0, 5409.0], [88.1, 5409.0], [88.2, 5409.0], [88.3, 5409.0], [88.4, 5409.0], [88.5, 5409.0], [88.6, 5409.0], [88.7, 5409.0], [88.8, 5409.0], [88.9, 5409.0], [89.0, 5412.0], [89.1, 5412.0], [89.2, 5412.0], [89.3, 5412.0], [89.4, 5412.0], [89.5, 5412.0], [89.6, 5412.0], [89.7, 5412.0], [89.8, 5412.0], [89.9, 5412.0], [90.0, 5419.0], [90.1, 5419.0], [90.2, 5419.0], [90.3, 5419.0], [90.4, 5419.0], [90.5, 5419.0], [90.6, 5419.0], [90.7, 5419.0], [90.8, 5419.0], [90.9, 5419.0], [91.0, 5430.0], [91.1, 5430.0], [91.2, 5430.0], [91.3, 5430.0], [91.4, 5430.0], [91.5, 5430.0], [91.6, 5430.0], [91.7, 5430.0], [91.8, 5430.0], [91.9, 5430.0], [92.0, 5451.0], [92.1, 5451.0], [92.2, 5451.0], [92.3, 5451.0], [92.4, 5451.0], [92.5, 5451.0], [92.6, 5451.0], [92.7, 5451.0], [92.8, 5451.0], [92.9, 5451.0], [93.0, 5460.0], [93.1, 5460.0], [93.2, 5460.0], [93.3, 5460.0], [93.4, 5460.0], [93.5, 5460.0], [93.6, 5460.0], [93.7, 5460.0], [93.8, 5460.0], [93.9, 5460.0], [94.0, 5484.0], [94.1, 5484.0], [94.2, 5484.0], [94.3, 5484.0], [94.4, 5484.0], [94.5, 5484.0], [94.6, 5484.0], [94.7, 5484.0], [94.8, 5484.0], [94.9, 5484.0], [95.0, 5488.0], [95.1, 5488.0], [95.2, 5488.0], [95.3, 5488.0], [95.4, 5488.0], [95.5, 5488.0], [95.6, 5488.0], [95.7, 5488.0], [95.8, 5488.0], [95.9, 5488.0], [96.0, 5493.0], [96.1, 5493.0], [96.2, 5493.0], [96.3, 5493.0], [96.4, 5493.0], [96.5, 5493.0], [96.6, 5493.0], [96.7, 5493.0], [96.8, 5493.0], [96.9, 5493.0], [97.0, 5502.0], [97.1, 5502.0], [97.2, 5502.0], [97.3, 5502.0], [97.4, 5502.0], [97.5, 5502.0], [97.6, 5502.0], [97.7, 5502.0], [97.8, 5502.0], [97.9, 5502.0], [98.0, 5506.0], [98.1, 5506.0], [98.2, 5506.0], [98.3, 5506.0], [98.4, 5506.0], [98.5, 5506.0], [98.6, 5506.0], [98.7, 5506.0], [98.8, 5506.0], [98.9, 5506.0], [99.0, 5525.0], [99.1, 5525.0], [99.2, 5525.0], [99.3, 5525.0], [99.4, 5525.0], [99.5, 5525.0], [99.6, 5525.0], [99.7, 5525.0], [99.8, 5525.0], [99.9, 5525.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[0.0, 2081.0], [0.1, 2081.0], [0.2, 2081.0], [0.3, 2081.0], [0.4, 2081.0], [0.5, 2081.0], [0.6, 2081.0], [0.7, 2081.0], [0.8, 2081.0], [0.9, 2081.0], [1.0, 2093.0], [1.1, 2093.0], [1.2, 2093.0], [1.3, 2093.0], [1.4, 2093.0], [1.5, 2093.0], [1.6, 2093.0], [1.7, 2093.0], [1.8, 2093.0], [1.9, 2093.0], [2.0, 2141.0], [2.1, 2141.0], [2.2, 2141.0], [2.3, 2141.0], [2.4, 2141.0], [2.5, 2141.0], [2.6, 2141.0], [2.7, 2141.0], [2.8, 2141.0], [2.9, 2141.0], [3.0, 2157.0], [3.1, 2157.0], [3.2, 2157.0], [3.3, 2157.0], [3.4, 2157.0], [3.5, 2157.0], [3.6, 2157.0], [3.7, 2157.0], [3.8, 2157.0], [3.9, 2157.0], [4.0, 2168.0], [4.1, 2168.0], [4.2, 2168.0], [4.3, 2168.0], [4.4, 2168.0], [4.5, 2168.0], [4.6, 2168.0], [4.7, 2168.0], [4.8, 2168.0], [4.9, 2168.0], [5.0, 2315.0], [5.1, 2315.0], [5.2, 2315.0], [5.3, 2315.0], [5.4, 2315.0], [5.5, 2315.0], [5.6, 2315.0], [5.7, 2315.0], [5.8, 2315.0], [5.9, 2315.0], [6.0, 2374.0], [6.1, 2374.0], [6.2, 2374.0], [6.3, 2374.0], [6.4, 2374.0], [6.5, 2374.0], [6.6, 2374.0], [6.7, 2374.0], [6.8, 2374.0], [6.9, 2374.0], [7.0, 2422.0], [7.1, 2422.0], [7.2, 2422.0], [7.3, 2422.0], [7.4, 2422.0], [7.5, 2422.0], [7.6, 2422.0], [7.7, 2422.0], [7.8, 2422.0], [7.9, 2422.0], [8.0, 2454.0], [8.1, 2454.0], [8.2, 2454.0], [8.3, 2454.0], [8.4, 2454.0], [8.5, 2454.0], [8.6, 2454.0], [8.7, 2454.0], [8.8, 2454.0], [8.9, 2454.0], [9.0, 2468.0], [9.1, 2468.0], [9.2, 2468.0], [9.3, 2468.0], [9.4, 2468.0], [9.5, 2468.0], [9.6, 2468.0], [9.7, 2468.0], [9.8, 2468.0], [9.9, 2468.0], [10.0, 2470.0], [10.1, 2470.0], [10.2, 2470.0], [10.3, 2470.0], [10.4, 2470.0], [10.5, 2470.0], [10.6, 2470.0], [10.7, 2470.0], [10.8, 2470.0], [10.9, 2470.0], [11.0, 2474.0], [11.1, 2474.0], [11.2, 2474.0], [11.3, 2474.0], [11.4, 2474.0], [11.5, 2474.0], [11.6, 2474.0], [11.7, 2474.0], [11.8, 2474.0], [11.9, 2474.0], [12.0, 2482.0], [12.1, 2482.0], [12.2, 2482.0], [12.3, 2482.0], [12.4, 2482.0], [12.5, 2482.0], [12.6, 2482.0], [12.7, 2482.0], [12.8, 2482.0], [12.9, 2482.0], [13.0, 2500.0], [13.1, 2500.0], [13.2, 2500.0], [13.3, 2500.0], [13.4, 2500.0], [13.5, 2500.0], [13.6, 2500.0], [13.7, 2500.0], [13.8, 2500.0], [13.9, 2500.0], [14.0, 2502.0], [14.1, 2502.0], [14.2, 2502.0], [14.3, 2502.0], [14.4, 2502.0], [14.5, 2502.0], [14.6, 2502.0], [14.7, 2502.0], [14.8, 2502.0], [14.9, 2502.0], [15.0, 2508.0], [15.1, 2508.0], [15.2, 2508.0], [15.3, 2508.0], [15.4, 2508.0], [15.5, 2508.0], [15.6, 2508.0], [15.7, 2508.0], [15.8, 2508.0], [15.9, 2508.0], [16.0, 2510.0], [16.1, 2510.0], [16.2, 2510.0], [16.3, 2510.0], [16.4, 2510.0], [16.5, 2510.0], [16.6, 2510.0], [16.7, 2510.0], [16.8, 2510.0], [16.9, 2510.0], [17.0, 2518.0], [17.1, 2518.0], [17.2, 2518.0], [17.3, 2518.0], [17.4, 2518.0], [17.5, 2518.0], [17.6, 2518.0], [17.7, 2518.0], [17.8, 2518.0], [17.9, 2518.0], [18.0, 2527.0], [18.1, 2527.0], [18.2, 2527.0], [18.3, 2527.0], [18.4, 2527.0], [18.5, 2527.0], [18.6, 2527.0], [18.7, 2527.0], [18.8, 2527.0], [18.9, 2527.0], [19.0, 2529.0], [19.1, 2529.0], [19.2, 2529.0], [19.3, 2529.0], [19.4, 2529.0], [19.5, 2529.0], [19.6, 2529.0], [19.7, 2529.0], [19.8, 2529.0], [19.9, 2529.0], [20.0, 2531.0], [20.1, 2531.0], [20.2, 2531.0], [20.3, 2531.0], [20.4, 2531.0], [20.5, 2531.0], [20.6, 2531.0], [20.7, 2531.0], [20.8, 2531.0], [20.9, 2531.0], [21.0, 2537.0], [21.1, 2537.0], [21.2, 2537.0], [21.3, 2537.0], [21.4, 2537.0], [21.5, 2537.0], [21.6, 2537.0], [21.7, 2537.0], [21.8, 2537.0], [21.9, 2537.0], [22.0, 2543.0], [22.1, 2543.0], [22.2, 2543.0], [22.3, 2543.0], [22.4, 2543.0], [22.5, 2543.0], [22.6, 2543.0], [22.7, 2543.0], [22.8, 2543.0], [22.9, 2543.0], [23.0, 2544.0], [23.1, 2544.0], [23.2, 2544.0], [23.3, 2544.0], [23.4, 2544.0], [23.5, 2544.0], [23.6, 2544.0], [23.7, 2544.0], [23.8, 2544.0], [23.9, 2544.0], [24.0, 2551.0], [24.1, 2551.0], [24.2, 2551.0], [24.3, 2551.0], [24.4, 2551.0], [24.5, 2551.0], [24.6, 2551.0], [24.7, 2551.0], [24.8, 2551.0], [24.9, 2551.0], [25.0, 2570.0], [25.1, 2570.0], [25.2, 2570.0], [25.3, 2570.0], [25.4, 2570.0], [25.5, 2570.0], [25.6, 2570.0], [25.7, 2570.0], [25.8, 2570.0], [25.9, 2570.0], [26.0, 2574.0], [26.1, 2574.0], [26.2, 2574.0], [26.3, 2574.0], [26.4, 2574.0], [26.5, 2574.0], [26.6, 2574.0], [26.7, 2574.0], [26.8, 2574.0], [26.9, 2574.0], [27.0, 2578.0], [27.1, 2578.0], [27.2, 2578.0], [27.3, 2578.0], [27.4, 2578.0], [27.5, 2578.0], [27.6, 2578.0], [27.7, 2578.0], [27.8, 2578.0], [27.9, 2578.0], [28.0, 2583.0], [28.1, 2583.0], [28.2, 2583.0], [28.3, 2583.0], [28.4, 2583.0], [28.5, 2583.0], [28.6, 2583.0], [28.7, 2583.0], [28.8, 2583.0], [28.9, 2583.0], [29.0, 2584.0], [29.1, 2584.0], [29.2, 2584.0], [29.3, 2584.0], [29.4, 2584.0], [29.5, 2584.0], [29.6, 2584.0], [29.7, 2584.0], [29.8, 2584.0], [29.9, 2584.0], [30.0, 2587.0], [30.1, 2587.0], [30.2, 2587.0], [30.3, 2587.0], [30.4, 2587.0], [30.5, 2587.0], [30.6, 2587.0], [30.7, 2587.0], [30.8, 2587.0], [30.9, 2587.0], [31.0, 2590.0], [31.1, 2590.0], [31.2, 2590.0], [31.3, 2590.0], [31.4, 2590.0], [31.5, 2590.0], [31.6, 2590.0], [31.7, 2590.0], [31.8, 2590.0], [31.9, 2590.0], [32.0, 2590.0], [32.1, 2590.0], [32.2, 2590.0], [32.3, 2590.0], [32.4, 2590.0], [32.5, 2590.0], [32.6, 2590.0], [32.7, 2590.0], [32.8, 2590.0], [32.9, 2590.0], [33.0, 2594.0], [33.1, 2594.0], [33.2, 2594.0], [33.3, 2594.0], [33.4, 2594.0], [33.5, 2594.0], [33.6, 2594.0], [33.7, 2594.0], [33.8, 2594.0], [33.9, 2594.0], [34.0, 2603.0], [34.1, 2603.0], [34.2, 2603.0], [34.3, 2603.0], [34.4, 2603.0], [34.5, 2603.0], [34.6, 2603.0], [34.7, 2603.0], [34.8, 2603.0], [34.9, 2603.0], [35.0, 2608.0], [35.1, 2608.0], [35.2, 2608.0], [35.3, 2608.0], [35.4, 2608.0], [35.5, 2608.0], [35.6, 2608.0], [35.7, 2608.0], [35.8, 2608.0], [35.9, 2608.0], [36.0, 2618.0], [36.1, 2618.0], [36.2, 2618.0], [36.3, 2618.0], [36.4, 2618.0], [36.5, 2618.0], [36.6, 2618.0], [36.7, 2618.0], [36.8, 2618.0], [36.9, 2618.0], [37.0, 2637.0], [37.1, 2637.0], [37.2, 2637.0], [37.3, 2637.0], [37.4, 2637.0], [37.5, 2637.0], [37.6, 2637.0], [37.7, 2637.0], [37.8, 2637.0], [37.9, 2637.0], [38.0, 2644.0], [38.1, 2644.0], [38.2, 2644.0], [38.3, 2644.0], [38.4, 2644.0], [38.5, 2644.0], [38.6, 2644.0], [38.7, 2644.0], [38.8, 2644.0], [38.9, 2644.0], [39.0, 2649.0], [39.1, 2649.0], [39.2, 2649.0], [39.3, 2649.0], [39.4, 2649.0], [39.5, 2649.0], [39.6, 2649.0], [39.7, 2649.0], [39.8, 2649.0], [39.9, 2649.0], [40.0, 2655.0], [40.1, 2655.0], [40.2, 2655.0], [40.3, 2655.0], [40.4, 2655.0], [40.5, 2655.0], [40.6, 2655.0], [40.7, 2655.0], [40.8, 2655.0], [40.9, 2655.0], [41.0, 2656.0], [41.1, 2656.0], [41.2, 2656.0], [41.3, 2656.0], [41.4, 2656.0], [41.5, 2656.0], [41.6, 2656.0], [41.7, 2656.0], [41.8, 2656.0], [41.9, 2656.0], [42.0, 2657.0], [42.1, 2657.0], [42.2, 2657.0], [42.3, 2657.0], [42.4, 2657.0], [42.5, 2657.0], [42.6, 2657.0], [42.7, 2657.0], [42.8, 2657.0], [42.9, 2657.0], [43.0, 2659.0], [43.1, 2659.0], [43.2, 2659.0], [43.3, 2659.0], [43.4, 2659.0], [43.5, 2659.0], [43.6, 2659.0], [43.7, 2659.0], [43.8, 2659.0], [43.9, 2659.0], [44.0, 2661.0], [44.1, 2661.0], [44.2, 2661.0], [44.3, 2661.0], [44.4, 2661.0], [44.5, 2661.0], [44.6, 2661.0], [44.7, 2661.0], [44.8, 2661.0], [44.9, 2661.0], [45.0, 2664.0], [45.1, 2664.0], [45.2, 2664.0], [45.3, 2664.0], [45.4, 2664.0], [45.5, 2664.0], [45.6, 2664.0], [45.7, 2664.0], [45.8, 2664.0], [45.9, 2664.0], [46.0, 2666.0], [46.1, 2666.0], [46.2, 2666.0], [46.3, 2666.0], [46.4, 2666.0], [46.5, 2666.0], [46.6, 2666.0], [46.7, 2666.0], [46.8, 2666.0], [46.9, 2666.0], [47.0, 2669.0], [47.1, 2669.0], [47.2, 2669.0], [47.3, 2669.0], [47.4, 2669.0], [47.5, 2669.0], [47.6, 2669.0], [47.7, 2669.0], [47.8, 2669.0], [47.9, 2669.0], [48.0, 2669.0], [48.1, 2669.0], [48.2, 2669.0], [48.3, 2669.0], [48.4, 2669.0], [48.5, 2669.0], [48.6, 2669.0], [48.7, 2669.0], [48.8, 2669.0], [48.9, 2669.0], [49.0, 2672.0], [49.1, 2672.0], [49.2, 2672.0], [49.3, 2672.0], [49.4, 2672.0], [49.5, 2672.0], [49.6, 2672.0], [49.7, 2672.0], [49.8, 2672.0], [49.9, 2672.0], [50.0, 2672.0], [50.1, 2672.0], [50.2, 2672.0], [50.3, 2672.0], [50.4, 2672.0], [50.5, 2672.0], [50.6, 2672.0], [50.7, 2672.0], [50.8, 2672.0], [50.9, 2672.0], [51.0, 2674.0], [51.1, 2674.0], [51.2, 2674.0], [51.3, 2674.0], [51.4, 2674.0], [51.5, 2674.0], [51.6, 2674.0], [51.7, 2674.0], [51.8, 2674.0], [51.9, 2674.0], [52.0, 2680.0], [52.1, 2680.0], [52.2, 2680.0], [52.3, 2680.0], [52.4, 2680.0], [52.5, 2680.0], [52.6, 2680.0], [52.7, 2680.0], [52.8, 2680.0], [52.9, 2680.0], [53.0, 2691.0], [53.1, 2691.0], [53.2, 2691.0], [53.3, 2691.0], [53.4, 2691.0], [53.5, 2691.0], [53.6, 2691.0], [53.7, 2691.0], [53.8, 2691.0], [53.9, 2691.0], [54.0, 2691.0], [54.1, 2691.0], [54.2, 2691.0], [54.3, 2691.0], [54.4, 2691.0], [54.5, 2691.0], [54.6, 2691.0], [54.7, 2691.0], [54.8, 2691.0], [54.9, 2691.0], [55.0, 2701.0], [55.1, 2701.0], [55.2, 2701.0], [55.3, 2701.0], [55.4, 2701.0], [55.5, 2701.0], [55.6, 2701.0], [55.7, 2701.0], [55.8, 2701.0], [55.9, 2701.0], [56.0, 2712.0], [56.1, 2712.0], [56.2, 2712.0], [56.3, 2712.0], [56.4, 2712.0], [56.5, 2712.0], [56.6, 2712.0], [56.7, 2712.0], [56.8, 2712.0], [56.9, 2712.0], [57.0, 2719.0], [57.1, 2719.0], [57.2, 2719.0], [57.3, 2719.0], [57.4, 2719.0], [57.5, 2719.0], [57.6, 2719.0], [57.7, 2719.0], [57.8, 2719.0], [57.9, 2719.0], [58.0, 2720.0], [58.1, 2720.0], [58.2, 2720.0], [58.3, 2720.0], [58.4, 2720.0], [58.5, 2720.0], [58.6, 2720.0], [58.7, 2720.0], [58.8, 2720.0], [58.9, 2720.0], [59.0, 2728.0], [59.1, 2728.0], [59.2, 2728.0], [59.3, 2728.0], [59.4, 2728.0], [59.5, 2728.0], [59.6, 2728.0], [59.7, 2728.0], [59.8, 2728.0], [59.9, 2728.0], [60.0, 2748.0], [60.1, 2748.0], [60.2, 2748.0], [60.3, 2748.0], [60.4, 2748.0], [60.5, 2748.0], [60.6, 2748.0], [60.7, 2748.0], [60.8, 2748.0], [60.9, 2748.0], [61.0, 2748.0], [61.1, 2748.0], [61.2, 2748.0], [61.3, 2748.0], [61.4, 2748.0], [61.5, 2748.0], [61.6, 2748.0], [61.7, 2748.0], [61.8, 2748.0], [61.9, 2748.0], [62.0, 2764.0], [62.1, 2764.0], [62.2, 2764.0], [62.3, 2764.0], [62.4, 2764.0], [62.5, 2764.0], [62.6, 2764.0], [62.7, 2764.0], [62.8, 2764.0], [62.9, 2764.0], [63.0, 2766.0], [63.1, 2766.0], [63.2, 2766.0], [63.3, 2766.0], [63.4, 2766.0], [63.5, 2766.0], [63.6, 2766.0], [63.7, 2766.0], [63.8, 2766.0], [63.9, 2766.0], [64.0, 2778.0], [64.1, 2778.0], [64.2, 2778.0], [64.3, 2778.0], [64.4, 2778.0], [64.5, 2778.0], [64.6, 2778.0], [64.7, 2778.0], [64.8, 2778.0], [64.9, 2778.0], [65.0, 2779.0], [65.1, 2779.0], [65.2, 2779.0], [65.3, 2779.0], [65.4, 2779.0], [65.5, 2779.0], [65.6, 2779.0], [65.7, 2779.0], [65.8, 2779.0], [65.9, 2779.0], [66.0, 2825.0], [66.1, 2825.0], [66.2, 2825.0], [66.3, 2825.0], [66.4, 2825.0], [66.5, 2825.0], [66.6, 2825.0], [66.7, 2825.0], [66.8, 2825.0], [66.9, 2825.0], [67.0, 2829.0], [67.1, 2829.0], [67.2, 2829.0], [67.3, 2829.0], [67.4, 2829.0], [67.5, 2829.0], [67.6, 2829.0], [67.7, 2829.0], [67.8, 2829.0], [67.9, 2829.0], [68.0, 2832.0], [68.1, 2832.0], [68.2, 2832.0], [68.3, 2832.0], [68.4, 2832.0], [68.5, 2832.0], [68.6, 2832.0], [68.7, 2832.0], [68.8, 2832.0], [68.9, 2832.0], [69.0, 2837.0], [69.1, 2837.0], [69.2, 2837.0], [69.3, 2837.0], [69.4, 2837.0], [69.5, 2837.0], [69.6, 2837.0], [69.7, 2837.0], [69.8, 2837.0], [69.9, 2837.0], [70.0, 2841.0], [70.1, 2841.0], [70.2, 2841.0], [70.3, 2841.0], [70.4, 2841.0], [70.5, 2841.0], [70.6, 2841.0], [70.7, 2841.0], [70.8, 2841.0], [70.9, 2841.0], [71.0, 2847.0], [71.1, 2847.0], [71.2, 2847.0], [71.3, 2847.0], [71.4, 2847.0], [71.5, 2847.0], [71.6, 2847.0], [71.7, 2847.0], [71.8, 2847.0], [71.9, 2847.0], [72.0, 2851.0], [72.1, 2851.0], [72.2, 2851.0], [72.3, 2851.0], [72.4, 2851.0], [72.5, 2851.0], [72.6, 2851.0], [72.7, 2851.0], [72.8, 2851.0], [72.9, 2851.0], [73.0, 2855.0], [73.1, 2855.0], [73.2, 2855.0], [73.3, 2855.0], [73.4, 2855.0], [73.5, 2855.0], [73.6, 2855.0], [73.7, 2855.0], [73.8, 2855.0], [73.9, 2855.0], [74.0, 2859.0], [74.1, 2859.0], [74.2, 2859.0], [74.3, 2859.0], [74.4, 2859.0], [74.5, 2859.0], [74.6, 2859.0], [74.7, 2859.0], [74.8, 2859.0], [74.9, 2859.0], [75.0, 2876.0], [75.1, 2876.0], [75.2, 2876.0], [75.3, 2876.0], [75.4, 2876.0], [75.5, 2876.0], [75.6, 2876.0], [75.7, 2876.0], [75.8, 2876.0], [75.9, 2876.0], [76.0, 2877.0], [76.1, 2877.0], [76.2, 2877.0], [76.3, 2877.0], [76.4, 2877.0], [76.5, 2877.0], [76.6, 2877.0], [76.7, 2877.0], [76.8, 2877.0], [76.9, 2877.0], [77.0, 2890.0], [77.1, 2890.0], [77.2, 2890.0], [77.3, 2890.0], [77.4, 2890.0], [77.5, 2890.0], [77.6, 2890.0], [77.7, 2890.0], [77.8, 2890.0], [77.9, 2890.0], [78.0, 2890.0], [78.1, 2890.0], [78.2, 2890.0], [78.3, 2890.0], [78.4, 2890.0], [78.5, 2890.0], [78.6, 2890.0], [78.7, 2890.0], [78.8, 2890.0], [78.9, 2890.0], [79.0, 2893.0], [79.1, 2893.0], [79.2, 2893.0], [79.3, 2893.0], [79.4, 2893.0], [79.5, 2893.0], [79.6, 2893.0], [79.7, 2893.0], [79.8, 2893.0], [79.9, 2893.0], [80.0, 2910.0], [80.1, 2910.0], [80.2, 2910.0], [80.3, 2910.0], [80.4, 2910.0], [80.5, 2910.0], [80.6, 2910.0], [80.7, 2910.0], [80.8, 2910.0], [80.9, 2910.0], [81.0, 2916.0], [81.1, 2916.0], [81.2, 2916.0], [81.3, 2916.0], [81.4, 2916.0], [81.5, 2916.0], [81.6, 2916.0], [81.7, 2916.0], [81.8, 2916.0], [81.9, 2916.0], [82.0, 2917.0], [82.1, 2917.0], [82.2, 2917.0], [82.3, 2917.0], [82.4, 2917.0], [82.5, 2917.0], [82.6, 2917.0], [82.7, 2917.0], [82.8, 2917.0], [82.9, 2917.0], [83.0, 2922.0], [83.1, 2922.0], [83.2, 2922.0], [83.3, 2922.0], [83.4, 2922.0], [83.5, 2922.0], [83.6, 2922.0], [83.7, 2922.0], [83.8, 2922.0], [83.9, 2922.0], [84.0, 2924.0], [84.1, 2924.0], [84.2, 2924.0], [84.3, 2924.0], [84.4, 2924.0], [84.5, 2924.0], [84.6, 2924.0], [84.7, 2924.0], [84.8, 2924.0], [84.9, 2924.0], [85.0, 2927.0], [85.1, 2927.0], [85.2, 2927.0], [85.3, 2927.0], [85.4, 2927.0], [85.5, 2927.0], [85.6, 2927.0], [85.7, 2927.0], [85.8, 2927.0], [85.9, 2927.0], [86.0, 2930.0], [86.1, 2930.0], [86.2, 2930.0], [86.3, 2930.0], [86.4, 2930.0], [86.5, 2930.0], [86.6, 2930.0], [86.7, 2930.0], [86.8, 2930.0], [86.9, 2930.0], [87.0, 2933.0], [87.1, 2933.0], [87.2, 2933.0], [87.3, 2933.0], [87.4, 2933.0], [87.5, 2933.0], [87.6, 2933.0], [87.7, 2933.0], [87.8, 2933.0], [87.9, 2933.0], [88.0, 2945.0], [88.1, 2945.0], [88.2, 2945.0], [88.3, 2945.0], [88.4, 2945.0], [88.5, 2945.0], [88.6, 2945.0], [88.7, 2945.0], [88.8, 2945.0], [88.9, 2945.0], [89.0, 2964.0], [89.1, 2964.0], [89.2, 2964.0], [89.3, 2964.0], [89.4, 2964.0], [89.5, 2964.0], [89.6, 2964.0], [89.7, 2964.0], [89.8, 2964.0], [89.9, 2964.0], [90.0, 2966.0], [90.1, 2966.0], [90.2, 2966.0], [90.3, 2966.0], [90.4, 2966.0], [90.5, 2966.0], [90.6, 2966.0], [90.7, 2966.0], [90.8, 2966.0], [90.9, 2966.0], [91.0, 2998.0], [91.1, 2998.0], [91.2, 2998.0], [91.3, 2998.0], [91.4, 2998.0], [91.5, 2998.0], [91.6, 2998.0], [91.7, 2998.0], [91.8, 2998.0], [91.9, 2998.0], [92.0, 3061.0], [92.1, 3061.0], [92.2, 3061.0], [92.3, 3061.0], [92.4, 3061.0], [92.5, 3061.0], [92.6, 3061.0], [92.7, 3061.0], [92.8, 3061.0], [92.9, 3061.0], [93.0, 3148.0], [93.1, 3148.0], [93.2, 3148.0], [93.3, 3148.0], [93.4, 3148.0], [93.5, 3148.0], [93.6, 3148.0], [93.7, 3148.0], [93.8, 3148.0], [93.9, 3148.0], [94.0, 3168.0], [94.1, 3168.0], [94.2, 3168.0], [94.3, 3168.0], [94.4, 3168.0], [94.5, 3168.0], [94.6, 3168.0], [94.7, 3168.0], [94.8, 3168.0], [94.9, 3168.0], [95.0, 3235.0], [95.1, 3235.0], [95.2, 3235.0], [95.3, 3235.0], [95.4, 3235.0], [95.5, 3235.0], [95.6, 3235.0], [95.7, 3235.0], [95.8, 3235.0], [95.9, 3235.0], [96.0, 3243.0], [96.1, 3243.0], [96.2, 3243.0], [96.3, 3243.0], [96.4, 3243.0], [96.5, 3243.0], [96.6, 3243.0], [96.7, 3243.0], [96.8, 3243.0], [96.9, 3243.0], [97.0, 3244.0], [97.1, 3244.0], [97.2, 3244.0], [97.3, 3244.0], [97.4, 3244.0], [97.5, 3244.0], [97.6, 3244.0], [97.7, 3244.0], [97.8, 3244.0], [97.9, 3244.0], [98.0, 3245.0], [98.1, 3245.0], [98.2, 3245.0], [98.3, 3245.0], [98.4, 3245.0], [98.5, 3245.0], [98.6, 3245.0], [98.7, 3245.0], [98.8, 3245.0], [98.9, 3245.0], [99.0, 3250.0], [99.1, 3250.0], [99.2, 3250.0], [99.3, 3250.0], [99.4, 3250.0], [99.5, 3250.0], [99.6, 3250.0], [99.7, 3250.0], [99.8, 3250.0], [99.9, 3250.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1700.0, "maxY": 47.0, "series": [{"data": [[2300.0, 9.0], [1700.0, 8.0], [1800.0, 43.0], [1900.0, 37.0], [2000.0, 3.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[2100.0, 17.0], [2300.0, 30.0], [2200.0, 21.0], [2400.0, 22.0], [2500.0, 2.0], [2600.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 4.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[2100.0, 15.0], [2300.0, 15.0], [2200.0, 12.0], [2400.0, 8.0], [2500.0, 14.0], [2600.0, 7.0], [2800.0, 7.0], [2700.0, 4.0], [2900.0, 3.0], [3000.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 10.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[5100.0, 17.0], [5200.0, 47.0], [5300.0, 23.0], [5400.0, 10.0], [5500.0, 3.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[2100.0, 3.0], [2300.0, 2.0], [2400.0, 6.0], [2500.0, 21.0], [2600.0, 21.0], [2700.0, 11.0], [2800.0, 14.0], [2900.0, 12.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 5.0], [2000.0, 2.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 124.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 376.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 376.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 124.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 90.99399999999996, "minX": 1.71673296E12, "maxY": 90.99399999999996, "series": [{"data": [[1.71673296E12, 90.99399999999996]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673296E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1719.0, "minX": 1.0, "maxY": 5277.600000000001, "series": [{"data": [[2.0, 1901.0], [3.0, 2012.0], [4.0, 1872.0], [5.0, 1908.0], [7.0, 1896.0], [9.0, 1834.0], [11.0, 1890.5], [12.0, 2395.0], [13.0, 1880.0], [14.0, 2001.0], [15.0, 1808.0], [16.0, 1809.0], [17.0, 1832.0], [18.0, 1860.0], [19.0, 2005.0], [21.0, 1853.5], [24.0, 1938.6666666666667], [25.0, 1998.0], [27.0, 1911.5], [28.0, 1941.0], [29.0, 1873.0], [30.0, 1861.0], [31.0, 1864.0], [33.0, 1873.0], [32.0, 1831.0], [35.0, 1902.0], [34.0, 1870.0], [36.0, 1774.0], [39.0, 1901.0], [38.0, 1863.5], [41.0, 1887.0], [43.0, 1949.0], [42.0, 1874.0], [45.0, 2372.0], [44.0, 1848.0], [47.0, 1963.0], [46.0, 1835.0], [49.0, 1887.0], [48.0, 1955.0], [51.0, 1789.0], [50.0, 1916.0], [52.0, 1823.0], [54.0, 1894.5], [86.0, 1894.0], [85.0, 1915.0], [84.0, 1967.9333333333334], [91.0, 2335.0], [90.0, 1798.0], [89.0, 1857.0], [88.0, 1928.5], [95.0, 2314.0], [94.0, 1890.0], [93.0, 1888.0], [92.0, 1895.0], [99.0, 1820.0], [98.0, 1786.0], [97.0, 1719.0], [96.0, 1742.0], [100.0, 1826.0], [1.0, 1978.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[54.970000000000006, 1926.1100000000001]], "isOverall": false, "label": "Create patient-Aggregated", "isController": false}, {"data": [[100.0, 2302.75]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[100.0, 2302.75]], "isOverall": false, "label": "Get all patients-Aggregated", "isController": false}, {"data": [[100.0, 2406.670000000001]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[100.0, 2406.670000000001]], "isOverall": false, "label": "Create Doctor-Aggregated", "isController": false}, {"data": [[100.0, 5277.600000000001]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[100.0, 5277.600000000001]], "isOverall": false, "label": "Create prescription-Aggregated", "isController": false}, {"data": [[100.0, 2704.55]], "isOverall": false, "label": "Release drug", "isController": false}, {"data": [[100.0, 2704.55]], "isOverall": false, "label": "Release drug-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8522.566666666668, "minX": 1.71673296E12, "maxY": 18976.666666666668, "series": [{"data": [[1.71673296E12, 8522.566666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71673296E12, 18976.666666666668]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673296E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1926.1100000000001, "minX": 1.71673296E12, "maxY": 5277.600000000001, "series": [{"data": [[1.71673296E12, 1926.1100000000001]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673296E12, 2302.75]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673296E12, 2406.670000000001]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673296E12, 5277.600000000001]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673296E12, 2704.55]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673296E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1921.4199999999998, "minX": 1.71673296E12, "maxY": 5273.6, "series": [{"data": [[1.71673296E12, 1921.4199999999998]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673296E12, 2280.8900000000003]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673296E12, 2386.989999999999]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673296E12, 5273.6]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673296E12, 2704.520000000001]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673296E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71673296E12, "maxY": 0.35999999999999993, "series": [{"data": [[1.71673296E12, 0.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673296E12, 0.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673296E12, 0.35999999999999993]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673296E12, 0.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673296E12, 0.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673296E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1742.0, "minX": 1.71673296E12, "maxY": 3250.0, "series": [{"data": [[1.71673296E12, 3250.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71673296E12, 1742.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71673296E12, 2842.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71673296E12, 3243.23]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71673296E12, 2346.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71673296E12, 2924.45]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673296E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1826.0, "minX": 8.0, "maxY": 5261.5, "series": [{"data": [[16.0, 2401.0], [84.0, 2310.5], [88.0, 2672.0], [12.0, 2913.5], [100.0, 2068.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 5129.5], [84.0, 2056.5], [88.0, 2168.0], [92.0, 5261.5], [100.0, 1826.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 100.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1826.0, "minX": 8.0, "maxY": 5257.0, "series": [{"data": [[16.0, 2341.5], [84.0, 2293.5], [88.0, 2672.0], [12.0, 2913.5], [100.0, 2055.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 5129.0], [84.0, 2056.0], [88.0, 2167.0], [92.0, 5257.0], [100.0, 1826.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 100.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.71673296E12, "maxY": 8.333333333333334, "series": [{"data": [[1.71673296E12, 8.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673296E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.066666666666667, "minX": 1.71673296E12, "maxY": 6.266666666666667, "series": [{"data": [[1.71673296E12, 6.266666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71673296E12, 2.066666666666667]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673296E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.71673296E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.71673296E12, 0.13333333333333333]], "isOverall": false, "label": "Get all patients-failure", "isController": false}, {"data": [[1.71673296E12, 1.5333333333333334]], "isOverall": false, "label": "Get all patients-success", "isController": false}, {"data": [[1.71673296E12, 1.6666666666666667]], "isOverall": false, "label": "Create prescription-failure", "isController": false}, {"data": [[1.71673296E12, 1.5166666666666666]], "isOverall": false, "label": "Release drug-success", "isController": false}, {"data": [[1.71673296E12, 0.05]], "isOverall": false, "label": "Create Doctor-failure", "isController": false}, {"data": [[1.71673296E12, 0.15]], "isOverall": false, "label": "Release drug-failure", "isController": false}, {"data": [[1.71673296E12, 1.6166666666666667]], "isOverall": false, "label": "Create Doctor-success", "isController": false}, {"data": [[1.71673296E12, 0.06666666666666667]], "isOverall": false, "label": "Create patient-failure", "isController": false}, {"data": [[1.71673296E12, 1.6]], "isOverall": false, "label": "Create patient-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673296E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.066666666666667, "minX": 1.71673296E12, "maxY": 6.266666666666667, "series": [{"data": [[1.71673296E12, 6.266666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71673296E12, 2.066666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673296E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

