/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1342.0, "minX": 0.0, "maxY": 5043.0, "series": [{"data": [[0.0, 3520.0], [0.1, 3520.0], [0.2, 3520.0], [0.3, 3520.0], [0.4, 3520.0], [0.5, 3520.0], [0.6, 3520.0], [0.7, 3551.0], [0.8, 3551.0], [0.9, 3551.0], [1.0, 3551.0], [1.1, 3551.0], [1.2, 3551.0], [1.3, 3551.0], [1.4, 3563.0], [1.5, 3563.0], [1.6, 3563.0], [1.7, 3563.0], [1.8, 3563.0], [1.9, 3563.0], [2.0, 3564.0], [2.1, 3564.0], [2.2, 3564.0], [2.3, 3564.0], [2.4, 3564.0], [2.5, 3564.0], [2.6, 3564.0], [2.7, 3584.0], [2.8, 3584.0], [2.9, 3584.0], [3.0, 3584.0], [3.1, 3584.0], [3.2, 3584.0], [3.3, 3584.0], [3.4, 3608.0], [3.5, 3608.0], [3.6, 3608.0], [3.7, 3608.0], [3.8, 3608.0], [3.9, 3608.0], [4.0, 3610.0], [4.1, 3610.0], [4.2, 3610.0], [4.3, 3610.0], [4.4, 3610.0], [4.5, 3610.0], [4.6, 3610.0], [4.7, 3611.0], [4.8, 3611.0], [4.9, 3611.0], [5.0, 3611.0], [5.1, 3611.0], [5.2, 3611.0], [5.3, 3611.0], [5.4, 3616.0], [5.5, 3616.0], [5.6, 3616.0], [5.7, 3616.0], [5.8, 3616.0], [5.9, 3616.0], [6.0, 3617.0], [6.1, 3617.0], [6.2, 3617.0], [6.3, 3617.0], [6.4, 3617.0], [6.5, 3617.0], [6.6, 3617.0], [6.7, 3618.0], [6.8, 3618.0], [6.9, 3618.0], [7.0, 3618.0], [7.1, 3618.0], [7.2, 3618.0], [7.3, 3618.0], [7.4, 3624.0], [7.5, 3624.0], [7.6, 3624.0], [7.7, 3624.0], [7.8, 3624.0], [7.9, 3624.0], [8.0, 3627.0], [8.1, 3627.0], [8.2, 3627.0], [8.3, 3627.0], [8.4, 3627.0], [8.5, 3627.0], [8.6, 3627.0], [8.7, 3630.0], [8.8, 3630.0], [8.9, 3630.0], [9.0, 3630.0], [9.1, 3630.0], [9.2, 3630.0], [9.3, 3630.0], [9.4, 3631.0], [9.5, 3631.0], [9.6, 3631.0], [9.7, 3631.0], [9.8, 3631.0], [9.9, 3631.0], [10.0, 3634.0], [10.1, 3634.0], [10.2, 3634.0], [10.3, 3634.0], [10.4, 3634.0], [10.5, 3634.0], [10.6, 3634.0], [10.7, 3635.0], [10.8, 3635.0], [10.9, 3635.0], [11.0, 3635.0], [11.1, 3635.0], [11.2, 3635.0], [11.3, 3635.0], [11.4, 3638.0], [11.5, 3638.0], [11.6, 3638.0], [11.7, 3638.0], [11.8, 3638.0], [11.9, 3638.0], [12.0, 3640.0], [12.1, 3640.0], [12.2, 3640.0], [12.3, 3640.0], [12.4, 3640.0], [12.5, 3640.0], [12.6, 3640.0], [12.7, 3641.0], [12.8, 3641.0], [12.9, 3641.0], [13.0, 3641.0], [13.1, 3641.0], [13.2, 3641.0], [13.3, 3641.0], [13.4, 3650.0], [13.5, 3650.0], [13.6, 3650.0], [13.7, 3650.0], [13.8, 3650.0], [13.9, 3650.0], [14.0, 3650.0], [14.1, 3650.0], [14.2, 3650.0], [14.3, 3650.0], [14.4, 3650.0], [14.5, 3650.0], [14.6, 3650.0], [14.7, 3652.0], [14.8, 3652.0], [14.9, 3652.0], [15.0, 3652.0], [15.1, 3652.0], [15.2, 3652.0], [15.3, 3652.0], [15.4, 3669.0], [15.5, 3669.0], [15.6, 3669.0], [15.7, 3669.0], [15.8, 3669.0], [15.9, 3669.0], [16.0, 3674.0], [16.1, 3674.0], [16.2, 3674.0], [16.3, 3674.0], [16.4, 3674.0], [16.5, 3674.0], [16.6, 3674.0], [16.7, 3674.0], [16.8, 3674.0], [16.9, 3674.0], [17.0, 3674.0], [17.1, 3674.0], [17.2, 3674.0], [17.3, 3674.0], [17.4, 3686.0], [17.5, 3686.0], [17.6, 3686.0], [17.7, 3686.0], [17.8, 3686.0], [17.9, 3686.0], [18.0, 3696.0], [18.1, 3696.0], [18.2, 3696.0], [18.3, 3696.0], [18.4, 3696.0], [18.5, 3696.0], [18.6, 3696.0], [18.7, 3700.0], [18.8, 3700.0], [18.9, 3700.0], [19.0, 3700.0], [19.1, 3700.0], [19.2, 3700.0], [19.3, 3700.0], [19.4, 3703.0], [19.5, 3703.0], [19.6, 3703.0], [19.7, 3703.0], [19.8, 3703.0], [19.9, 3703.0], [20.0, 3712.0], [20.1, 3712.0], [20.2, 3712.0], [20.3, 3712.0], [20.4, 3712.0], [20.5, 3712.0], [20.6, 3712.0], [20.7, 3714.0], [20.8, 3714.0], [20.9, 3714.0], [21.0, 3714.0], [21.1, 3714.0], [21.2, 3714.0], [21.3, 3714.0], [21.4, 3735.0], [21.5, 3735.0], [21.6, 3735.0], [21.7, 3735.0], [21.8, 3735.0], [21.9, 3735.0], [22.0, 3735.0], [22.1, 3743.0], [22.2, 3743.0], [22.3, 3743.0], [22.4, 3743.0], [22.5, 3743.0], [22.6, 3743.0], [22.7, 3748.0], [22.8, 3748.0], [22.9, 3748.0], [23.0, 3748.0], [23.1, 3748.0], [23.2, 3748.0], [23.3, 3748.0], [23.4, 3749.0], [23.5, 3749.0], [23.6, 3749.0], [23.7, 3749.0], [23.8, 3749.0], [23.9, 3749.0], [24.0, 3749.0], [24.1, 3822.0], [24.2, 3822.0], [24.3, 3822.0], [24.4, 3822.0], [24.5, 3822.0], [24.6, 3822.0], [24.7, 3830.0], [24.8, 3830.0], [24.9, 3830.0], [25.0, 3830.0], [25.1, 3830.0], [25.2, 3830.0], [25.3, 3830.0], [25.4, 3832.0], [25.5, 3832.0], [25.6, 3832.0], [25.7, 3832.0], [25.8, 3832.0], [25.9, 3832.0], [26.0, 3832.0], [26.1, 3838.0], [26.2, 3838.0], [26.3, 3838.0], [26.4, 3838.0], [26.5, 3838.0], [26.6, 3838.0], [26.7, 3860.0], [26.8, 3860.0], [26.9, 3860.0], [27.0, 3860.0], [27.1, 3860.0], [27.2, 3860.0], [27.3, 3860.0], [27.4, 3863.0], [27.5, 3863.0], [27.6, 3863.0], [27.7, 3863.0], [27.8, 3863.0], [27.9, 3863.0], [28.0, 3863.0], [28.1, 3866.0], [28.2, 3866.0], [28.3, 3866.0], [28.4, 3866.0], [28.5, 3866.0], [28.6, 3866.0], [28.7, 3866.0], [28.8, 3866.0], [28.9, 3866.0], [29.0, 3866.0], [29.1, 3866.0], [29.2, 3866.0], [29.3, 3866.0], [29.4, 3869.0], [29.5, 3869.0], [29.6, 3869.0], [29.7, 3869.0], [29.8, 3869.0], [29.9, 3869.0], [30.0, 3869.0], [30.1, 3874.0], [30.2, 3874.0], [30.3, 3874.0], [30.4, 3874.0], [30.5, 3874.0], [30.6, 3874.0], [30.7, 3883.0], [30.8, 3883.0], [30.9, 3883.0], [31.0, 3883.0], [31.1, 3883.0], [31.2, 3883.0], [31.3, 3883.0], [31.4, 3885.0], [31.5, 3885.0], [31.6, 3885.0], [31.7, 3885.0], [31.8, 3885.0], [31.9, 3885.0], [32.0, 3885.0], [32.1, 3885.0], [32.2, 3885.0], [32.3, 3885.0], [32.4, 3885.0], [32.5, 3885.0], [32.6, 3885.0], [32.7, 3889.0], [32.8, 3889.0], [32.9, 3889.0], [33.0, 3889.0], [33.1, 3889.0], [33.2, 3889.0], [33.3, 3889.0], [33.4, 3893.0], [33.5, 3893.0], [33.6, 3893.0], [33.7, 3893.0], [33.8, 3893.0], [33.9, 3893.0], [34.0, 3893.0], [34.1, 3893.0], [34.2, 3893.0], [34.3, 3893.0], [34.4, 3893.0], [34.5, 3893.0], [34.6, 3893.0], [34.7, 3896.0], [34.8, 3896.0], [34.9, 3896.0], [35.0, 3896.0], [35.1, 3896.0], [35.2, 3896.0], [35.3, 3896.0], [35.4, 3896.0], [35.5, 3896.0], [35.6, 3896.0], [35.7, 3896.0], [35.8, 3896.0], [35.9, 3896.0], [36.0, 3896.0], [36.1, 3903.0], [36.2, 3903.0], [36.3, 3903.0], [36.4, 3903.0], [36.5, 3903.0], [36.6, 3903.0], [36.7, 3910.0], [36.8, 3910.0], [36.9, 3910.0], [37.0, 3910.0], [37.1, 3910.0], [37.2, 3910.0], [37.3, 3910.0], [37.4, 3915.0], [37.5, 3915.0], [37.6, 3915.0], [37.7, 3915.0], [37.8, 3915.0], [37.9, 3915.0], [38.0, 3915.0], [38.1, 3918.0], [38.2, 3918.0], [38.3, 3918.0], [38.4, 3918.0], [38.5, 3918.0], [38.6, 3918.0], [38.7, 3918.0], [38.8, 3918.0], [38.9, 3918.0], [39.0, 3918.0], [39.1, 3918.0], [39.2, 3918.0], [39.3, 3918.0], [39.4, 3922.0], [39.5, 3922.0], [39.6, 3922.0], [39.7, 3922.0], [39.8, 3922.0], [39.9, 3922.0], [40.0, 3922.0], [40.1, 3926.0], [40.2, 3926.0], [40.3, 3926.0], [40.4, 3926.0], [40.5, 3926.0], [40.6, 3926.0], [40.7, 3927.0], [40.8, 3927.0], [40.9, 3927.0], [41.0, 3927.0], [41.1, 3927.0], [41.2, 3927.0], [41.3, 3927.0], [41.4, 3931.0], [41.5, 3931.0], [41.6, 3931.0], [41.7, 3931.0], [41.8, 3931.0], [41.9, 3931.0], [42.0, 3931.0], [42.1, 3935.0], [42.2, 3935.0], [42.3, 3935.0], [42.4, 3935.0], [42.5, 3935.0], [42.6, 3935.0], [42.7, 3937.0], [42.8, 3937.0], [42.9, 3937.0], [43.0, 3937.0], [43.1, 3937.0], [43.2, 3937.0], [43.3, 3937.0], [43.4, 3945.0], [43.5, 3945.0], [43.6, 3945.0], [43.7, 3945.0], [43.8, 3945.0], [43.9, 3945.0], [44.0, 3946.0], [44.1, 3946.0], [44.2, 3946.0], [44.3, 3946.0], [44.4, 3946.0], [44.5, 3946.0], [44.6, 3946.0], [44.7, 3951.0], [44.8, 3951.0], [44.9, 3951.0], [45.0, 3951.0], [45.1, 3951.0], [45.2, 3951.0], [45.3, 3951.0], [45.4, 3951.0], [45.5, 3951.0], [45.6, 3951.0], [45.7, 3951.0], [45.8, 3951.0], [45.9, 3951.0], [46.0, 3953.0], [46.1, 3953.0], [46.2, 3953.0], [46.3, 3953.0], [46.4, 3953.0], [46.5, 3953.0], [46.6, 3953.0], [46.7, 3953.0], [46.8, 3953.0], [46.9, 3953.0], [47.0, 3953.0], [47.1, 3953.0], [47.2, 3953.0], [47.3, 3953.0], [47.4, 3953.0], [47.5, 3953.0], [47.6, 3953.0], [47.7, 3953.0], [47.8, 3953.0], [47.9, 3953.0], [48.0, 3954.0], [48.1, 3954.0], [48.2, 3954.0], [48.3, 3954.0], [48.4, 3954.0], [48.5, 3954.0], [48.6, 3954.0], [48.7, 3956.0], [48.8, 3956.0], [48.9, 3956.0], [49.0, 3956.0], [49.1, 3956.0], [49.2, 3956.0], [49.3, 3956.0], [49.4, 3956.0], [49.5, 3956.0], [49.6, 3956.0], [49.7, 3956.0], [49.8, 3956.0], [49.9, 3956.0], [50.0, 3958.0], [50.1, 3958.0], [50.2, 3958.0], [50.3, 3958.0], [50.4, 3958.0], [50.5, 3958.0], [50.6, 3958.0], [50.7, 3960.0], [50.8, 3960.0], [50.9, 3960.0], [51.0, 3960.0], [51.1, 3960.0], [51.2, 3960.0], [51.3, 3960.0], [51.4, 3966.0], [51.5, 3966.0], [51.6, 3966.0], [51.7, 3966.0], [51.8, 3966.0], [51.9, 3966.0], [52.0, 3968.0], [52.1, 3968.0], [52.2, 3968.0], [52.3, 3968.0], [52.4, 3968.0], [52.5, 3968.0], [52.6, 3968.0], [52.7, 3968.0], [52.8, 3968.0], [52.9, 3968.0], [53.0, 3968.0], [53.1, 3968.0], [53.2, 3968.0], [53.3, 3968.0], [53.4, 3969.0], [53.5, 3969.0], [53.6, 3969.0], [53.7, 3969.0], [53.8, 3969.0], [53.9, 3969.0], [54.0, 3979.0], [54.1, 3979.0], [54.2, 3979.0], [54.3, 3979.0], [54.4, 3979.0], [54.5, 3979.0], [54.6, 3979.0], [54.7, 3979.0], [54.8, 3979.0], [54.9, 3979.0], [55.0, 3979.0], [55.1, 3979.0], [55.2, 3979.0], [55.3, 3979.0], [55.4, 3980.0], [55.5, 3980.0], [55.6, 3980.0], [55.7, 3980.0], [55.8, 3980.0], [55.9, 3980.0], [56.0, 3982.0], [56.1, 3982.0], [56.2, 3982.0], [56.3, 3982.0], [56.4, 3982.0], [56.5, 3982.0], [56.6, 3982.0], [56.7, 3983.0], [56.8, 3983.0], [56.9, 3983.0], [57.0, 3983.0], [57.1, 3983.0], [57.2, 3983.0], [57.3, 3983.0], [57.4, 3987.0], [57.5, 3987.0], [57.6, 3987.0], [57.7, 3987.0], [57.8, 3987.0], [57.9, 3987.0], [58.0, 3993.0], [58.1, 3993.0], [58.2, 3993.0], [58.3, 3993.0], [58.4, 3993.0], [58.5, 3993.0], [58.6, 3993.0], [58.7, 3993.0], [58.8, 3993.0], [58.9, 3993.0], [59.0, 3993.0], [59.1, 3993.0], [59.2, 3993.0], [59.3, 3993.0], [59.4, 4005.0], [59.5, 4005.0], [59.6, 4005.0], [59.7, 4005.0], [59.8, 4005.0], [59.9, 4005.0], [60.0, 4007.0], [60.1, 4007.0], [60.2, 4007.0], [60.3, 4007.0], [60.4, 4007.0], [60.5, 4007.0], [60.6, 4007.0], [60.7, 4011.0], [60.8, 4011.0], [60.9, 4011.0], [61.0, 4011.0], [61.1, 4011.0], [61.2, 4011.0], [61.3, 4011.0], [61.4, 4024.0], [61.5, 4024.0], [61.6, 4024.0], [61.7, 4024.0], [61.8, 4024.0], [61.9, 4024.0], [62.0, 4027.0], [62.1, 4027.0], [62.2, 4027.0], [62.3, 4027.0], [62.4, 4027.0], [62.5, 4027.0], [62.6, 4027.0], [62.7, 4027.0], [62.8, 4027.0], [62.9, 4027.0], [63.0, 4027.0], [63.1, 4027.0], [63.2, 4027.0], [63.3, 4027.0], [63.4, 4032.0], [63.5, 4032.0], [63.6, 4032.0], [63.7, 4032.0], [63.8, 4032.0], [63.9, 4032.0], [64.0, 4034.0], [64.1, 4034.0], [64.2, 4034.0], [64.3, 4034.0], [64.4, 4034.0], [64.5, 4034.0], [64.6, 4034.0], [64.7, 4036.0], [64.8, 4036.0], [64.9, 4036.0], [65.0, 4036.0], [65.1, 4036.0], [65.2, 4036.0], [65.3, 4036.0], [65.4, 4036.0], [65.5, 4036.0], [65.6, 4036.0], [65.7, 4036.0], [65.8, 4036.0], [65.9, 4036.0], [66.0, 4044.0], [66.1, 4044.0], [66.2, 4044.0], [66.3, 4044.0], [66.4, 4044.0], [66.5, 4044.0], [66.6, 4044.0], [66.7, 4050.0], [66.8, 4050.0], [66.9, 4050.0], [67.0, 4050.0], [67.1, 4050.0], [67.2, 4050.0], [67.3, 4050.0], [67.4, 4063.0], [67.5, 4063.0], [67.6, 4063.0], [67.7, 4063.0], [67.8, 4063.0], [67.9, 4063.0], [68.0, 4077.0], [68.1, 4077.0], [68.2, 4077.0], [68.3, 4077.0], [68.4, 4077.0], [68.5, 4077.0], [68.6, 4077.0], [68.7, 4103.0], [68.8, 4103.0], [68.9, 4103.0], [69.0, 4103.0], [69.1, 4103.0], [69.2, 4103.0], [69.3, 4103.0], [69.4, 4111.0], [69.5, 4111.0], [69.6, 4111.0], [69.7, 4111.0], [69.8, 4111.0], [69.9, 4111.0], [70.0, 4111.0], [70.1, 4111.0], [70.2, 4111.0], [70.3, 4111.0], [70.4, 4111.0], [70.5, 4111.0], [70.6, 4111.0], [70.7, 4120.0], [70.8, 4120.0], [70.9, 4120.0], [71.0, 4120.0], [71.1, 4120.0], [71.2, 4120.0], [71.3, 4120.0], [71.4, 4135.0], [71.5, 4135.0], [71.6, 4135.0], [71.7, 4135.0], [71.8, 4135.0], [71.9, 4135.0], [72.0, 4149.0], [72.1, 4149.0], [72.2, 4149.0], [72.3, 4149.0], [72.4, 4149.0], [72.5, 4149.0], [72.6, 4149.0], [72.7, 4155.0], [72.8, 4155.0], [72.9, 4155.0], [73.0, 4155.0], [73.1, 4155.0], [73.2, 4155.0], [73.3, 4155.0], [73.4, 4162.0], [73.5, 4162.0], [73.6, 4162.0], [73.7, 4162.0], [73.8, 4162.0], [73.9, 4162.0], [74.0, 4162.0], [74.1, 4165.0], [74.2, 4165.0], [74.3, 4165.0], [74.4, 4165.0], [74.5, 4165.0], [74.6, 4165.0], [74.7, 4173.0], [74.8, 4173.0], [74.9, 4173.0], [75.0, 4173.0], [75.1, 4173.0], [75.2, 4173.0], [75.3, 4173.0], [75.4, 4174.0], [75.5, 4174.0], [75.6, 4174.0], [75.7, 4174.0], [75.8, 4174.0], [75.9, 4174.0], [76.0, 4174.0], [76.1, 4174.0], [76.2, 4174.0], [76.3, 4174.0], [76.4, 4174.0], [76.5, 4174.0], [76.6, 4174.0], [76.7, 4177.0], [76.8, 4177.0], [76.9, 4177.0], [77.0, 4177.0], [77.1, 4177.0], [77.2, 4177.0], [77.3, 4177.0], [77.4, 4204.0], [77.5, 4204.0], [77.6, 4204.0], [77.7, 4204.0], [77.8, 4204.0], [77.9, 4204.0], [78.0, 4204.0], [78.1, 4205.0], [78.2, 4205.0], [78.3, 4205.0], [78.4, 4205.0], [78.5, 4205.0], [78.6, 4205.0], [78.7, 4206.0], [78.8, 4206.0], [78.9, 4206.0], [79.0, 4206.0], [79.1, 4206.0], [79.2, 4206.0], [79.3, 4206.0], [79.4, 4242.0], [79.5, 4242.0], [79.6, 4242.0], [79.7, 4242.0], [79.8, 4242.0], [79.9, 4242.0], [80.0, 4242.0], [80.1, 4250.0], [80.2, 4250.0], [80.3, 4250.0], [80.4, 4250.0], [80.5, 4250.0], [80.6, 4250.0], [80.7, 4251.0], [80.8, 4251.0], [80.9, 4251.0], [81.0, 4251.0], [81.1, 4251.0], [81.2, 4251.0], [81.3, 4251.0], [81.4, 4259.0], [81.5, 4259.0], [81.6, 4259.0], [81.7, 4259.0], [81.8, 4259.0], [81.9, 4259.0], [82.0, 4259.0], [82.1, 4265.0], [82.2, 4265.0], [82.3, 4265.0], [82.4, 4265.0], [82.5, 4265.0], [82.6, 4265.0], [82.7, 4267.0], [82.8, 4267.0], [82.9, 4267.0], [83.0, 4267.0], [83.1, 4267.0], [83.2, 4267.0], [83.3, 4267.0], [83.4, 4271.0], [83.5, 4271.0], [83.6, 4271.0], [83.7, 4271.0], [83.8, 4271.0], [83.9, 4271.0], [84.0, 4271.0], [84.1, 4271.0], [84.2, 4271.0], [84.3, 4271.0], [84.4, 4271.0], [84.5, 4271.0], [84.6, 4271.0], [84.7, 4277.0], [84.8, 4277.0], [84.9, 4277.0], [85.0, 4277.0], [85.1, 4277.0], [85.2, 4277.0], [85.3, 4277.0], [85.4, 4287.0], [85.5, 4287.0], [85.6, 4287.0], [85.7, 4287.0], [85.8, 4287.0], [85.9, 4287.0], [86.0, 4287.0], [86.1, 4288.0], [86.2, 4288.0], [86.3, 4288.0], [86.4, 4288.0], [86.5, 4288.0], [86.6, 4288.0], [86.7, 4298.0], [86.8, 4298.0], [86.9, 4298.0], [87.0, 4298.0], [87.1, 4298.0], [87.2, 4298.0], [87.3, 4298.0], [87.4, 4303.0], [87.5, 4303.0], [87.6, 4303.0], [87.7, 4303.0], [87.8, 4303.0], [87.9, 4303.0], [88.0, 4303.0], [88.1, 4304.0], [88.2, 4304.0], [88.3, 4304.0], [88.4, 4304.0], [88.5, 4304.0], [88.6, 4304.0], [88.7, 4318.0], [88.8, 4318.0], [88.9, 4318.0], [89.0, 4318.0], [89.1, 4318.0], [89.2, 4318.0], [89.3, 4318.0], [89.4, 4325.0], [89.5, 4325.0], [89.6, 4325.0], [89.7, 4325.0], [89.8, 4325.0], [89.9, 4325.0], [90.0, 4325.0], [90.1, 4329.0], [90.2, 4329.0], [90.3, 4329.0], [90.4, 4329.0], [90.5, 4329.0], [90.6, 4329.0], [90.7, 4331.0], [90.8, 4331.0], [90.9, 4331.0], [91.0, 4331.0], [91.1, 4331.0], [91.2, 4331.0], [91.3, 4331.0], [91.4, 4333.0], [91.5, 4333.0], [91.6, 4333.0], [91.7, 4333.0], [91.8, 4333.0], [91.9, 4333.0], [92.0, 4333.0], [92.1, 4334.0], [92.2, 4334.0], [92.3, 4334.0], [92.4, 4334.0], [92.5, 4334.0], [92.6, 4334.0], [92.7, 4334.0], [92.8, 4334.0], [92.9, 4334.0], [93.0, 4334.0], [93.1, 4334.0], [93.2, 4334.0], [93.3, 4334.0], [93.4, 4340.0], [93.5, 4340.0], [93.6, 4340.0], [93.7, 4340.0], [93.8, 4340.0], [93.9, 4340.0], [94.0, 4340.0], [94.1, 4341.0], [94.2, 4341.0], [94.3, 4341.0], [94.4, 4341.0], [94.5, 4341.0], [94.6, 4341.0], [94.7, 4403.0], [94.8, 4403.0], [94.9, 4403.0], [95.0, 4403.0], [95.1, 4403.0], [95.2, 4403.0], [95.3, 4403.0], [95.4, 4404.0], [95.5, 4404.0], [95.6, 4404.0], [95.7, 4404.0], [95.8, 4404.0], [95.9, 4404.0], [96.0, 4404.0], [96.1, 4406.0], [96.2, 4406.0], [96.3, 4406.0], [96.4, 4406.0], [96.5, 4406.0], [96.6, 4406.0], [96.7, 4411.0], [96.8, 4411.0], [96.9, 4411.0], [97.0, 4411.0], [97.1, 4411.0], [97.2, 4411.0], [97.3, 4411.0], [97.4, 4416.0], [97.5, 4416.0], [97.6, 4416.0], [97.7, 4416.0], [97.8, 4416.0], [97.9, 4416.0], [98.0, 4416.0], [98.1, 4424.0], [98.2, 4424.0], [98.3, 4424.0], [98.4, 4424.0], [98.5, 4424.0], [98.6, 4424.0], [98.7, 4459.0], [98.8, 4459.0], [98.9, 4459.0], [99.0, 4459.0], [99.1, 4459.0], [99.2, 4459.0], [99.3, 4459.0], [99.4, 4476.0], [99.5, 4476.0], [99.6, 4476.0], [99.7, 4476.0], [99.8, 4476.0], [99.9, 4476.0], [100.0, 4476.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[0.0, 1470.0], [0.1, 1470.0], [0.2, 1470.0], [0.3, 1470.0], [0.4, 1470.0], [0.5, 1470.0], [0.6, 1470.0], [0.7, 1488.0], [0.8, 1488.0], [0.9, 1488.0], [1.0, 1488.0], [1.1, 1488.0], [1.2, 1488.0], [1.3, 1488.0], [1.4, 1490.0], [1.5, 1490.0], [1.6, 1490.0], [1.7, 1490.0], [1.8, 1490.0], [1.9, 1490.0], [2.0, 1504.0], [2.1, 1504.0], [2.2, 1504.0], [2.3, 1504.0], [2.4, 1504.0], [2.5, 1504.0], [2.6, 1504.0], [2.7, 1573.0], [2.8, 1573.0], [2.9, 1573.0], [3.0, 1573.0], [3.1, 1573.0], [3.2, 1573.0], [3.3, 1573.0], [3.4, 1574.0], [3.5, 1574.0], [3.6, 1574.0], [3.7, 1574.0], [3.8, 1574.0], [3.9, 1574.0], [4.0, 1588.0], [4.1, 1588.0], [4.2, 1588.0], [4.3, 1588.0], [4.4, 1588.0], [4.5, 1588.0], [4.6, 1588.0], [4.7, 1606.0], [4.8, 1606.0], [4.9, 1606.0], [5.0, 1606.0], [5.1, 1606.0], [5.2, 1606.0], [5.3, 1606.0], [5.4, 1608.0], [5.5, 1608.0], [5.6, 1608.0], [5.7, 1608.0], [5.8, 1608.0], [5.9, 1608.0], [6.0, 1620.0], [6.1, 1620.0], [6.2, 1620.0], [6.3, 1620.0], [6.4, 1620.0], [6.5, 1620.0], [6.6, 1620.0], [6.7, 1624.0], [6.8, 1624.0], [6.9, 1624.0], [7.0, 1624.0], [7.1, 1624.0], [7.2, 1624.0], [7.3, 1624.0], [7.4, 1626.0], [7.5, 1626.0], [7.6, 1626.0], [7.7, 1626.0], [7.8, 1626.0], [7.9, 1626.0], [8.0, 1634.0], [8.1, 1634.0], [8.2, 1634.0], [8.3, 1634.0], [8.4, 1634.0], [8.5, 1634.0], [8.6, 1634.0], [8.7, 1634.0], [8.8, 1634.0], [8.9, 1634.0], [9.0, 1634.0], [9.1, 1634.0], [9.2, 1634.0], [9.3, 1634.0], [9.4, 1636.0], [9.5, 1636.0], [9.6, 1636.0], [9.7, 1636.0], [9.8, 1636.0], [9.9, 1636.0], [10.0, 1638.0], [10.1, 1638.0], [10.2, 1638.0], [10.3, 1638.0], [10.4, 1638.0], [10.5, 1638.0], [10.6, 1638.0], [10.7, 1648.0], [10.8, 1648.0], [10.9, 1648.0], [11.0, 1648.0], [11.1, 1648.0], [11.2, 1648.0], [11.3, 1648.0], [11.4, 1652.0], [11.5, 1652.0], [11.6, 1652.0], [11.7, 1652.0], [11.8, 1652.0], [11.9, 1652.0], [12.0, 1668.0], [12.1, 1668.0], [12.2, 1668.0], [12.3, 1668.0], [12.4, 1668.0], [12.5, 1668.0], [12.6, 1668.0], [12.7, 1674.0], [12.8, 1674.0], [12.9, 1674.0], [13.0, 1674.0], [13.1, 1674.0], [13.2, 1674.0], [13.3, 1674.0], [13.4, 1679.0], [13.5, 1679.0], [13.6, 1679.0], [13.7, 1679.0], [13.8, 1679.0], [13.9, 1679.0], [14.0, 1679.0], [14.1, 1679.0], [14.2, 1679.0], [14.3, 1679.0], [14.4, 1679.0], [14.5, 1679.0], [14.6, 1679.0], [14.7, 1684.0], [14.8, 1684.0], [14.9, 1684.0], [15.0, 1684.0], [15.1, 1684.0], [15.2, 1684.0], [15.3, 1684.0], [15.4, 1705.0], [15.5, 1705.0], [15.6, 1705.0], [15.7, 1705.0], [15.8, 1705.0], [15.9, 1705.0], [16.0, 1722.0], [16.1, 1722.0], [16.2, 1722.0], [16.3, 1722.0], [16.4, 1722.0], [16.5, 1722.0], [16.6, 1722.0], [16.7, 1726.0], [16.8, 1726.0], [16.9, 1726.0], [17.0, 1726.0], [17.1, 1726.0], [17.2, 1726.0], [17.3, 1726.0], [17.4, 1730.0], [17.5, 1730.0], [17.6, 1730.0], [17.7, 1730.0], [17.8, 1730.0], [17.9, 1730.0], [18.0, 1745.0], [18.1, 1745.0], [18.2, 1745.0], [18.3, 1745.0], [18.4, 1745.0], [18.5, 1745.0], [18.6, 1745.0], [18.7, 1762.0], [18.8, 1762.0], [18.9, 1762.0], [19.0, 1762.0], [19.1, 1762.0], [19.2, 1762.0], [19.3, 1762.0], [19.4, 1808.0], [19.5, 1808.0], [19.6, 1808.0], [19.7, 1808.0], [19.8, 1808.0], [19.9, 1808.0], [20.0, 1808.0], [20.1, 1815.0], [20.2, 1815.0], [20.3, 1815.0], [20.4, 1815.0], [20.5, 1815.0], [20.6, 1815.0], [20.7, 1828.0], [20.8, 1828.0], [20.9, 1828.0], [21.0, 1828.0], [21.1, 1828.0], [21.2, 1828.0], [21.3, 1828.0], [21.4, 1829.0], [21.5, 1829.0], [21.6, 1829.0], [21.7, 1829.0], [21.8, 1829.0], [21.9, 1829.0], [22.0, 1829.0], [22.1, 1837.0], [22.2, 1837.0], [22.3, 1837.0], [22.4, 1837.0], [22.5, 1837.0], [22.6, 1837.0], [22.7, 1908.0], [22.8, 1908.0], [22.9, 1908.0], [23.0, 1908.0], [23.1, 1908.0], [23.2, 1908.0], [23.3, 1908.0], [23.4, 1910.0], [23.5, 1910.0], [23.6, 1910.0], [23.7, 1910.0], [23.8, 1910.0], [23.9, 1910.0], [24.0, 1910.0], [24.1, 1922.0], [24.2, 1922.0], [24.3, 1922.0], [24.4, 1922.0], [24.5, 1922.0], [24.6, 1922.0], [24.7, 1972.0], [24.8, 1972.0], [24.9, 1972.0], [25.0, 1972.0], [25.1, 1972.0], [25.2, 1972.0], [25.3, 1972.0], [25.4, 1980.0], [25.5, 1980.0], [25.6, 1980.0], [25.7, 1980.0], [25.8, 1980.0], [25.9, 1980.0], [26.0, 1980.0], [26.1, 2011.0], [26.2, 2011.0], [26.3, 2011.0], [26.4, 2011.0], [26.5, 2011.0], [26.6, 2011.0], [26.7, 2018.0], [26.8, 2018.0], [26.9, 2018.0], [27.0, 2018.0], [27.1, 2018.0], [27.2, 2018.0], [27.3, 2018.0], [27.4, 2021.0], [27.5, 2021.0], [27.6, 2021.0], [27.7, 2021.0], [27.8, 2021.0], [27.9, 2021.0], [28.0, 2021.0], [28.1, 2031.0], [28.2, 2031.0], [28.3, 2031.0], [28.4, 2031.0], [28.5, 2031.0], [28.6, 2031.0], [28.7, 2032.0], [28.8, 2032.0], [28.9, 2032.0], [29.0, 2032.0], [29.1, 2032.0], [29.2, 2032.0], [29.3, 2032.0], [29.4, 2037.0], [29.5, 2037.0], [29.6, 2037.0], [29.7, 2037.0], [29.8, 2037.0], [29.9, 2037.0], [30.0, 2037.0], [30.1, 2065.0], [30.2, 2065.0], [30.3, 2065.0], [30.4, 2065.0], [30.5, 2065.0], [30.6, 2065.0], [30.7, 2071.0], [30.8, 2071.0], [30.9, 2071.0], [31.0, 2071.0], [31.1, 2071.0], [31.2, 2071.0], [31.3, 2071.0], [31.4, 2110.0], [31.5, 2110.0], [31.6, 2110.0], [31.7, 2110.0], [31.8, 2110.0], [31.9, 2110.0], [32.0, 2110.0], [32.1, 2112.0], [32.2, 2112.0], [32.3, 2112.0], [32.4, 2112.0], [32.5, 2112.0], [32.6, 2112.0], [32.7, 2118.0], [32.8, 2118.0], [32.9, 2118.0], [33.0, 2118.0], [33.1, 2118.0], [33.2, 2118.0], [33.3, 2118.0], [33.4, 2122.0], [33.5, 2122.0], [33.6, 2122.0], [33.7, 2122.0], [33.8, 2122.0], [33.9, 2122.0], [34.0, 2122.0], [34.1, 2133.0], [34.2, 2133.0], [34.3, 2133.0], [34.4, 2133.0], [34.5, 2133.0], [34.6, 2133.0], [34.7, 2155.0], [34.8, 2155.0], [34.9, 2155.0], [35.0, 2155.0], [35.1, 2155.0], [35.2, 2155.0], [35.3, 2155.0], [35.4, 2173.0], [35.5, 2173.0], [35.6, 2173.0], [35.7, 2173.0], [35.8, 2173.0], [35.9, 2173.0], [36.0, 2173.0], [36.1, 2177.0], [36.2, 2177.0], [36.3, 2177.0], [36.4, 2177.0], [36.5, 2177.0], [36.6, 2177.0], [36.7, 2180.0], [36.8, 2180.0], [36.9, 2180.0], [37.0, 2180.0], [37.1, 2180.0], [37.2, 2180.0], [37.3, 2180.0], [37.4, 2205.0], [37.5, 2205.0], [37.6, 2205.0], [37.7, 2205.0], [37.8, 2205.0], [37.9, 2205.0], [38.0, 2219.0], [38.1, 2219.0], [38.2, 2219.0], [38.3, 2219.0], [38.4, 2219.0], [38.5, 2219.0], [38.6, 2219.0], [38.7, 2224.0], [38.8, 2224.0], [38.9, 2224.0], [39.0, 2224.0], [39.1, 2224.0], [39.2, 2224.0], [39.3, 2224.0], [39.4, 2229.0], [39.5, 2229.0], [39.6, 2229.0], [39.7, 2229.0], [39.8, 2229.0], [39.9, 2229.0], [40.0, 2235.0], [40.1, 2235.0], [40.2, 2235.0], [40.3, 2235.0], [40.4, 2235.0], [40.5, 2235.0], [40.6, 2235.0], [40.7, 2241.0], [40.8, 2241.0], [40.9, 2241.0], [41.0, 2241.0], [41.1, 2241.0], [41.2, 2241.0], [41.3, 2241.0], [41.4, 2243.0], [41.5, 2243.0], [41.6, 2243.0], [41.7, 2243.0], [41.8, 2243.0], [41.9, 2243.0], [42.0, 2254.0], [42.1, 2254.0], [42.2, 2254.0], [42.3, 2254.0], [42.4, 2254.0], [42.5, 2254.0], [42.6, 2254.0], [42.7, 2265.0], [42.8, 2265.0], [42.9, 2265.0], [43.0, 2265.0], [43.1, 2265.0], [43.2, 2265.0], [43.3, 2265.0], [43.4, 2266.0], [43.5, 2266.0], [43.6, 2266.0], [43.7, 2266.0], [43.8, 2266.0], [43.9, 2266.0], [44.0, 2283.0], [44.1, 2283.0], [44.2, 2283.0], [44.3, 2283.0], [44.4, 2283.0], [44.5, 2283.0], [44.6, 2283.0], [44.7, 2289.0], [44.8, 2289.0], [44.9, 2289.0], [45.0, 2289.0], [45.1, 2289.0], [45.2, 2289.0], [45.3, 2289.0], [45.4, 2298.0], [45.5, 2298.0], [45.6, 2298.0], [45.7, 2298.0], [45.8, 2298.0], [45.9, 2298.0], [46.0, 2305.0], [46.1, 2305.0], [46.2, 2305.0], [46.3, 2305.0], [46.4, 2305.0], [46.5, 2305.0], [46.6, 2305.0], [46.7, 2306.0], [46.8, 2306.0], [46.9, 2306.0], [47.0, 2306.0], [47.1, 2306.0], [47.2, 2306.0], [47.3, 2306.0], [47.4, 2308.0], [47.5, 2308.0], [47.6, 2308.0], [47.7, 2308.0], [47.8, 2308.0], [47.9, 2308.0], [48.0, 2311.0], [48.1, 2311.0], [48.2, 2311.0], [48.3, 2311.0], [48.4, 2311.0], [48.5, 2311.0], [48.6, 2311.0], [48.7, 2322.0], [48.8, 2322.0], [48.9, 2322.0], [49.0, 2322.0], [49.1, 2322.0], [49.2, 2322.0], [49.3, 2322.0], [49.4, 2336.0], [49.5, 2336.0], [49.6, 2336.0], [49.7, 2336.0], [49.8, 2336.0], [49.9, 2336.0], [50.0, 2336.0], [50.1, 2336.0], [50.2, 2336.0], [50.3, 2336.0], [50.4, 2336.0], [50.5, 2336.0], [50.6, 2336.0], [50.7, 2341.0], [50.8, 2341.0], [50.9, 2341.0], [51.0, 2341.0], [51.1, 2341.0], [51.2, 2341.0], [51.3, 2341.0], [51.4, 2346.0], [51.5, 2346.0], [51.6, 2346.0], [51.7, 2346.0], [51.8, 2346.0], [51.9, 2346.0], [52.0, 2360.0], [52.1, 2360.0], [52.2, 2360.0], [52.3, 2360.0], [52.4, 2360.0], [52.5, 2360.0], [52.6, 2360.0], [52.7, 2361.0], [52.8, 2361.0], [52.9, 2361.0], [53.0, 2361.0], [53.1, 2361.0], [53.2, 2361.0], [53.3, 2361.0], [53.4, 2364.0], [53.5, 2364.0], [53.6, 2364.0], [53.7, 2364.0], [53.8, 2364.0], [53.9, 2364.0], [54.0, 2367.0], [54.1, 2367.0], [54.2, 2367.0], [54.3, 2367.0], [54.4, 2367.0], [54.5, 2367.0], [54.6, 2367.0], [54.7, 2376.0], [54.8, 2376.0], [54.9, 2376.0], [55.0, 2376.0], [55.1, 2376.0], [55.2, 2376.0], [55.3, 2376.0], [55.4, 2402.0], [55.5, 2402.0], [55.6, 2402.0], [55.7, 2402.0], [55.8, 2402.0], [55.9, 2402.0], [56.0, 2403.0], [56.1, 2403.0], [56.2, 2403.0], [56.3, 2403.0], [56.4, 2403.0], [56.5, 2403.0], [56.6, 2403.0], [56.7, 2415.0], [56.8, 2415.0], [56.9, 2415.0], [57.0, 2415.0], [57.1, 2415.0], [57.2, 2415.0], [57.3, 2415.0], [57.4, 2426.0], [57.5, 2426.0], [57.6, 2426.0], [57.7, 2426.0], [57.8, 2426.0], [57.9, 2426.0], [58.0, 2435.0], [58.1, 2435.0], [58.2, 2435.0], [58.3, 2435.0], [58.4, 2435.0], [58.5, 2435.0], [58.6, 2435.0], [58.7, 2439.0], [58.8, 2439.0], [58.9, 2439.0], [59.0, 2439.0], [59.1, 2439.0], [59.2, 2439.0], [59.3, 2439.0], [59.4, 2441.0], [59.5, 2441.0], [59.6, 2441.0], [59.7, 2441.0], [59.8, 2441.0], [59.9, 2441.0], [60.0, 2454.0], [60.1, 2454.0], [60.2, 2454.0], [60.3, 2454.0], [60.4, 2454.0], [60.5, 2454.0], [60.6, 2454.0], [60.7, 2468.0], [60.8, 2468.0], [60.9, 2468.0], [61.0, 2468.0], [61.1, 2468.0], [61.2, 2468.0], [61.3, 2468.0], [61.4, 2472.0], [61.5, 2472.0], [61.6, 2472.0], [61.7, 2472.0], [61.8, 2472.0], [61.9, 2472.0], [62.0, 2474.0], [62.1, 2474.0], [62.2, 2474.0], [62.3, 2474.0], [62.4, 2474.0], [62.5, 2474.0], [62.6, 2474.0], [62.7, 2475.0], [62.8, 2475.0], [62.9, 2475.0], [63.0, 2475.0], [63.1, 2475.0], [63.2, 2475.0], [63.3, 2475.0], [63.4, 2485.0], [63.5, 2485.0], [63.6, 2485.0], [63.7, 2485.0], [63.8, 2485.0], [63.9, 2485.0], [64.0, 2493.0], [64.1, 2493.0], [64.2, 2493.0], [64.3, 2493.0], [64.4, 2493.0], [64.5, 2493.0], [64.6, 2493.0], [64.7, 2525.0], [64.8, 2525.0], [64.9, 2525.0], [65.0, 2525.0], [65.1, 2525.0], [65.2, 2525.0], [65.3, 2525.0], [65.4, 2529.0], [65.5, 2529.0], [65.6, 2529.0], [65.7, 2529.0], [65.8, 2529.0], [65.9, 2529.0], [66.0, 2535.0], [66.1, 2535.0], [66.2, 2535.0], [66.3, 2535.0], [66.4, 2535.0], [66.5, 2535.0], [66.6, 2535.0], [66.7, 2541.0], [66.8, 2541.0], [66.9, 2541.0], [67.0, 2541.0], [67.1, 2541.0], [67.2, 2541.0], [67.3, 2541.0], [67.4, 2552.0], [67.5, 2552.0], [67.6, 2552.0], [67.7, 2552.0], [67.8, 2552.0], [67.9, 2552.0], [68.0, 2552.0], [68.1, 2552.0], [68.2, 2552.0], [68.3, 2552.0], [68.4, 2552.0], [68.5, 2552.0], [68.6, 2552.0], [68.7, 2561.0], [68.8, 2561.0], [68.9, 2561.0], [69.0, 2561.0], [69.1, 2561.0], [69.2, 2561.0], [69.3, 2561.0], [69.4, 2569.0], [69.5, 2569.0], [69.6, 2569.0], [69.7, 2569.0], [69.8, 2569.0], [69.9, 2569.0], [70.0, 2589.0], [70.1, 2589.0], [70.2, 2589.0], [70.3, 2589.0], [70.4, 2589.0], [70.5, 2589.0], [70.6, 2589.0], [70.7, 2592.0], [70.8, 2592.0], [70.9, 2592.0], [71.0, 2592.0], [71.1, 2592.0], [71.2, 2592.0], [71.3, 2592.0], [71.4, 2596.0], [71.5, 2596.0], [71.6, 2596.0], [71.7, 2596.0], [71.8, 2596.0], [71.9, 2596.0], [72.0, 2600.0], [72.1, 2600.0], [72.2, 2600.0], [72.3, 2600.0], [72.4, 2600.0], [72.5, 2600.0], [72.6, 2600.0], [72.7, 2601.0], [72.8, 2601.0], [72.9, 2601.0], [73.0, 2601.0], [73.1, 2601.0], [73.2, 2601.0], [73.3, 2601.0], [73.4, 2601.0], [73.5, 2601.0], [73.6, 2601.0], [73.7, 2601.0], [73.8, 2601.0], [73.9, 2601.0], [74.0, 2603.0], [74.1, 2603.0], [74.2, 2603.0], [74.3, 2603.0], [74.4, 2603.0], [74.5, 2603.0], [74.6, 2603.0], [74.7, 2606.0], [74.8, 2606.0], [74.9, 2606.0], [75.0, 2606.0], [75.1, 2606.0], [75.2, 2606.0], [75.3, 2606.0], [75.4, 2609.0], [75.5, 2609.0], [75.6, 2609.0], [75.7, 2609.0], [75.8, 2609.0], [75.9, 2609.0], [76.0, 2612.0], [76.1, 2612.0], [76.2, 2612.0], [76.3, 2612.0], [76.4, 2612.0], [76.5, 2612.0], [76.6, 2612.0], [76.7, 2615.0], [76.8, 2615.0], [76.9, 2615.0], [77.0, 2615.0], [77.1, 2615.0], [77.2, 2615.0], [77.3, 2615.0], [77.4, 2633.0], [77.5, 2633.0], [77.6, 2633.0], [77.7, 2633.0], [77.8, 2633.0], [77.9, 2633.0], [78.0, 2637.0], [78.1, 2637.0], [78.2, 2637.0], [78.3, 2637.0], [78.4, 2637.0], [78.5, 2637.0], [78.6, 2637.0], [78.7, 2642.0], [78.8, 2642.0], [78.9, 2642.0], [79.0, 2642.0], [79.1, 2642.0], [79.2, 2642.0], [79.3, 2642.0], [79.4, 2648.0], [79.5, 2648.0], [79.6, 2648.0], [79.7, 2648.0], [79.8, 2648.0], [79.9, 2648.0], [80.0, 2670.0], [80.1, 2670.0], [80.2, 2670.0], [80.3, 2670.0], [80.4, 2670.0], [80.5, 2670.0], [80.6, 2670.0], [80.7, 2684.0], [80.8, 2684.0], [80.9, 2684.0], [81.0, 2684.0], [81.1, 2684.0], [81.2, 2684.0], [81.3, 2684.0], [81.4, 2702.0], [81.5, 2702.0], [81.6, 2702.0], [81.7, 2702.0], [81.8, 2702.0], [81.9, 2702.0], [82.0, 2702.0], [82.1, 2704.0], [82.2, 2704.0], [82.3, 2704.0], [82.4, 2704.0], [82.5, 2704.0], [82.6, 2704.0], [82.7, 2717.0], [82.8, 2717.0], [82.9, 2717.0], [83.0, 2717.0], [83.1, 2717.0], [83.2, 2717.0], [83.3, 2717.0], [83.4, 2738.0], [83.5, 2738.0], [83.6, 2738.0], [83.7, 2738.0], [83.8, 2738.0], [83.9, 2738.0], [84.0, 2738.0], [84.1, 2754.0], [84.2, 2754.0], [84.3, 2754.0], [84.4, 2754.0], [84.5, 2754.0], [84.6, 2754.0], [84.7, 2762.0], [84.8, 2762.0], [84.9, 2762.0], [85.0, 2762.0], [85.1, 2762.0], [85.2, 2762.0], [85.3, 2762.0], [85.4, 2764.0], [85.5, 2764.0], [85.6, 2764.0], [85.7, 2764.0], [85.8, 2764.0], [85.9, 2764.0], [86.0, 2764.0], [86.1, 2765.0], [86.2, 2765.0], [86.3, 2765.0], [86.4, 2765.0], [86.5, 2765.0], [86.6, 2765.0], [86.7, 2774.0], [86.8, 2774.0], [86.9, 2774.0], [87.0, 2774.0], [87.1, 2774.0], [87.2, 2774.0], [87.3, 2774.0], [87.4, 2802.0], [87.5, 2802.0], [87.6, 2802.0], [87.7, 2802.0], [87.8, 2802.0], [87.9, 2802.0], [88.0, 2802.0], [88.1, 2811.0], [88.2, 2811.0], [88.3, 2811.0], [88.4, 2811.0], [88.5, 2811.0], [88.6, 2811.0], [88.7, 2813.0], [88.8, 2813.0], [88.9, 2813.0], [89.0, 2813.0], [89.1, 2813.0], [89.2, 2813.0], [89.3, 2813.0], [89.4, 2827.0], [89.5, 2827.0], [89.6, 2827.0], [89.7, 2827.0], [89.8, 2827.0], [89.9, 2827.0], [90.0, 2827.0], [90.1, 2829.0], [90.2, 2829.0], [90.3, 2829.0], [90.4, 2829.0], [90.5, 2829.0], [90.6, 2829.0], [90.7, 2835.0], [90.8, 2835.0], [90.9, 2835.0], [91.0, 2835.0], [91.1, 2835.0], [91.2, 2835.0], [91.3, 2835.0], [91.4, 2835.0], [91.5, 2835.0], [91.6, 2835.0], [91.7, 2835.0], [91.8, 2835.0], [91.9, 2835.0], [92.0, 2835.0], [92.1, 2836.0], [92.2, 2836.0], [92.3, 2836.0], [92.4, 2836.0], [92.5, 2836.0], [92.6, 2836.0], [92.7, 2842.0], [92.8, 2842.0], [92.9, 2842.0], [93.0, 2842.0], [93.1, 2842.0], [93.2, 2842.0], [93.3, 2842.0], [93.4, 2843.0], [93.5, 2843.0], [93.6, 2843.0], [93.7, 2843.0], [93.8, 2843.0], [93.9, 2843.0], [94.0, 2843.0], [94.1, 2853.0], [94.2, 2853.0], [94.3, 2853.0], [94.4, 2853.0], [94.5, 2853.0], [94.6, 2853.0], [94.7, 2869.0], [94.8, 2869.0], [94.9, 2869.0], [95.0, 2869.0], [95.1, 2869.0], [95.2, 2869.0], [95.3, 2869.0], [95.4, 2872.0], [95.5, 2872.0], [95.6, 2872.0], [95.7, 2872.0], [95.8, 2872.0], [95.9, 2872.0], [96.0, 2872.0], [96.1, 2874.0], [96.2, 2874.0], [96.3, 2874.0], [96.4, 2874.0], [96.5, 2874.0], [96.6, 2874.0], [96.7, 2903.0], [96.8, 2903.0], [96.9, 2903.0], [97.0, 2903.0], [97.1, 2903.0], [97.2, 2903.0], [97.3, 2903.0], [97.4, 2907.0], [97.5, 2907.0], [97.6, 2907.0], [97.7, 2907.0], [97.8, 2907.0], [97.9, 2907.0], [98.0, 2907.0], [98.1, 2928.0], [98.2, 2928.0], [98.3, 2928.0], [98.4, 2928.0], [98.5, 2928.0], [98.6, 2928.0], [98.7, 2939.0], [98.8, 2939.0], [98.9, 2939.0], [99.0, 2939.0], [99.1, 2939.0], [99.2, 2939.0], [99.3, 2939.0], [99.4, 2962.0], [99.5, 2962.0], [99.6, 2962.0], [99.7, 2962.0], [99.8, 2962.0], [99.9, 2962.0], [100.0, 2962.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[0.0, 5012.0], [0.1, 5012.0], [0.2, 5012.0], [0.3, 5012.0], [0.4, 5012.0], [0.5, 5012.0], [0.6, 5012.0], [0.7, 5014.0], [0.8, 5014.0], [0.9, 5014.0], [1.0, 5014.0], [1.1, 5014.0], [1.2, 5014.0], [1.3, 5014.0], [1.4, 5014.0], [1.5, 5014.0], [1.6, 5014.0], [1.7, 5014.0], [1.8, 5014.0], [1.9, 5014.0], [2.0, 5014.0], [2.1, 5014.0], [2.2, 5014.0], [2.3, 5014.0], [2.4, 5014.0], [2.5, 5014.0], [2.6, 5014.0], [2.7, 5014.0], [2.8, 5014.0], [2.9, 5014.0], [3.0, 5014.0], [3.1, 5014.0], [3.2, 5014.0], [3.3, 5014.0], [3.4, 5015.0], [3.5, 5015.0], [3.6, 5015.0], [3.7, 5015.0], [3.8, 5015.0], [3.9, 5015.0], [4.0, 5015.0], [4.1, 5015.0], [4.2, 5015.0], [4.3, 5015.0], [4.4, 5015.0], [4.5, 5015.0], [4.6, 5015.0], [4.7, 5015.0], [4.8, 5015.0], [4.9, 5015.0], [5.0, 5015.0], [5.1, 5015.0], [5.2, 5015.0], [5.3, 5015.0], [5.4, 5016.0], [5.5, 5016.0], [5.6, 5016.0], [5.7, 5016.0], [5.8, 5016.0], [5.9, 5016.0], [6.0, 5016.0], [6.1, 5016.0], [6.2, 5016.0], [6.3, 5016.0], [6.4, 5016.0], [6.5, 5016.0], [6.6, 5016.0], [6.7, 5016.0], [6.8, 5016.0], [6.9, 5016.0], [7.0, 5016.0], [7.1, 5016.0], [7.2, 5016.0], [7.3, 5016.0], [7.4, 5016.0], [7.5, 5016.0], [7.6, 5016.0], [7.7, 5016.0], [7.8, 5016.0], [7.9, 5016.0], [8.0, 5016.0], [8.1, 5016.0], [8.2, 5016.0], [8.3, 5016.0], [8.4, 5016.0], [8.5, 5016.0], [8.6, 5016.0], [8.7, 5016.0], [8.8, 5016.0], [8.9, 5016.0], [9.0, 5016.0], [9.1, 5016.0], [9.2, 5016.0], [9.3, 5016.0], [9.4, 5016.0], [9.5, 5016.0], [9.6, 5016.0], [9.7, 5016.0], [9.8, 5016.0], [9.9, 5016.0], [10.0, 5016.0], [10.1, 5016.0], [10.2, 5016.0], [10.3, 5016.0], [10.4, 5016.0], [10.5, 5016.0], [10.6, 5016.0], [10.7, 5017.0], [10.8, 5017.0], [10.9, 5017.0], [11.0, 5017.0], [11.1, 5017.0], [11.2, 5017.0], [11.3, 5017.0], [11.4, 5017.0], [11.5, 5017.0], [11.6, 5017.0], [11.7, 5017.0], [11.8, 5017.0], [11.9, 5017.0], [12.0, 5017.0], [12.1, 5017.0], [12.2, 5017.0], [12.3, 5017.0], [12.4, 5017.0], [12.5, 5017.0], [12.6, 5017.0], [12.7, 5017.0], [12.8, 5017.0], [12.9, 5017.0], [13.0, 5017.0], [13.1, 5017.0], [13.2, 5017.0], [13.3, 5017.0], [13.4, 5018.0], [13.5, 5018.0], [13.6, 5018.0], [13.7, 5018.0], [13.8, 5018.0], [13.9, 5018.0], [14.0, 5018.0], [14.1, 5018.0], [14.2, 5018.0], [14.3, 5018.0], [14.4, 5018.0], [14.5, 5018.0], [14.6, 5018.0], [14.7, 5018.0], [14.8, 5018.0], [14.9, 5018.0], [15.0, 5018.0], [15.1, 5018.0], [15.2, 5018.0], [15.3, 5018.0], [15.4, 5018.0], [15.5, 5018.0], [15.6, 5018.0], [15.7, 5018.0], [15.8, 5018.0], [15.9, 5018.0], [16.0, 5018.0], [16.1, 5018.0], [16.2, 5018.0], [16.3, 5018.0], [16.4, 5018.0], [16.5, 5018.0], [16.6, 5018.0], [16.7, 5018.0], [16.8, 5018.0], [16.9, 5018.0], [17.0, 5018.0], [17.1, 5018.0], [17.2, 5018.0], [17.3, 5018.0], [17.4, 5018.0], [17.5, 5018.0], [17.6, 5018.0], [17.7, 5018.0], [17.8, 5018.0], [17.9, 5018.0], [18.0, 5018.0], [18.1, 5018.0], [18.2, 5018.0], [18.3, 5018.0], [18.4, 5018.0], [18.5, 5018.0], [18.6, 5018.0], [18.7, 5018.0], [18.8, 5018.0], [18.9, 5018.0], [19.0, 5018.0], [19.1, 5018.0], [19.2, 5018.0], [19.3, 5018.0], [19.4, 5018.0], [19.5, 5018.0], [19.6, 5018.0], [19.7, 5018.0], [19.8, 5018.0], [19.9, 5018.0], [20.0, 5019.0], [20.1, 5019.0], [20.2, 5019.0], [20.3, 5019.0], [20.4, 5019.0], [20.5, 5019.0], [20.6, 5019.0], [20.7, 5019.0], [20.8, 5019.0], [20.9, 5019.0], [21.0, 5019.0], [21.1, 5019.0], [21.2, 5019.0], [21.3, 5019.0], [21.4, 5019.0], [21.5, 5019.0], [21.6, 5019.0], [21.7, 5019.0], [21.8, 5019.0], [21.9, 5019.0], [22.0, 5019.0], [22.1, 5019.0], [22.2, 5019.0], [22.3, 5019.0], [22.4, 5019.0], [22.5, 5019.0], [22.6, 5019.0], [22.7, 5019.0], [22.8, 5019.0], [22.9, 5019.0], [23.0, 5019.0], [23.1, 5019.0], [23.2, 5019.0], [23.3, 5019.0], [23.4, 5019.0], [23.5, 5019.0], [23.6, 5019.0], [23.7, 5019.0], [23.8, 5019.0], [23.9, 5019.0], [24.0, 5020.0], [24.1, 5020.0], [24.2, 5020.0], [24.3, 5020.0], [24.4, 5020.0], [24.5, 5020.0], [24.6, 5020.0], [24.7, 5020.0], [24.8, 5020.0], [24.9, 5020.0], [25.0, 5020.0], [25.1, 5020.0], [25.2, 5020.0], [25.3, 5020.0], [25.4, 5020.0], [25.5, 5020.0], [25.6, 5020.0], [25.7, 5020.0], [25.8, 5020.0], [25.9, 5020.0], [26.0, 5020.0], [26.1, 5020.0], [26.2, 5020.0], [26.3, 5020.0], [26.4, 5020.0], [26.5, 5020.0], [26.6, 5020.0], [26.7, 5020.0], [26.8, 5020.0], [26.9, 5020.0], [27.0, 5020.0], [27.1, 5020.0], [27.2, 5020.0], [27.3, 5020.0], [27.4, 5020.0], [27.5, 5020.0], [27.6, 5020.0], [27.7, 5020.0], [27.8, 5020.0], [27.9, 5020.0], [28.0, 5020.0], [28.1, 5020.0], [28.2, 5020.0], [28.3, 5020.0], [28.4, 5020.0], [28.5, 5020.0], [28.6, 5020.0], [28.7, 5020.0], [28.8, 5020.0], [28.9, 5020.0], [29.0, 5020.0], [29.1, 5020.0], [29.2, 5020.0], [29.3, 5020.0], [29.4, 5020.0], [29.5, 5020.0], [29.6, 5020.0], [29.7, 5020.0], [29.8, 5020.0], [29.9, 5020.0], [30.0, 5020.0], [30.1, 5020.0], [30.2, 5020.0], [30.3, 5020.0], [30.4, 5020.0], [30.5, 5020.0], [30.6, 5020.0], [30.7, 5020.0], [30.8, 5020.0], [30.9, 5020.0], [31.0, 5020.0], [31.1, 5020.0], [31.2, 5020.0], [31.3, 5020.0], [31.4, 5020.0], [31.5, 5020.0], [31.6, 5020.0], [31.7, 5020.0], [31.8, 5020.0], [31.9, 5020.0], [32.0, 5020.0], [32.1, 5020.0], [32.2, 5020.0], [32.3, 5020.0], [32.4, 5020.0], [32.5, 5020.0], [32.6, 5020.0], [32.7, 5020.0], [32.8, 5020.0], [32.9, 5020.0], [33.0, 5020.0], [33.1, 5020.0], [33.2, 5020.0], [33.3, 5020.0], [33.4, 5020.0], [33.5, 5020.0], [33.6, 5020.0], [33.7, 5020.0], [33.8, 5020.0], [33.9, 5020.0], [34.0, 5021.0], [34.1, 5021.0], [34.2, 5021.0], [34.3, 5021.0], [34.4, 5021.0], [34.5, 5021.0], [34.6, 5021.0], [34.7, 5021.0], [34.8, 5021.0], [34.9, 5021.0], [35.0, 5021.0], [35.1, 5021.0], [35.2, 5021.0], [35.3, 5021.0], [35.4, 5021.0], [35.5, 5021.0], [35.6, 5021.0], [35.7, 5021.0], [35.8, 5021.0], [35.9, 5021.0], [36.0, 5021.0], [36.1, 5021.0], [36.2, 5021.0], [36.3, 5021.0], [36.4, 5021.0], [36.5, 5021.0], [36.6, 5021.0], [36.7, 5021.0], [36.8, 5021.0], [36.9, 5021.0], [37.0, 5021.0], [37.1, 5021.0], [37.2, 5021.0], [37.3, 5021.0], [37.4, 5021.0], [37.5, 5021.0], [37.6, 5021.0], [37.7, 5021.0], [37.8, 5021.0], [37.9, 5021.0], [38.0, 5021.0], [38.1, 5021.0], [38.2, 5021.0], [38.3, 5021.0], [38.4, 5021.0], [38.5, 5021.0], [38.6, 5021.0], [38.7, 5021.0], [38.8, 5021.0], [38.9, 5021.0], [39.0, 5021.0], [39.1, 5021.0], [39.2, 5021.0], [39.3, 5021.0], [39.4, 5021.0], [39.5, 5021.0], [39.6, 5021.0], [39.7, 5021.0], [39.8, 5021.0], [39.9, 5021.0], [40.0, 5021.0], [40.1, 5021.0], [40.2, 5021.0], [40.3, 5021.0], [40.4, 5021.0], [40.5, 5021.0], [40.6, 5021.0], [40.7, 5021.0], [40.8, 5021.0], [40.9, 5021.0], [41.0, 5021.0], [41.1, 5021.0], [41.2, 5021.0], [41.3, 5021.0], [41.4, 5022.0], [41.5, 5022.0], [41.6, 5022.0], [41.7, 5022.0], [41.8, 5022.0], [41.9, 5022.0], [42.0, 5022.0], [42.1, 5022.0], [42.2, 5022.0], [42.3, 5022.0], [42.4, 5022.0], [42.5, 5022.0], [42.6, 5022.0], [42.7, 5022.0], [42.8, 5022.0], [42.9, 5022.0], [43.0, 5022.0], [43.1, 5022.0], [43.2, 5022.0], [43.3, 5022.0], [43.4, 5022.0], [43.5, 5022.0], [43.6, 5022.0], [43.7, 5022.0], [43.8, 5022.0], [43.9, 5022.0], [44.0, 5022.0], [44.1, 5022.0], [44.2, 5022.0], [44.3, 5022.0], [44.4, 5022.0], [44.5, 5022.0], [44.6, 5022.0], [44.7, 5023.0], [44.8, 5023.0], [44.9, 5023.0], [45.0, 5023.0], [45.1, 5023.0], [45.2, 5023.0], [45.3, 5023.0], [45.4, 5023.0], [45.5, 5023.0], [45.6, 5023.0], [45.7, 5023.0], [45.8, 5023.0], [45.9, 5023.0], [46.0, 5023.0], [46.1, 5023.0], [46.2, 5023.0], [46.3, 5023.0], [46.4, 5023.0], [46.5, 5023.0], [46.6, 5023.0], [46.7, 5023.0], [46.8, 5023.0], [46.9, 5023.0], [47.0, 5023.0], [47.1, 5023.0], [47.2, 5023.0], [47.3, 5023.0], [47.4, 5023.0], [47.5, 5023.0], [47.6, 5023.0], [47.7, 5023.0], [47.8, 5023.0], [47.9, 5023.0], [48.0, 5023.0], [48.1, 5023.0], [48.2, 5023.0], [48.3, 5023.0], [48.4, 5023.0], [48.5, 5023.0], [48.6, 5023.0], [48.7, 5023.0], [48.8, 5023.0], [48.9, 5023.0], [49.0, 5023.0], [49.1, 5023.0], [49.2, 5023.0], [49.3, 5023.0], [49.4, 5023.0], [49.5, 5023.0], [49.6, 5023.0], [49.7, 5023.0], [49.8, 5023.0], [49.9, 5023.0], [50.0, 5023.0], [50.1, 5024.0], [50.2, 5024.0], [50.3, 5024.0], [50.4, 5024.0], [50.5, 5024.0], [50.6, 5024.0], [50.7, 5024.0], [50.8, 5024.0], [50.9, 5024.0], [51.0, 5024.0], [51.1, 5024.0], [51.2, 5024.0], [51.3, 5024.0], [51.4, 5024.0], [51.5, 5024.0], [51.6, 5024.0], [51.7, 5024.0], [51.8, 5024.0], [51.9, 5024.0], [52.0, 5024.0], [52.1, 5024.0], [52.2, 5024.0], [52.3, 5024.0], [52.4, 5024.0], [52.5, 5024.0], [52.6, 5024.0], [52.7, 5024.0], [52.8, 5024.0], [52.9, 5024.0], [53.0, 5024.0], [53.1, 5024.0], [53.2, 5024.0], [53.3, 5024.0], [53.4, 5024.0], [53.5, 5024.0], [53.6, 5024.0], [53.7, 5024.0], [53.8, 5024.0], [53.9, 5024.0], [54.0, 5024.0], [54.1, 5024.0], [54.2, 5024.0], [54.3, 5024.0], [54.4, 5024.0], [54.5, 5024.0], [54.6, 5024.0], [54.7, 5024.0], [54.8, 5024.0], [54.9, 5024.0], [55.0, 5024.0], [55.1, 5024.0], [55.2, 5024.0], [55.3, 5024.0], [55.4, 5024.0], [55.5, 5024.0], [55.6, 5024.0], [55.7, 5024.0], [55.8, 5024.0], [55.9, 5024.0], [56.0, 5024.0], [56.1, 5024.0], [56.2, 5024.0], [56.3, 5024.0], [56.4, 5024.0], [56.5, 5024.0], [56.6, 5024.0], [56.7, 5024.0], [56.8, 5024.0], [56.9, 5024.0], [57.0, 5024.0], [57.1, 5024.0], [57.2, 5024.0], [57.3, 5024.0], [57.4, 5024.0], [57.5, 5024.0], [57.6, 5024.0], [57.7, 5024.0], [57.8, 5024.0], [57.9, 5024.0], [58.0, 5024.0], [58.1, 5025.0], [58.2, 5025.0], [58.3, 5025.0], [58.4, 5025.0], [58.5, 5025.0], [58.6, 5025.0], [58.7, 5025.0], [58.8, 5025.0], [58.9, 5025.0], [59.0, 5025.0], [59.1, 5025.0], [59.2, 5025.0], [59.3, 5025.0], [59.4, 5025.0], [59.5, 5025.0], [59.6, 5025.0], [59.7, 5025.0], [59.8, 5025.0], [59.9, 5025.0], [60.0, 5025.0], [60.1, 5025.0], [60.2, 5025.0], [60.3, 5025.0], [60.4, 5025.0], [60.5, 5025.0], [60.6, 5025.0], [60.7, 5025.0], [60.8, 5025.0], [60.9, 5025.0], [61.0, 5025.0], [61.1, 5025.0], [61.2, 5025.0], [61.3, 5025.0], [61.4, 5026.0], [61.5, 5026.0], [61.6, 5026.0], [61.7, 5026.0], [61.8, 5026.0], [61.9, 5026.0], [62.0, 5026.0], [62.1, 5026.0], [62.2, 5026.0], [62.3, 5026.0], [62.4, 5026.0], [62.5, 5026.0], [62.6, 5026.0], [62.7, 5026.0], [62.8, 5026.0], [62.9, 5026.0], [63.0, 5026.0], [63.1, 5026.0], [63.2, 5026.0], [63.3, 5026.0], [63.4, 5026.0], [63.5, 5026.0], [63.6, 5026.0], [63.7, 5026.0], [63.8, 5026.0], [63.9, 5026.0], [64.0, 5026.0], [64.1, 5026.0], [64.2, 5026.0], [64.3, 5026.0], [64.4, 5026.0], [64.5, 5026.0], [64.6, 5026.0], [64.7, 5026.0], [64.8, 5026.0], [64.9, 5026.0], [65.0, 5026.0], [65.1, 5026.0], [65.2, 5026.0], [65.3, 5026.0], [65.4, 5026.0], [65.5, 5026.0], [65.6, 5026.0], [65.7, 5026.0], [65.8, 5026.0], [65.9, 5026.0], [66.0, 5026.0], [66.1, 5026.0], [66.2, 5026.0], [66.3, 5026.0], [66.4, 5026.0], [66.5, 5026.0], [66.6, 5026.0], [66.7, 5026.0], [66.8, 5026.0], [66.9, 5026.0], [67.0, 5026.0], [67.1, 5026.0], [67.2, 5026.0], [67.3, 5026.0], [67.4, 5027.0], [67.5, 5027.0], [67.6, 5027.0], [67.7, 5027.0], [67.8, 5027.0], [67.9, 5027.0], [68.0, 5027.0], [68.1, 5027.0], [68.2, 5027.0], [68.3, 5027.0], [68.4, 5027.0], [68.5, 5027.0], [68.6, 5027.0], [68.7, 5027.0], [68.8, 5027.0], [68.9, 5027.0], [69.0, 5027.0], [69.1, 5027.0], [69.2, 5027.0], [69.3, 5027.0], [69.4, 5027.0], [69.5, 5027.0], [69.6, 5027.0], [69.7, 5027.0], [69.8, 5027.0], [69.9, 5027.0], [70.0, 5027.0], [70.1, 5027.0], [70.2, 5027.0], [70.3, 5027.0], [70.4, 5027.0], [70.5, 5027.0], [70.6, 5027.0], [70.7, 5027.0], [70.8, 5027.0], [70.9, 5027.0], [71.0, 5027.0], [71.1, 5027.0], [71.2, 5027.0], [71.3, 5027.0], [71.4, 5027.0], [71.5, 5027.0], [71.6, 5027.0], [71.7, 5027.0], [71.8, 5027.0], [71.9, 5027.0], [72.0, 5027.0], [72.1, 5027.0], [72.2, 5027.0], [72.3, 5027.0], [72.4, 5027.0], [72.5, 5027.0], [72.6, 5027.0], [72.7, 5027.0], [72.8, 5027.0], [72.9, 5027.0], [73.0, 5027.0], [73.1, 5027.0], [73.2, 5027.0], [73.3, 5027.0], [73.4, 5027.0], [73.5, 5027.0], [73.6, 5027.0], [73.7, 5027.0], [73.8, 5027.0], [73.9, 5027.0], [74.0, 5027.0], [74.1, 5027.0], [74.2, 5027.0], [74.3, 5027.0], [74.4, 5027.0], [74.5, 5027.0], [74.6, 5027.0], [74.7, 5027.0], [74.8, 5027.0], [74.9, 5027.0], [75.0, 5027.0], [75.1, 5027.0], [75.2, 5027.0], [75.3, 5027.0], [75.4, 5027.0], [75.5, 5027.0], [75.6, 5027.0], [75.7, 5027.0], [75.8, 5027.0], [75.9, 5027.0], [76.0, 5027.0], [76.1, 5027.0], [76.2, 5027.0], [76.3, 5027.0], [76.4, 5027.0], [76.5, 5027.0], [76.6, 5027.0], [76.7, 5028.0], [76.8, 5028.0], [76.9, 5028.0], [77.0, 5028.0], [77.1, 5028.0], [77.2, 5028.0], [77.3, 5028.0], [77.4, 5028.0], [77.5, 5028.0], [77.6, 5028.0], [77.7, 5028.0], [77.8, 5028.0], [77.9, 5028.0], [78.0, 5028.0], [78.1, 5028.0], [78.2, 5028.0], [78.3, 5028.0], [78.4, 5028.0], [78.5, 5028.0], [78.6, 5028.0], [78.7, 5028.0], [78.8, 5028.0], [78.9, 5028.0], [79.0, 5028.0], [79.1, 5028.0], [79.2, 5028.0], [79.3, 5028.0], [79.4, 5028.0], [79.5, 5028.0], [79.6, 5028.0], [79.7, 5028.0], [79.8, 5028.0], [79.9, 5028.0], [80.0, 5028.0], [80.1, 5028.0], [80.2, 5028.0], [80.3, 5028.0], [80.4, 5028.0], [80.5, 5028.0], [80.6, 5028.0], [80.7, 5029.0], [80.8, 5029.0], [80.9, 5029.0], [81.0, 5029.0], [81.1, 5029.0], [81.2, 5029.0], [81.3, 5029.0], [81.4, 5029.0], [81.5, 5029.0], [81.6, 5029.0], [81.7, 5029.0], [81.8, 5029.0], [81.9, 5029.0], [82.0, 5029.0], [82.1, 5029.0], [82.2, 5029.0], [82.3, 5029.0], [82.4, 5029.0], [82.5, 5029.0], [82.6, 5029.0], [82.7, 5029.0], [82.8, 5029.0], [82.9, 5029.0], [83.0, 5029.0], [83.1, 5029.0], [83.2, 5029.0], [83.3, 5029.0], [83.4, 5029.0], [83.5, 5029.0], [83.6, 5029.0], [83.7, 5029.0], [83.8, 5029.0], [83.9, 5029.0], [84.0, 5029.0], [84.1, 5029.0], [84.2, 5029.0], [84.3, 5029.0], [84.4, 5029.0], [84.5, 5029.0], [84.6, 5029.0], [84.7, 5030.0], [84.8, 5030.0], [84.9, 5030.0], [85.0, 5030.0], [85.1, 5030.0], [85.2, 5030.0], [85.3, 5030.0], [85.4, 5030.0], [85.5, 5030.0], [85.6, 5030.0], [85.7, 5030.0], [85.8, 5030.0], [85.9, 5030.0], [86.0, 5030.0], [86.1, 5030.0], [86.2, 5030.0], [86.3, 5030.0], [86.4, 5030.0], [86.5, 5030.0], [86.6, 5030.0], [86.7, 5030.0], [86.8, 5030.0], [86.9, 5030.0], [87.0, 5030.0], [87.1, 5030.0], [87.2, 5030.0], [87.3, 5030.0], [87.4, 5030.0], [87.5, 5030.0], [87.6, 5030.0], [87.7, 5030.0], [87.8, 5030.0], [87.9, 5030.0], [88.0, 5030.0], [88.1, 5030.0], [88.2, 5030.0], [88.3, 5030.0], [88.4, 5030.0], [88.5, 5030.0], [88.6, 5030.0], [88.7, 5030.0], [88.8, 5030.0], [88.9, 5030.0], [89.0, 5030.0], [89.1, 5030.0], [89.2, 5030.0], [89.3, 5030.0], [89.4, 5031.0], [89.5, 5031.0], [89.6, 5031.0], [89.7, 5031.0], [89.8, 5031.0], [89.9, 5031.0], [90.0, 5031.0], [90.1, 5031.0], [90.2, 5031.0], [90.3, 5031.0], [90.4, 5031.0], [90.5, 5031.0], [90.6, 5031.0], [90.7, 5032.0], [90.8, 5032.0], [90.9, 5032.0], [91.0, 5032.0], [91.1, 5032.0], [91.2, 5032.0], [91.3, 5032.0], [91.4, 5032.0], [91.5, 5032.0], [91.6, 5032.0], [91.7, 5032.0], [91.8, 5032.0], [91.9, 5032.0], [92.0, 5032.0], [92.1, 5032.0], [92.2, 5032.0], [92.3, 5032.0], [92.4, 5032.0], [92.5, 5032.0], [92.6, 5032.0], [92.7, 5033.0], [92.8, 5033.0], [92.9, 5033.0], [93.0, 5033.0], [93.1, 5033.0], [93.2, 5033.0], [93.3, 5033.0], [93.4, 5033.0], [93.5, 5033.0], [93.6, 5033.0], [93.7, 5033.0], [93.8, 5033.0], [93.9, 5033.0], [94.0, 5033.0], [94.1, 5033.0], [94.2, 5033.0], [94.3, 5033.0], [94.4, 5033.0], [94.5, 5033.0], [94.6, 5033.0], [94.7, 5034.0], [94.8, 5034.0], [94.9, 5034.0], [95.0, 5034.0], [95.1, 5034.0], [95.2, 5034.0], [95.3, 5034.0], [95.4, 5035.0], [95.5, 5035.0], [95.6, 5035.0], [95.7, 5035.0], [95.8, 5035.0], [95.9, 5035.0], [96.0, 5035.0], [96.1, 5036.0], [96.2, 5036.0], [96.3, 5036.0], [96.4, 5036.0], [96.5, 5036.0], [96.6, 5036.0], [96.7, 5036.0], [96.8, 5036.0], [96.9, 5036.0], [97.0, 5036.0], [97.1, 5036.0], [97.2, 5036.0], [97.3, 5036.0], [97.4, 5037.0], [97.5, 5037.0], [97.6, 5037.0], [97.7, 5037.0], [97.8, 5037.0], [97.9, 5037.0], [98.0, 5037.0], [98.1, 5037.0], [98.2, 5037.0], [98.3, 5037.0], [98.4, 5037.0], [98.5, 5037.0], [98.6, 5037.0], [98.7, 5040.0], [98.8, 5040.0], [98.9, 5040.0], [99.0, 5040.0], [99.1, 5040.0], [99.2, 5040.0], [99.3, 5040.0], [99.4, 5043.0], [99.5, 5043.0], [99.6, 5043.0], [99.7, 5043.0], [99.8, 5043.0], [99.9, 5043.0], [100.0, 5043.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[0.0, 2300.0], [0.1, 2300.0], [0.2, 2300.0], [0.3, 2300.0], [0.4, 2300.0], [0.5, 2300.0], [0.6, 2300.0], [0.7, 2328.0], [0.8, 2328.0], [0.9, 2328.0], [1.0, 2328.0], [1.1, 2328.0], [1.2, 2328.0], [1.3, 2328.0], [1.4, 2366.0], [1.5, 2366.0], [1.6, 2366.0], [1.7, 2366.0], [1.8, 2366.0], [1.9, 2366.0], [2.0, 2374.0], [2.1, 2374.0], [2.2, 2374.0], [2.3, 2374.0], [2.4, 2374.0], [2.5, 2374.0], [2.6, 2374.0], [2.7, 2382.0], [2.8, 2382.0], [2.9, 2382.0], [3.0, 2382.0], [3.1, 2382.0], [3.2, 2382.0], [3.3, 2382.0], [3.4, 2394.0], [3.5, 2394.0], [3.6, 2394.0], [3.7, 2394.0], [3.8, 2394.0], [3.9, 2394.0], [4.0, 2410.0], [4.1, 2410.0], [4.2, 2410.0], [4.3, 2410.0], [4.4, 2410.0], [4.5, 2410.0], [4.6, 2410.0], [4.7, 2425.0], [4.8, 2425.0], [4.9, 2425.0], [5.0, 2425.0], [5.1, 2425.0], [5.2, 2425.0], [5.3, 2425.0], [5.4, 2427.0], [5.5, 2427.0], [5.6, 2427.0], [5.7, 2427.0], [5.8, 2427.0], [5.9, 2427.0], [6.0, 2434.0], [6.1, 2434.0], [6.2, 2434.0], [6.3, 2434.0], [6.4, 2434.0], [6.5, 2434.0], [6.6, 2434.0], [6.7, 2441.0], [6.8, 2441.0], [6.9, 2441.0], [7.0, 2441.0], [7.1, 2441.0], [7.2, 2441.0], [7.3, 2441.0], [7.4, 2454.0], [7.5, 2454.0], [7.6, 2454.0], [7.7, 2454.0], [7.8, 2454.0], [7.9, 2454.0], [8.0, 2460.0], [8.1, 2460.0], [8.2, 2460.0], [8.3, 2460.0], [8.4, 2460.0], [8.5, 2460.0], [8.6, 2460.0], [8.7, 2470.0], [8.8, 2470.0], [8.9, 2470.0], [9.0, 2470.0], [9.1, 2470.0], [9.2, 2470.0], [9.3, 2470.0], [9.4, 2479.0], [9.5, 2479.0], [9.6, 2479.0], [9.7, 2479.0], [9.8, 2479.0], [9.9, 2479.0], [10.0, 2482.0], [10.1, 2482.0], [10.2, 2482.0], [10.3, 2482.0], [10.4, 2482.0], [10.5, 2482.0], [10.6, 2482.0], [10.7, 2488.0], [10.8, 2488.0], [10.9, 2488.0], [11.0, 2488.0], [11.1, 2488.0], [11.2, 2488.0], [11.3, 2488.0], [11.4, 2516.0], [11.5, 2516.0], [11.6, 2516.0], [11.7, 2516.0], [11.8, 2516.0], [11.9, 2516.0], [12.0, 2522.0], [12.1, 2522.0], [12.2, 2522.0], [12.3, 2522.0], [12.4, 2522.0], [12.5, 2522.0], [12.6, 2522.0], [12.7, 2532.0], [12.8, 2532.0], [12.9, 2532.0], [13.0, 2532.0], [13.1, 2532.0], [13.2, 2532.0], [13.3, 2532.0], [13.4, 2538.0], [13.5, 2538.0], [13.6, 2538.0], [13.7, 2538.0], [13.8, 2538.0], [13.9, 2538.0], [14.0, 2541.0], [14.1, 2541.0], [14.2, 2541.0], [14.3, 2541.0], [14.4, 2541.0], [14.5, 2541.0], [14.6, 2541.0], [14.7, 2547.0], [14.8, 2547.0], [14.9, 2547.0], [15.0, 2547.0], [15.1, 2547.0], [15.2, 2547.0], [15.3, 2547.0], [15.4, 2556.0], [15.5, 2556.0], [15.6, 2556.0], [15.7, 2556.0], [15.8, 2556.0], [15.9, 2556.0], [16.0, 2564.0], [16.1, 2564.0], [16.2, 2564.0], [16.3, 2564.0], [16.4, 2564.0], [16.5, 2564.0], [16.6, 2564.0], [16.7, 2566.0], [16.8, 2566.0], [16.9, 2566.0], [17.0, 2566.0], [17.1, 2566.0], [17.2, 2566.0], [17.3, 2566.0], [17.4, 2573.0], [17.5, 2573.0], [17.6, 2573.0], [17.7, 2573.0], [17.8, 2573.0], [17.9, 2573.0], [18.0, 2579.0], [18.1, 2579.0], [18.2, 2579.0], [18.3, 2579.0], [18.4, 2579.0], [18.5, 2579.0], [18.6, 2579.0], [18.7, 2581.0], [18.8, 2581.0], [18.9, 2581.0], [19.0, 2581.0], [19.1, 2581.0], [19.2, 2581.0], [19.3, 2581.0], [19.4, 2581.0], [19.5, 2581.0], [19.6, 2581.0], [19.7, 2581.0], [19.8, 2581.0], [19.9, 2581.0], [20.0, 2601.0], [20.1, 2601.0], [20.2, 2601.0], [20.3, 2601.0], [20.4, 2601.0], [20.5, 2601.0], [20.6, 2601.0], [20.7, 2625.0], [20.8, 2625.0], [20.9, 2625.0], [21.0, 2625.0], [21.1, 2625.0], [21.2, 2625.0], [21.3, 2625.0], [21.4, 2637.0], [21.5, 2637.0], [21.6, 2637.0], [21.7, 2637.0], [21.8, 2637.0], [21.9, 2637.0], [22.0, 2724.0], [22.1, 2724.0], [22.2, 2724.0], [22.3, 2724.0], [22.4, 2724.0], [22.5, 2724.0], [22.6, 2724.0], [22.7, 2741.0], [22.8, 2741.0], [22.9, 2741.0], [23.0, 2741.0], [23.1, 2741.0], [23.2, 2741.0], [23.3, 2741.0], [23.4, 2766.0], [23.5, 2766.0], [23.6, 2766.0], [23.7, 2766.0], [23.8, 2766.0], [23.9, 2766.0], [24.0, 2766.0], [24.1, 2766.0], [24.2, 2766.0], [24.3, 2766.0], [24.4, 2766.0], [24.5, 2766.0], [24.6, 2766.0], [24.7, 2803.0], [24.8, 2803.0], [24.9, 2803.0], [25.0, 2803.0], [25.1, 2803.0], [25.2, 2803.0], [25.3, 2803.0], [25.4, 2805.0], [25.5, 2805.0], [25.6, 2805.0], [25.7, 2805.0], [25.8, 2805.0], [25.9, 2805.0], [26.0, 2805.0], [26.1, 2810.0], [26.2, 2810.0], [26.3, 2810.0], [26.4, 2810.0], [26.5, 2810.0], [26.6, 2810.0], [26.7, 2816.0], [26.8, 2816.0], [26.9, 2816.0], [27.0, 2816.0], [27.1, 2816.0], [27.2, 2816.0], [27.3, 2816.0], [27.4, 2825.0], [27.5, 2825.0], [27.6, 2825.0], [27.7, 2825.0], [27.8, 2825.0], [27.9, 2825.0], [28.0, 2825.0], [28.1, 2827.0], [28.2, 2827.0], [28.3, 2827.0], [28.4, 2827.0], [28.5, 2827.0], [28.6, 2827.0], [28.7, 2830.0], [28.8, 2830.0], [28.9, 2830.0], [29.0, 2830.0], [29.1, 2830.0], [29.2, 2830.0], [29.3, 2830.0], [29.4, 2851.0], [29.5, 2851.0], [29.6, 2851.0], [29.7, 2851.0], [29.8, 2851.0], [29.9, 2851.0], [30.0, 2851.0], [30.1, 2855.0], [30.2, 2855.0], [30.3, 2855.0], [30.4, 2855.0], [30.5, 2855.0], [30.6, 2855.0], [30.7, 2882.0], [30.8, 2882.0], [30.9, 2882.0], [31.0, 2882.0], [31.1, 2882.0], [31.2, 2882.0], [31.3, 2882.0], [31.4, 2884.0], [31.5, 2884.0], [31.6, 2884.0], [31.7, 2884.0], [31.8, 2884.0], [31.9, 2884.0], [32.0, 2884.0], [32.1, 2891.0], [32.2, 2891.0], [32.3, 2891.0], [32.4, 2891.0], [32.5, 2891.0], [32.6, 2891.0], [32.7, 2894.0], [32.8, 2894.0], [32.9, 2894.0], [33.0, 2894.0], [33.1, 2894.0], [33.2, 2894.0], [33.3, 2894.0], [33.4, 2904.0], [33.5, 2904.0], [33.6, 2904.0], [33.7, 2904.0], [33.8, 2904.0], [33.9, 2904.0], [34.0, 2904.0], [34.1, 2907.0], [34.2, 2907.0], [34.3, 2907.0], [34.4, 2907.0], [34.5, 2907.0], [34.6, 2907.0], [34.7, 2916.0], [34.8, 2916.0], [34.9, 2916.0], [35.0, 2916.0], [35.1, 2916.0], [35.2, 2916.0], [35.3, 2916.0], [35.4, 2924.0], [35.5, 2924.0], [35.6, 2924.0], [35.7, 2924.0], [35.8, 2924.0], [35.9, 2924.0], [36.0, 2935.0], [36.1, 2935.0], [36.2, 2935.0], [36.3, 2935.0], [36.4, 2935.0], [36.5, 2935.0], [36.6, 2935.0], [36.7, 2935.0], [36.8, 2935.0], [36.9, 2935.0], [37.0, 2935.0], [37.1, 2935.0], [37.2, 2935.0], [37.3, 2935.0], [37.4, 2938.0], [37.5, 2938.0], [37.6, 2938.0], [37.7, 2938.0], [37.8, 2938.0], [37.9, 2938.0], [38.0, 2940.0], [38.1, 2940.0], [38.2, 2940.0], [38.3, 2940.0], [38.4, 2940.0], [38.5, 2940.0], [38.6, 2940.0], [38.7, 2941.0], [38.8, 2941.0], [38.9, 2941.0], [39.0, 2941.0], [39.1, 2941.0], [39.2, 2941.0], [39.3, 2941.0], [39.4, 2941.0], [39.5, 2941.0], [39.6, 2941.0], [39.7, 2941.0], [39.8, 2941.0], [39.9, 2941.0], [40.0, 2941.0], [40.1, 2941.0], [40.2, 2941.0], [40.3, 2941.0], [40.4, 2941.0], [40.5, 2941.0], [40.6, 2941.0], [40.7, 2947.0], [40.8, 2947.0], [40.9, 2947.0], [41.0, 2947.0], [41.1, 2947.0], [41.2, 2947.0], [41.3, 2947.0], [41.4, 2952.0], [41.5, 2952.0], [41.6, 2952.0], [41.7, 2952.0], [41.8, 2952.0], [41.9, 2952.0], [42.0, 2957.0], [42.1, 2957.0], [42.2, 2957.0], [42.3, 2957.0], [42.4, 2957.0], [42.5, 2957.0], [42.6, 2957.0], [42.7, 2960.0], [42.8, 2960.0], [42.9, 2960.0], [43.0, 2960.0], [43.1, 2960.0], [43.2, 2960.0], [43.3, 2960.0], [43.4, 2961.0], [43.5, 2961.0], [43.6, 2961.0], [43.7, 2961.0], [43.8, 2961.0], [43.9, 2961.0], [44.0, 2963.0], [44.1, 2963.0], [44.2, 2963.0], [44.3, 2963.0], [44.4, 2963.0], [44.5, 2963.0], [44.6, 2963.0], [44.7, 2963.0], [44.8, 2963.0], [44.9, 2963.0], [45.0, 2963.0], [45.1, 2963.0], [45.2, 2963.0], [45.3, 2963.0], [45.4, 2969.0], [45.5, 2969.0], [45.6, 2969.0], [45.7, 2969.0], [45.8, 2969.0], [45.9, 2969.0], [46.0, 2972.0], [46.1, 2972.0], [46.2, 2972.0], [46.3, 2972.0], [46.4, 2972.0], [46.5, 2972.0], [46.6, 2972.0], [46.7, 2980.0], [46.8, 2980.0], [46.9, 2980.0], [47.0, 2980.0], [47.1, 2980.0], [47.2, 2980.0], [47.3, 2980.0], [47.4, 2981.0], [47.5, 2981.0], [47.6, 2981.0], [47.7, 2981.0], [47.8, 2981.0], [47.9, 2981.0], [48.0, 2990.0], [48.1, 2990.0], [48.2, 2990.0], [48.3, 2990.0], [48.4, 2990.0], [48.5, 2990.0], [48.6, 2990.0], [48.7, 2992.0], [48.8, 2992.0], [48.9, 2992.0], [49.0, 2992.0], [49.1, 2992.0], [49.2, 2992.0], [49.3, 2992.0], [49.4, 2994.0], [49.5, 2994.0], [49.6, 2994.0], [49.7, 2994.0], [49.8, 2994.0], [49.9, 2994.0], [50.0, 2994.0], [50.1, 2994.0], [50.2, 2994.0], [50.3, 2994.0], [50.4, 2994.0], [50.5, 2994.0], [50.6, 2994.0], [50.7, 2997.0], [50.8, 2997.0], [50.9, 2997.0], [51.0, 2997.0], [51.1, 2997.0], [51.2, 2997.0], [51.3, 2997.0], [51.4, 3005.0], [51.5, 3005.0], [51.6, 3005.0], [51.7, 3005.0], [51.8, 3005.0], [51.9, 3005.0], [52.0, 3008.0], [52.1, 3008.0], [52.2, 3008.0], [52.3, 3008.0], [52.4, 3008.0], [52.5, 3008.0], [52.6, 3008.0], [52.7, 3009.0], [52.8, 3009.0], [52.9, 3009.0], [53.0, 3009.0], [53.1, 3009.0], [53.2, 3009.0], [53.3, 3009.0], [53.4, 3022.0], [53.5, 3022.0], [53.6, 3022.0], [53.7, 3022.0], [53.8, 3022.0], [53.9, 3022.0], [54.0, 3024.0], [54.1, 3024.0], [54.2, 3024.0], [54.3, 3024.0], [54.4, 3024.0], [54.5, 3024.0], [54.6, 3024.0], [54.7, 3024.0], [54.8, 3024.0], [54.9, 3024.0], [55.0, 3024.0], [55.1, 3024.0], [55.2, 3024.0], [55.3, 3024.0], [55.4, 3031.0], [55.5, 3031.0], [55.6, 3031.0], [55.7, 3031.0], [55.8, 3031.0], [55.9, 3031.0], [56.0, 3032.0], [56.1, 3032.0], [56.2, 3032.0], [56.3, 3032.0], [56.4, 3032.0], [56.5, 3032.0], [56.6, 3032.0], [56.7, 3036.0], [56.8, 3036.0], [56.9, 3036.0], [57.0, 3036.0], [57.1, 3036.0], [57.2, 3036.0], [57.3, 3036.0], [57.4, 3037.0], [57.5, 3037.0], [57.6, 3037.0], [57.7, 3037.0], [57.8, 3037.0], [57.9, 3037.0], [58.0, 3038.0], [58.1, 3038.0], [58.2, 3038.0], [58.3, 3038.0], [58.4, 3038.0], [58.5, 3038.0], [58.6, 3038.0], [58.7, 3049.0], [58.8, 3049.0], [58.9, 3049.0], [59.0, 3049.0], [59.1, 3049.0], [59.2, 3049.0], [59.3, 3049.0], [59.4, 3050.0], [59.5, 3050.0], [59.6, 3050.0], [59.7, 3050.0], [59.8, 3050.0], [59.9, 3050.0], [60.0, 3050.0], [60.1, 3050.0], [60.2, 3050.0], [60.3, 3050.0], [60.4, 3050.0], [60.5, 3050.0], [60.6, 3050.0], [60.7, 3055.0], [60.8, 3055.0], [60.9, 3055.0], [61.0, 3055.0], [61.1, 3055.0], [61.2, 3055.0], [61.3, 3055.0], [61.4, 3064.0], [61.5, 3064.0], [61.6, 3064.0], [61.7, 3064.0], [61.8, 3064.0], [61.9, 3064.0], [62.0, 3071.0], [62.1, 3071.0], [62.2, 3071.0], [62.3, 3071.0], [62.4, 3071.0], [62.5, 3071.0], [62.6, 3071.0], [62.7, 3071.0], [62.8, 3071.0], [62.9, 3071.0], [63.0, 3071.0], [63.1, 3071.0], [63.2, 3071.0], [63.3, 3071.0], [63.4, 3075.0], [63.5, 3075.0], [63.6, 3075.0], [63.7, 3075.0], [63.8, 3075.0], [63.9, 3075.0], [64.0, 3079.0], [64.1, 3079.0], [64.2, 3079.0], [64.3, 3079.0], [64.4, 3079.0], [64.5, 3079.0], [64.6, 3079.0], [64.7, 3085.0], [64.8, 3085.0], [64.9, 3085.0], [65.0, 3085.0], [65.1, 3085.0], [65.2, 3085.0], [65.3, 3085.0], [65.4, 3094.0], [65.5, 3094.0], [65.6, 3094.0], [65.7, 3094.0], [65.8, 3094.0], [65.9, 3094.0], [66.0, 3098.0], [66.1, 3098.0], [66.2, 3098.0], [66.3, 3098.0], [66.4, 3098.0], [66.5, 3098.0], [66.6, 3098.0], [66.7, 3098.0], [66.8, 3098.0], [66.9, 3098.0], [67.0, 3098.0], [67.1, 3098.0], [67.2, 3098.0], [67.3, 3098.0], [67.4, 3100.0], [67.5, 3100.0], [67.6, 3100.0], [67.7, 3100.0], [67.8, 3100.0], [67.9, 3100.0], [68.0, 3102.0], [68.1, 3102.0], [68.2, 3102.0], [68.3, 3102.0], [68.4, 3102.0], [68.5, 3102.0], [68.6, 3102.0], [68.7, 3104.0], [68.8, 3104.0], [68.9, 3104.0], [69.0, 3104.0], [69.1, 3104.0], [69.2, 3104.0], [69.3, 3104.0], [69.4, 3108.0], [69.5, 3108.0], [69.6, 3108.0], [69.7, 3108.0], [69.8, 3108.0], [69.9, 3108.0], [70.0, 3115.0], [70.1, 3115.0], [70.2, 3115.0], [70.3, 3115.0], [70.4, 3115.0], [70.5, 3115.0], [70.6, 3115.0], [70.7, 3117.0], [70.8, 3117.0], [70.9, 3117.0], [71.0, 3117.0], [71.1, 3117.0], [71.2, 3117.0], [71.3, 3117.0], [71.4, 3123.0], [71.5, 3123.0], [71.6, 3123.0], [71.7, 3123.0], [71.8, 3123.0], [71.9, 3123.0], [72.0, 3130.0], [72.1, 3130.0], [72.2, 3130.0], [72.3, 3130.0], [72.4, 3130.0], [72.5, 3130.0], [72.6, 3130.0], [72.7, 3146.0], [72.8, 3146.0], [72.9, 3146.0], [73.0, 3146.0], [73.1, 3146.0], [73.2, 3146.0], [73.3, 3146.0], [73.4, 3151.0], [73.5, 3151.0], [73.6, 3151.0], [73.7, 3151.0], [73.8, 3151.0], [73.9, 3151.0], [74.0, 3190.0], [74.1, 3190.0], [74.2, 3190.0], [74.3, 3190.0], [74.4, 3190.0], [74.5, 3190.0], [74.6, 3190.0], [74.7, 3190.0], [74.8, 3190.0], [74.9, 3190.0], [75.0, 3190.0], [75.1, 3190.0], [75.2, 3190.0], [75.3, 3190.0], [75.4, 3193.0], [75.5, 3193.0], [75.6, 3193.0], [75.7, 3193.0], [75.8, 3193.0], [75.9, 3193.0], [76.0, 3213.0], [76.1, 3213.0], [76.2, 3213.0], [76.3, 3213.0], [76.4, 3213.0], [76.5, 3213.0], [76.6, 3213.0], [76.7, 3219.0], [76.8, 3219.0], [76.9, 3219.0], [77.0, 3219.0], [77.1, 3219.0], [77.2, 3219.0], [77.3, 3219.0], [77.4, 3221.0], [77.5, 3221.0], [77.6, 3221.0], [77.7, 3221.0], [77.8, 3221.0], [77.9, 3221.0], [78.0, 3221.0], [78.1, 3224.0], [78.2, 3224.0], [78.3, 3224.0], [78.4, 3224.0], [78.5, 3224.0], [78.6, 3224.0], [78.7, 3265.0], [78.8, 3265.0], [78.9, 3265.0], [79.0, 3265.0], [79.1, 3265.0], [79.2, 3265.0], [79.3, 3265.0], [79.4, 3282.0], [79.5, 3282.0], [79.6, 3282.0], [79.7, 3282.0], [79.8, 3282.0], [79.9, 3282.0], [80.0, 3282.0], [80.1, 3286.0], [80.2, 3286.0], [80.3, 3286.0], [80.4, 3286.0], [80.5, 3286.0], [80.6, 3286.0], [80.7, 3286.0], [80.8, 3286.0], [80.9, 3286.0], [81.0, 3286.0], [81.1, 3286.0], [81.2, 3286.0], [81.3, 3286.0], [81.4, 3291.0], [81.5, 3291.0], [81.6, 3291.0], [81.7, 3291.0], [81.8, 3291.0], [81.9, 3291.0], [82.0, 3291.0], [82.1, 3296.0], [82.2, 3296.0], [82.3, 3296.0], [82.4, 3296.0], [82.5, 3296.0], [82.6, 3296.0], [82.7, 3311.0], [82.8, 3311.0], [82.9, 3311.0], [83.0, 3311.0], [83.1, 3311.0], [83.2, 3311.0], [83.3, 3311.0], [83.4, 3318.0], [83.5, 3318.0], [83.6, 3318.0], [83.7, 3318.0], [83.8, 3318.0], [83.9, 3318.0], [84.0, 3318.0], [84.1, 3321.0], [84.2, 3321.0], [84.3, 3321.0], [84.4, 3321.0], [84.5, 3321.0], [84.6, 3321.0], [84.7, 3324.0], [84.8, 3324.0], [84.9, 3324.0], [85.0, 3324.0], [85.1, 3324.0], [85.2, 3324.0], [85.3, 3324.0], [85.4, 3328.0], [85.5, 3328.0], [85.6, 3328.0], [85.7, 3328.0], [85.8, 3328.0], [85.9, 3328.0], [86.0, 3328.0], [86.1, 3333.0], [86.2, 3333.0], [86.3, 3333.0], [86.4, 3333.0], [86.5, 3333.0], [86.6, 3333.0], [86.7, 3338.0], [86.8, 3338.0], [86.9, 3338.0], [87.0, 3338.0], [87.1, 3338.0], [87.2, 3338.0], [87.3, 3338.0], [87.4, 3353.0], [87.5, 3353.0], [87.6, 3353.0], [87.7, 3353.0], [87.8, 3353.0], [87.9, 3353.0], [88.0, 3353.0], [88.1, 3367.0], [88.2, 3367.0], [88.3, 3367.0], [88.4, 3367.0], [88.5, 3367.0], [88.6, 3367.0], [88.7, 3369.0], [88.8, 3369.0], [88.9, 3369.0], [89.0, 3369.0], [89.1, 3369.0], [89.2, 3369.0], [89.3, 3369.0], [89.4, 3376.0], [89.5, 3376.0], [89.6, 3376.0], [89.7, 3376.0], [89.8, 3376.0], [89.9, 3376.0], [90.0, 3376.0], [90.1, 3379.0], [90.2, 3379.0], [90.3, 3379.0], [90.4, 3379.0], [90.5, 3379.0], [90.6, 3379.0], [90.7, 3386.0], [90.8, 3386.0], [90.9, 3386.0], [91.0, 3386.0], [91.1, 3386.0], [91.2, 3386.0], [91.3, 3386.0], [91.4, 3388.0], [91.5, 3388.0], [91.6, 3388.0], [91.7, 3388.0], [91.8, 3388.0], [91.9, 3388.0], [92.0, 3388.0], [92.1, 3392.0], [92.2, 3392.0], [92.3, 3392.0], [92.4, 3392.0], [92.5, 3392.0], [92.6, 3392.0], [92.7, 3393.0], [92.8, 3393.0], [92.9, 3393.0], [93.0, 3393.0], [93.1, 3393.0], [93.2, 3393.0], [93.3, 3393.0], [93.4, 3396.0], [93.5, 3396.0], [93.6, 3396.0], [93.7, 3396.0], [93.8, 3396.0], [93.9, 3396.0], [94.0, 3396.0], [94.1, 3406.0], [94.2, 3406.0], [94.3, 3406.0], [94.4, 3406.0], [94.5, 3406.0], [94.6, 3406.0], [94.7, 3425.0], [94.8, 3425.0], [94.9, 3425.0], [95.0, 3425.0], [95.1, 3425.0], [95.2, 3425.0], [95.3, 3425.0], [95.4, 3440.0], [95.5, 3440.0], [95.6, 3440.0], [95.7, 3440.0], [95.8, 3440.0], [95.9, 3440.0], [96.0, 3440.0], [96.1, 3446.0], [96.2, 3446.0], [96.3, 3446.0], [96.4, 3446.0], [96.5, 3446.0], [96.6, 3446.0], [96.7, 3454.0], [96.8, 3454.0], [96.9, 3454.0], [97.0, 3454.0], [97.1, 3454.0], [97.2, 3454.0], [97.3, 3454.0], [97.4, 3480.0], [97.5, 3480.0], [97.6, 3480.0], [97.7, 3480.0], [97.8, 3480.0], [97.9, 3480.0], [98.0, 3480.0], [98.1, 3491.0], [98.2, 3491.0], [98.3, 3491.0], [98.4, 3491.0], [98.5, 3491.0], [98.6, 3491.0], [98.7, 3532.0], [98.8, 3532.0], [98.9, 3532.0], [99.0, 3532.0], [99.1, 3532.0], [99.2, 3532.0], [99.3, 3532.0], [99.4, 3591.0], [99.5, 3591.0], [99.6, 3591.0], [99.7, 3591.0], [99.8, 3591.0], [99.9, 3591.0], [100.0, 3591.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[0.0, 1342.0], [0.1, 1342.0], [0.2, 1342.0], [0.3, 1342.0], [0.4, 1342.0], [0.5, 1342.0], [0.6, 1342.0], [0.7, 1347.0], [0.8, 1347.0], [0.9, 1347.0], [1.0, 1347.0], [1.1, 1347.0], [1.2, 1347.0], [1.3, 1347.0], [1.4, 1384.0], [1.5, 1384.0], [1.6, 1384.0], [1.7, 1384.0], [1.8, 1384.0], [1.9, 1384.0], [2.0, 1385.0], [2.1, 1385.0], [2.2, 1385.0], [2.3, 1385.0], [2.4, 1385.0], [2.5, 1385.0], [2.6, 1385.0], [2.7, 1397.0], [2.8, 1397.0], [2.9, 1397.0], [3.0, 1397.0], [3.1, 1397.0], [3.2, 1397.0], [3.3, 1397.0], [3.4, 1401.0], [3.5, 1401.0], [3.6, 1401.0], [3.7, 1401.0], [3.8, 1401.0], [3.9, 1401.0], [4.0, 1421.0], [4.1, 1421.0], [4.2, 1421.0], [4.3, 1421.0], [4.4, 1421.0], [4.5, 1421.0], [4.6, 1421.0], [4.7, 1421.0], [4.8, 1421.0], [4.9, 1421.0], [5.0, 1421.0], [5.1, 1421.0], [5.2, 1421.0], [5.3, 1421.0], [5.4, 1440.0], [5.5, 1440.0], [5.6, 1440.0], [5.7, 1440.0], [5.8, 1440.0], [5.9, 1440.0], [6.0, 1453.0], [6.1, 1453.0], [6.2, 1453.0], [6.3, 1453.0], [6.4, 1453.0], [6.5, 1453.0], [6.6, 1453.0], [6.7, 1461.0], [6.8, 1461.0], [6.9, 1461.0], [7.0, 1461.0], [7.1, 1461.0], [7.2, 1461.0], [7.3, 1461.0], [7.4, 1476.0], [7.5, 1476.0], [7.6, 1476.0], [7.7, 1476.0], [7.8, 1476.0], [7.9, 1476.0], [8.0, 1489.0], [8.1, 1489.0], [8.2, 1489.0], [8.3, 1489.0], [8.4, 1489.0], [8.5, 1489.0], [8.6, 1489.0], [8.7, 1495.0], [8.8, 1495.0], [8.9, 1495.0], [9.0, 1495.0], [9.1, 1495.0], [9.2, 1495.0], [9.3, 1495.0], [9.4, 1497.0], [9.5, 1497.0], [9.6, 1497.0], [9.7, 1497.0], [9.8, 1497.0], [9.9, 1497.0], [10.0, 1508.0], [10.1, 1508.0], [10.2, 1508.0], [10.3, 1508.0], [10.4, 1508.0], [10.5, 1508.0], [10.6, 1508.0], [10.7, 1509.0], [10.8, 1509.0], [10.9, 1509.0], [11.0, 1509.0], [11.1, 1509.0], [11.2, 1509.0], [11.3, 1509.0], [11.4, 1512.0], [11.5, 1512.0], [11.6, 1512.0], [11.7, 1512.0], [11.8, 1512.0], [11.9, 1512.0], [12.0, 1541.0], [12.1, 1541.0], [12.2, 1541.0], [12.3, 1541.0], [12.4, 1541.0], [12.5, 1541.0], [12.6, 1541.0], [12.7, 1557.0], [12.8, 1557.0], [12.9, 1557.0], [13.0, 1557.0], [13.1, 1557.0], [13.2, 1557.0], [13.3, 1557.0], [13.4, 1562.0], [13.5, 1562.0], [13.6, 1562.0], [13.7, 1562.0], [13.8, 1562.0], [13.9, 1562.0], [14.0, 1566.0], [14.1, 1566.0], [14.2, 1566.0], [14.3, 1566.0], [14.4, 1566.0], [14.5, 1566.0], [14.6, 1566.0], [14.7, 1574.0], [14.8, 1574.0], [14.9, 1574.0], [15.0, 1574.0], [15.1, 1574.0], [15.2, 1574.0], [15.3, 1574.0], [15.4, 1578.0], [15.5, 1578.0], [15.6, 1578.0], [15.7, 1578.0], [15.8, 1578.0], [15.9, 1578.0], [16.0, 1597.0], [16.1, 1597.0], [16.2, 1597.0], [16.3, 1597.0], [16.4, 1597.0], [16.5, 1597.0], [16.6, 1597.0], [16.7, 1604.0], [16.8, 1604.0], [16.9, 1604.0], [17.0, 1604.0], [17.1, 1604.0], [17.2, 1604.0], [17.3, 1604.0], [17.4, 1612.0], [17.5, 1612.0], [17.6, 1612.0], [17.7, 1612.0], [17.8, 1612.0], [17.9, 1612.0], [18.0, 1618.0], [18.1, 1618.0], [18.2, 1618.0], [18.3, 1618.0], [18.4, 1618.0], [18.5, 1618.0], [18.6, 1618.0], [18.7, 1621.0], [18.8, 1621.0], [18.9, 1621.0], [19.0, 1621.0], [19.1, 1621.0], [19.2, 1621.0], [19.3, 1621.0], [19.4, 1624.0], [19.5, 1624.0], [19.6, 1624.0], [19.7, 1624.0], [19.8, 1624.0], [19.9, 1624.0], [20.0, 1650.0], [20.1, 1650.0], [20.2, 1650.0], [20.3, 1650.0], [20.4, 1650.0], [20.5, 1650.0], [20.6, 1650.0], [20.7, 1675.0], [20.8, 1675.0], [20.9, 1675.0], [21.0, 1675.0], [21.1, 1675.0], [21.2, 1675.0], [21.3, 1675.0], [21.4, 1678.0], [21.5, 1678.0], [21.6, 1678.0], [21.7, 1678.0], [21.8, 1678.0], [21.9, 1678.0], [22.0, 1678.0], [22.1, 1681.0], [22.2, 1681.0], [22.3, 1681.0], [22.4, 1681.0], [22.5, 1681.0], [22.6, 1681.0], [22.7, 1688.0], [22.8, 1688.0], [22.9, 1688.0], [23.0, 1688.0], [23.1, 1688.0], [23.2, 1688.0], [23.3, 1688.0], [23.4, 1693.0], [23.5, 1693.0], [23.6, 1693.0], [23.7, 1693.0], [23.8, 1693.0], [23.9, 1693.0], [24.0, 1693.0], [24.1, 1697.0], [24.2, 1697.0], [24.3, 1697.0], [24.4, 1697.0], [24.5, 1697.0], [24.6, 1697.0], [24.7, 1705.0], [24.8, 1705.0], [24.9, 1705.0], [25.0, 1705.0], [25.1, 1705.0], [25.2, 1705.0], [25.3, 1705.0], [25.4, 1707.0], [25.5, 1707.0], [25.6, 1707.0], [25.7, 1707.0], [25.8, 1707.0], [25.9, 1707.0], [26.0, 1707.0], [26.1, 1723.0], [26.2, 1723.0], [26.3, 1723.0], [26.4, 1723.0], [26.5, 1723.0], [26.6, 1723.0], [26.7, 1723.0], [26.8, 1723.0], [26.9, 1723.0], [27.0, 1723.0], [27.1, 1723.0], [27.2, 1723.0], [27.3, 1723.0], [27.4, 1736.0], [27.5, 1736.0], [27.6, 1736.0], [27.7, 1736.0], [27.8, 1736.0], [27.9, 1736.0], [28.0, 1736.0], [28.1, 1737.0], [28.2, 1737.0], [28.3, 1737.0], [28.4, 1737.0], [28.5, 1737.0], [28.6, 1737.0], [28.7, 1740.0], [28.8, 1740.0], [28.9, 1740.0], [29.0, 1740.0], [29.1, 1740.0], [29.2, 1740.0], [29.3, 1740.0], [29.4, 1745.0], [29.5, 1745.0], [29.6, 1745.0], [29.7, 1745.0], [29.8, 1745.0], [29.9, 1745.0], [30.0, 1745.0], [30.1, 1746.0], [30.2, 1746.0], [30.3, 1746.0], [30.4, 1746.0], [30.5, 1746.0], [30.6, 1746.0], [30.7, 1757.0], [30.8, 1757.0], [30.9, 1757.0], [31.0, 1757.0], [31.1, 1757.0], [31.2, 1757.0], [31.3, 1757.0], [31.4, 1758.0], [31.5, 1758.0], [31.6, 1758.0], [31.7, 1758.0], [31.8, 1758.0], [31.9, 1758.0], [32.0, 1758.0], [32.1, 1759.0], [32.2, 1759.0], [32.3, 1759.0], [32.4, 1759.0], [32.5, 1759.0], [32.6, 1759.0], [32.7, 1759.0], [32.8, 1759.0], [32.9, 1759.0], [33.0, 1759.0], [33.1, 1759.0], [33.2, 1759.0], [33.3, 1759.0], [33.4, 1765.0], [33.5, 1765.0], [33.6, 1765.0], [33.7, 1765.0], [33.8, 1765.0], [33.9, 1765.0], [34.0, 1765.0], [34.1, 1796.0], [34.2, 1796.0], [34.3, 1796.0], [34.4, 1796.0], [34.5, 1796.0], [34.6, 1796.0], [34.7, 1798.0], [34.8, 1798.0], [34.9, 1798.0], [35.0, 1798.0], [35.1, 1798.0], [35.2, 1798.0], [35.3, 1798.0], [35.4, 1801.0], [35.5, 1801.0], [35.6, 1801.0], [35.7, 1801.0], [35.8, 1801.0], [35.9, 1801.0], [36.0, 1801.0], [36.1, 1803.0], [36.2, 1803.0], [36.3, 1803.0], [36.4, 1803.0], [36.5, 1803.0], [36.6, 1803.0], [36.7, 1808.0], [36.8, 1808.0], [36.9, 1808.0], [37.0, 1808.0], [37.1, 1808.0], [37.2, 1808.0], [37.3, 1808.0], [37.4, 1815.0], [37.5, 1815.0], [37.6, 1815.0], [37.7, 1815.0], [37.8, 1815.0], [37.9, 1815.0], [38.0, 1825.0], [38.1, 1825.0], [38.2, 1825.0], [38.3, 1825.0], [38.4, 1825.0], [38.5, 1825.0], [38.6, 1825.0], [38.7, 1827.0], [38.8, 1827.0], [38.9, 1827.0], [39.0, 1827.0], [39.1, 1827.0], [39.2, 1827.0], [39.3, 1827.0], [39.4, 1831.0], [39.5, 1831.0], [39.6, 1831.0], [39.7, 1831.0], [39.8, 1831.0], [39.9, 1831.0], [40.0, 1833.0], [40.1, 1833.0], [40.2, 1833.0], [40.3, 1833.0], [40.4, 1833.0], [40.5, 1833.0], [40.6, 1833.0], [40.7, 1834.0], [40.8, 1834.0], [40.9, 1834.0], [41.0, 1834.0], [41.1, 1834.0], [41.2, 1834.0], [41.3, 1834.0], [41.4, 1846.0], [41.5, 1846.0], [41.6, 1846.0], [41.7, 1846.0], [41.8, 1846.0], [41.9, 1846.0], [42.0, 1847.0], [42.1, 1847.0], [42.2, 1847.0], [42.3, 1847.0], [42.4, 1847.0], [42.5, 1847.0], [42.6, 1847.0], [42.7, 1849.0], [42.8, 1849.0], [42.9, 1849.0], [43.0, 1849.0], [43.1, 1849.0], [43.2, 1849.0], [43.3, 1849.0], [43.4, 1851.0], [43.5, 1851.0], [43.6, 1851.0], [43.7, 1851.0], [43.8, 1851.0], [43.9, 1851.0], [44.0, 1856.0], [44.1, 1856.0], [44.2, 1856.0], [44.3, 1856.0], [44.4, 1856.0], [44.5, 1856.0], [44.6, 1856.0], [44.7, 1857.0], [44.8, 1857.0], [44.9, 1857.0], [45.0, 1857.0], [45.1, 1857.0], [45.2, 1857.0], [45.3, 1857.0], [45.4, 1861.0], [45.5, 1861.0], [45.6, 1861.0], [45.7, 1861.0], [45.8, 1861.0], [45.9, 1861.0], [46.0, 1863.0], [46.1, 1863.0], [46.2, 1863.0], [46.3, 1863.0], [46.4, 1863.0], [46.5, 1863.0], [46.6, 1863.0], [46.7, 1864.0], [46.8, 1864.0], [46.9, 1864.0], [47.0, 1864.0], [47.1, 1864.0], [47.2, 1864.0], [47.3, 1864.0], [47.4, 1873.0], [47.5, 1873.0], [47.6, 1873.0], [47.7, 1873.0], [47.8, 1873.0], [47.9, 1873.0], [48.0, 1873.0], [48.1, 1873.0], [48.2, 1873.0], [48.3, 1873.0], [48.4, 1873.0], [48.5, 1873.0], [48.6, 1873.0], [48.7, 1883.0], [48.8, 1883.0], [48.9, 1883.0], [49.0, 1883.0], [49.1, 1883.0], [49.2, 1883.0], [49.3, 1883.0], [49.4, 1885.0], [49.5, 1885.0], [49.6, 1885.0], [49.7, 1885.0], [49.8, 1885.0], [49.9, 1885.0], [50.0, 1887.0], [50.1, 1887.0], [50.2, 1887.0], [50.3, 1887.0], [50.4, 1887.0], [50.5, 1887.0], [50.6, 1887.0], [50.7, 1890.0], [50.8, 1890.0], [50.9, 1890.0], [51.0, 1890.0], [51.1, 1890.0], [51.2, 1890.0], [51.3, 1890.0], [51.4, 1892.0], [51.5, 1892.0], [51.6, 1892.0], [51.7, 1892.0], [51.8, 1892.0], [51.9, 1892.0], [52.0, 1905.0], [52.1, 1905.0], [52.2, 1905.0], [52.3, 1905.0], [52.4, 1905.0], [52.5, 1905.0], [52.6, 1905.0], [52.7, 1908.0], [52.8, 1908.0], [52.9, 1908.0], [53.0, 1908.0], [53.1, 1908.0], [53.2, 1908.0], [53.3, 1908.0], [53.4, 1912.0], [53.5, 1912.0], [53.6, 1912.0], [53.7, 1912.0], [53.8, 1912.0], [53.9, 1912.0], [54.0, 1913.0], [54.1, 1913.0], [54.2, 1913.0], [54.3, 1913.0], [54.4, 1913.0], [54.5, 1913.0], [54.6, 1913.0], [54.7, 1915.0], [54.8, 1915.0], [54.9, 1915.0], [55.0, 1915.0], [55.1, 1915.0], [55.2, 1915.0], [55.3, 1915.0], [55.4, 1917.0], [55.5, 1917.0], [55.6, 1917.0], [55.7, 1917.0], [55.8, 1917.0], [55.9, 1917.0], [56.0, 1922.0], [56.1, 1922.0], [56.2, 1922.0], [56.3, 1922.0], [56.4, 1922.0], [56.5, 1922.0], [56.6, 1922.0], [56.7, 1926.0], [56.8, 1926.0], [56.9, 1926.0], [57.0, 1926.0], [57.1, 1926.0], [57.2, 1926.0], [57.3, 1926.0], [57.4, 1928.0], [57.5, 1928.0], [57.6, 1928.0], [57.7, 1928.0], [57.8, 1928.0], [57.9, 1928.0], [58.0, 1929.0], [58.1, 1929.0], [58.2, 1929.0], [58.3, 1929.0], [58.4, 1929.0], [58.5, 1929.0], [58.6, 1929.0], [58.7, 1933.0], [58.8, 1933.0], [58.9, 1933.0], [59.0, 1933.0], [59.1, 1933.0], [59.2, 1933.0], [59.3, 1933.0], [59.4, 1934.0], [59.5, 1934.0], [59.6, 1934.0], [59.7, 1934.0], [59.8, 1934.0], [59.9, 1934.0], [60.0, 1942.0], [60.1, 1942.0], [60.2, 1942.0], [60.3, 1942.0], [60.4, 1942.0], [60.5, 1942.0], [60.6, 1942.0], [60.7, 1946.0], [60.8, 1946.0], [60.9, 1946.0], [61.0, 1946.0], [61.1, 1946.0], [61.2, 1946.0], [61.3, 1946.0], [61.4, 1946.0], [61.5, 1946.0], [61.6, 1946.0], [61.7, 1946.0], [61.8, 1946.0], [61.9, 1946.0], [62.0, 1952.0], [62.1, 1952.0], [62.2, 1952.0], [62.3, 1952.0], [62.4, 1952.0], [62.5, 1952.0], [62.6, 1952.0], [62.7, 1955.0], [62.8, 1955.0], [62.9, 1955.0], [63.0, 1955.0], [63.1, 1955.0], [63.2, 1955.0], [63.3, 1955.0], [63.4, 1955.0], [63.5, 1955.0], [63.6, 1955.0], [63.7, 1955.0], [63.8, 1955.0], [63.9, 1955.0], [64.0, 1974.0], [64.1, 1974.0], [64.2, 1974.0], [64.3, 1974.0], [64.4, 1974.0], [64.5, 1974.0], [64.6, 1974.0], [64.7, 1984.0], [64.8, 1984.0], [64.9, 1984.0], [65.0, 1984.0], [65.1, 1984.0], [65.2, 1984.0], [65.3, 1984.0], [65.4, 1989.0], [65.5, 1989.0], [65.6, 1989.0], [65.7, 1989.0], [65.8, 1989.0], [65.9, 1989.0], [66.0, 1991.0], [66.1, 1991.0], [66.2, 1991.0], [66.3, 1991.0], [66.4, 1991.0], [66.5, 1991.0], [66.6, 1991.0], [66.7, 1992.0], [66.8, 1992.0], [66.9, 1992.0], [67.0, 1992.0], [67.1, 1992.0], [67.2, 1992.0], [67.3, 1992.0], [67.4, 1997.0], [67.5, 1997.0], [67.6, 1997.0], [67.7, 1997.0], [67.8, 1997.0], [67.9, 1997.0], [68.0, 2021.0], [68.1, 2021.0], [68.2, 2021.0], [68.3, 2021.0], [68.4, 2021.0], [68.5, 2021.0], [68.6, 2021.0], [68.7, 2028.0], [68.8, 2028.0], [68.9, 2028.0], [69.0, 2028.0], [69.1, 2028.0], [69.2, 2028.0], [69.3, 2028.0], [69.4, 2030.0], [69.5, 2030.0], [69.6, 2030.0], [69.7, 2030.0], [69.8, 2030.0], [69.9, 2030.0], [70.0, 2034.0], [70.1, 2034.0], [70.2, 2034.0], [70.3, 2034.0], [70.4, 2034.0], [70.5, 2034.0], [70.6, 2034.0], [70.7, 2039.0], [70.8, 2039.0], [70.9, 2039.0], [71.0, 2039.0], [71.1, 2039.0], [71.2, 2039.0], [71.3, 2039.0], [71.4, 2048.0], [71.5, 2048.0], [71.6, 2048.0], [71.7, 2048.0], [71.8, 2048.0], [71.9, 2048.0], [72.0, 2095.0], [72.1, 2095.0], [72.2, 2095.0], [72.3, 2095.0], [72.4, 2095.0], [72.5, 2095.0], [72.6, 2095.0], [72.7, 2115.0], [72.8, 2115.0], [72.9, 2115.0], [73.0, 2115.0], [73.1, 2115.0], [73.2, 2115.0], [73.3, 2115.0], [73.4, 2125.0], [73.5, 2125.0], [73.6, 2125.0], [73.7, 2125.0], [73.8, 2125.0], [73.9, 2125.0], [74.0, 2127.0], [74.1, 2127.0], [74.2, 2127.0], [74.3, 2127.0], [74.4, 2127.0], [74.5, 2127.0], [74.6, 2127.0], [74.7, 2128.0], [74.8, 2128.0], [74.9, 2128.0], [75.0, 2128.0], [75.1, 2128.0], [75.2, 2128.0], [75.3, 2128.0], [75.4, 2129.0], [75.5, 2129.0], [75.6, 2129.0], [75.7, 2129.0], [75.8, 2129.0], [75.9, 2129.0], [76.0, 2129.0], [76.1, 2134.0], [76.2, 2134.0], [76.3, 2134.0], [76.4, 2134.0], [76.5, 2134.0], [76.6, 2134.0], [76.7, 2146.0], [76.8, 2146.0], [76.9, 2146.0], [77.0, 2146.0], [77.1, 2146.0], [77.2, 2146.0], [77.3, 2146.0], [77.4, 2151.0], [77.5, 2151.0], [77.6, 2151.0], [77.7, 2151.0], [77.8, 2151.0], [77.9, 2151.0], [78.0, 2151.0], [78.1, 2158.0], [78.2, 2158.0], [78.3, 2158.0], [78.4, 2158.0], [78.5, 2158.0], [78.6, 2158.0], [78.7, 2159.0], [78.8, 2159.0], [78.9, 2159.0], [79.0, 2159.0], [79.1, 2159.0], [79.2, 2159.0], [79.3, 2159.0], [79.4, 2185.0], [79.5, 2185.0], [79.6, 2185.0], [79.7, 2185.0], [79.8, 2185.0], [79.9, 2185.0], [80.0, 2185.0], [80.1, 2187.0], [80.2, 2187.0], [80.3, 2187.0], [80.4, 2187.0], [80.5, 2187.0], [80.6, 2187.0], [80.7, 2189.0], [80.8, 2189.0], [80.9, 2189.0], [81.0, 2189.0], [81.1, 2189.0], [81.2, 2189.0], [81.3, 2189.0], [81.4, 2204.0], [81.5, 2204.0], [81.6, 2204.0], [81.7, 2204.0], [81.8, 2204.0], [81.9, 2204.0], [82.0, 2204.0], [82.1, 2282.0], [82.2, 2282.0], [82.3, 2282.0], [82.4, 2282.0], [82.5, 2282.0], [82.6, 2282.0], [82.7, 2286.0], [82.8, 2286.0], [82.9, 2286.0], [83.0, 2286.0], [83.1, 2286.0], [83.2, 2286.0], [83.3, 2286.0], [83.4, 2288.0], [83.5, 2288.0], [83.6, 2288.0], [83.7, 2288.0], [83.8, 2288.0], [83.9, 2288.0], [84.0, 2288.0], [84.1, 2299.0], [84.2, 2299.0], [84.3, 2299.0], [84.4, 2299.0], [84.5, 2299.0], [84.6, 2299.0], [84.7, 2311.0], [84.8, 2311.0], [84.9, 2311.0], [85.0, 2311.0], [85.1, 2311.0], [85.2, 2311.0], [85.3, 2311.0], [85.4, 2324.0], [85.5, 2324.0], [85.6, 2324.0], [85.7, 2324.0], [85.8, 2324.0], [85.9, 2324.0], [86.0, 2324.0], [86.1, 2328.0], [86.2, 2328.0], [86.3, 2328.0], [86.4, 2328.0], [86.5, 2328.0], [86.6, 2328.0], [86.7, 2329.0], [86.8, 2329.0], [86.9, 2329.0], [87.0, 2329.0], [87.1, 2329.0], [87.2, 2329.0], [87.3, 2329.0], [87.4, 2335.0], [87.5, 2335.0], [87.6, 2335.0], [87.7, 2335.0], [87.8, 2335.0], [87.9, 2335.0], [88.0, 2335.0], [88.1, 2336.0], [88.2, 2336.0], [88.3, 2336.0], [88.4, 2336.0], [88.5, 2336.0], [88.6, 2336.0], [88.7, 2351.0], [88.8, 2351.0], [88.9, 2351.0], [89.0, 2351.0], [89.1, 2351.0], [89.2, 2351.0], [89.3, 2351.0], [89.4, 2353.0], [89.5, 2353.0], [89.6, 2353.0], [89.7, 2353.0], [89.8, 2353.0], [89.9, 2353.0], [90.0, 2353.0], [90.1, 2376.0], [90.2, 2376.0], [90.3, 2376.0], [90.4, 2376.0], [90.5, 2376.0], [90.6, 2376.0], [90.7, 2378.0], [90.8, 2378.0], [90.9, 2378.0], [91.0, 2378.0], [91.1, 2378.0], [91.2, 2378.0], [91.3, 2378.0], [91.4, 2378.0], [91.5, 2378.0], [91.6, 2378.0], [91.7, 2378.0], [91.8, 2378.0], [91.9, 2378.0], [92.0, 2378.0], [92.1, 2391.0], [92.2, 2391.0], [92.3, 2391.0], [92.4, 2391.0], [92.5, 2391.0], [92.6, 2391.0], [92.7, 2391.0], [92.8, 2391.0], [92.9, 2391.0], [93.0, 2391.0], [93.1, 2391.0], [93.2, 2391.0], [93.3, 2391.0], [93.4, 2403.0], [93.5, 2403.0], [93.6, 2403.0], [93.7, 2403.0], [93.8, 2403.0], [93.9, 2403.0], [94.0, 2403.0], [94.1, 2405.0], [94.2, 2405.0], [94.3, 2405.0], [94.4, 2405.0], [94.5, 2405.0], [94.6, 2405.0], [94.7, 2411.0], [94.8, 2411.0], [94.9, 2411.0], [95.0, 2411.0], [95.1, 2411.0], [95.2, 2411.0], [95.3, 2411.0], [95.4, 2431.0], [95.5, 2431.0], [95.6, 2431.0], [95.7, 2431.0], [95.8, 2431.0], [95.9, 2431.0], [96.0, 2431.0], [96.1, 2440.0], [96.2, 2440.0], [96.3, 2440.0], [96.4, 2440.0], [96.5, 2440.0], [96.6, 2440.0], [96.7, 2444.0], [96.8, 2444.0], [96.9, 2444.0], [97.0, 2444.0], [97.1, 2444.0], [97.2, 2444.0], [97.3, 2444.0], [97.4, 2480.0], [97.5, 2480.0], [97.6, 2480.0], [97.7, 2480.0], [97.8, 2480.0], [97.9, 2480.0], [98.0, 2480.0], [98.1, 2490.0], [98.2, 2490.0], [98.3, 2490.0], [98.4, 2490.0], [98.5, 2490.0], [98.6, 2490.0], [98.7, 2499.0], [98.8, 2499.0], [98.9, 2499.0], [99.0, 2499.0], [99.1, 2499.0], [99.2, 2499.0], [99.3, 2499.0], [99.4, 2511.0], [99.5, 2511.0], [99.6, 2511.0], [99.7, 2511.0], [99.8, 2511.0], [99.9, 2511.0], [100.0, 2511.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1300.0, "maxY": 150.0, "series": [{"data": [[4100.0, 13.0], [4200.0, 15.0], [4300.0, 11.0], [4400.0, 8.0], [3500.0, 5.0], [3600.0, 23.0], [3700.0, 8.0], [3800.0, 18.0], [3900.0, 35.0], [4000.0, 14.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[2100.0, 9.0], [2300.0, 14.0], [2200.0, 13.0], [2400.0, 14.0], [2500.0, 11.0], [2600.0, 14.0], [2700.0, 9.0], [2800.0, 14.0], [2900.0, 5.0], [1400.0, 3.0], [1500.0, 4.0], [1600.0, 16.0], [1700.0, 6.0], [1800.0, 5.0], [1900.0, 5.0], [2000.0, 8.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[5000.0, 150.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[2300.0, 6.0], [2400.0, 11.0], [2500.0, 13.0], [2600.0, 3.0], [2800.0, 13.0], [2700.0, 4.0], [2900.0, 27.0], [3000.0, 24.0], [3100.0, 13.0], [3200.0, 10.0], [3300.0, 17.0], [3400.0, 7.0], [3500.0, 2.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[2100.0, 13.0], [2300.0, 13.0], [2200.0, 5.0], [2400.0, 9.0], [2500.0, 1.0], [1300.0, 5.0], [1400.0, 10.0], [1500.0, 10.0], [1600.0, 12.0], [1700.0, 16.0], [1800.0, 25.0], [1900.0, 24.0], [2000.0, 7.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 368.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 382.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 382.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 368.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 135.13999999999993, "minX": 1.71673326E12, "maxY": 135.13999999999993, "series": [{"data": [[1.71673326E12, 135.13999999999993]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673326E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1908.726666666667, "minX": 1.0, "maxY": 5023.733333333332, "series": [{"data": [[2.0, 4034.0], [3.0, 4011.0], [4.0, 3979.0], [5.0, 4206.0], [6.0, 4027.0], [7.0, 4205.0], [8.0, 4077.0], [9.0, 3987.0], [10.0, 3966.0], [11.0, 3945.0], [13.0, 4167.0], [15.0, 3946.5], [16.0, 4304.0], [17.0, 4341.0], [18.0, 3960.0], [19.0, 3954.0], [20.0, 4173.0], [21.0, 4120.0], [24.0, 4192.333333333333], [26.0, 4068.0], [27.0, 3980.0], [28.0, 3982.0], [29.0, 4424.0], [30.0, 3918.0], [31.0, 4340.0], [32.0, 3931.0], [35.0, 3926.0], [34.0, 4151.0], [37.0, 3979.0], [36.0, 3958.0], [39.0, 4063.0], [38.0, 4459.0], [40.0, 3866.0], [42.0, 4186.0], [44.0, 3936.5], [46.0, 3998.0], [49.0, 4277.0], [50.0, 4198.0], [53.0, 3832.0], [52.0, 4151.5], [57.0, 3937.0], [56.0, 4194.0], [59.0, 3893.0], [58.0, 4007.0], [61.0, 4005.0], [60.0, 3956.0], [63.0, 3927.0], [62.0, 4024.0], [67.0, 3874.0], [66.0, 4333.0], [65.0, 4290.5], [71.0, 4044.0], [70.0, 4162.0], [69.0, 4259.0], [68.0, 4177.0], [75.0, 3915.0], [74.0, 3935.0], [73.0, 4174.0], [72.0, 4265.0], [79.0, 4097.0], [77.0, 3951.0], [76.0, 4155.0], [83.0, 3928.0], [81.0, 4303.0], [80.0, 4271.0], [87.0, 3889.0], [86.0, 4411.0], [85.0, 3883.0], [84.0, 4242.0], [91.0, 4135.0], [90.0, 4403.0], [89.0, 3953.0], [88.0, 4149.0], [95.0, 4334.0], [94.0, 3822.0], [93.0, 3993.0], [92.0, 3903.0], [97.0, 4318.0], [96.0, 4204.0], [103.0, 3953.0], [102.0, 4111.0], [101.0, 4106.0], [107.0, 3640.0], [106.0, 3700.0], [105.0, 4271.0], [104.0, 4111.0], [111.0, 3714.0], [110.0, 3748.0], [109.0, 3712.0], [108.0, 3860.0], [115.0, 3652.0], [114.0, 3743.0], [113.0, 3766.5], [119.0, 3618.0], [118.0, 3617.0], [117.0, 4103.0], [116.0, 3669.0], [123.0, 3638.0], [122.0, 4032.0], [121.0, 3838.0], [120.0, 3696.0], [127.0, 3641.0], [126.0, 3610.0], [125.0, 3674.0], [124.0, 3735.0], [135.0, 3520.0], [134.0, 3627.0], [133.0, 3749.0], [132.0, 3624.0], [131.0, 3686.0], [130.0, 3674.0], [129.0, 3866.0], [128.0, 3650.0], [143.0, 4027.0], [142.0, 3635.0], [141.0, 3650.0], [140.0, 3551.0], [139.0, 3631.0], [138.0, 3564.0], [137.0, 3918.5], [150.0, 3584.0], [149.0, 3611.0], [148.0, 3634.0], [147.0, 3616.0], [146.0, 3563.0], [145.0, 3630.0], [144.0, 3608.0], [1.0, 3893.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[75.70000000000006, 3976.639999999999]], "isOverall": false, "label": "Create patient-Aggregated", "isController": false}, {"data": [[150.0, 2279.9733333333324]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[150.0, 2279.9733333333324]], "isOverall": false, "label": "Get all patients-Aggregated", "isController": false}, {"data": [[150.0, 5023.733333333332]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[150.0, 5023.733333333332]], "isOverall": false, "label": "Create Doctor-Aggregated", "isController": false}, {"data": [[150.0, 2965.5399999999995]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[150.0, 2965.5399999999995]], "isOverall": false, "label": "Create prescription-Aggregated", "isController": false}, {"data": [[150.0, 1908.726666666667]], "isOverall": false, "label": "Release drug", "isController": false}, {"data": [[150.0, 1908.726666666667]], "isOverall": false, "label": "Release drug-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11900.616666666667, "minX": 1.71673326E12, "maxY": 28465.0, "series": [{"data": [[1.71673326E12, 11900.616666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71673326E12, 28465.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673326E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1908.726666666667, "minX": 1.71673326E12, "maxY": 5023.733333333332, "series": [{"data": [[1.71673326E12, 3976.639999999999]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673326E12, 2279.9733333333324]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673326E12, 5023.733333333332]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673326E12, 2965.5399999999995]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673326E12, 1908.726666666667]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673326E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1904.6733333333336, "minX": 1.71673326E12, "maxY": 5023.313333333329, "series": [{"data": [[1.71673326E12, 3971.993333333332]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673326E12, 2256.993333333332]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673326E12, 5023.313333333329]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673326E12, 2958.0800000000004]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673326E12, 1904.6733333333336]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673326E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71673326E12, "maxY": 0.4666666666666667, "series": [{"data": [[1.71673326E12, 0.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673326E12, 0.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673326E12, 0.4666666666666667]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673326E12, 0.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673326E12, 0.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673326E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1624.0, "minX": 1.71673326E12, "maxY": 4476.0, "series": [{"data": [[1.71673326E12, 4476.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71673326E12, 1624.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71673326E12, 4153.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71673326E12, 4417.360000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71673326E12, 2878.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71673326E12, 4296.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673326E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1618.0, "minX": 8.0, "maxY": 5024.0, "series": [{"data": [[8.0, 2009.5], [71.0, 2569.0], [142.0, 1929.0], [74.0, 3099.0], [150.0, 4024.0], [79.0, 2479.5], [76.0, 2981.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[142.0, 1618.0], [150.0, 3686.0], [79.0, 1730.0], [76.0, 2581.0], [23.0, 5023.0], [127.0, 5024.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 150.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1609.0, "minX": 8.0, "maxY": 5023.0, "series": [{"data": [[8.0, 2009.5], [71.0, 2532.0], [142.0, 1929.0], [74.0, 3097.0], [150.0, 4011.0], [79.0, 2456.5], [76.0, 2978.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[142.0, 1609.0], [150.0, 3686.0], [79.0, 1723.0], [76.0, 2575.0], [23.0, 5023.0], [127.0, 5023.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 150.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.5, "minX": 1.71673326E12, "maxY": 12.5, "series": [{"data": [[1.71673326E12, 12.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673326E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.133333333333334, "minX": 1.71673326E12, "maxY": 6.366666666666666, "series": [{"data": [[1.71673326E12, 6.366666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71673326E12, 6.133333333333334]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673326E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8833333333333333, "minX": 1.71673326E12, "maxY": 2.5, "series": [{"data": [[1.71673326E12, 0.8833333333333333]], "isOverall": false, "label": "Get all patients-failure", "isController": false}, {"data": [[1.71673326E12, 1.6166666666666667]], "isOverall": false, "label": "Get all patients-success", "isController": false}, {"data": [[1.71673326E12, 1.55]], "isOverall": false, "label": "Create prescription-success", "isController": false}, {"data": [[1.71673326E12, 0.95]], "isOverall": false, "label": "Create prescription-failure", "isController": false}, {"data": [[1.71673326E12, 1.5833333333333333]], "isOverall": false, "label": "Release drug-success", "isController": false}, {"data": [[1.71673326E12, 2.5]], "isOverall": false, "label": "Create Doctor-failure", "isController": false}, {"data": [[1.71673326E12, 0.9166666666666666]], "isOverall": false, "label": "Release drug-failure", "isController": false}, {"data": [[1.71673326E12, 0.8833333333333333]], "isOverall": false, "label": "Create patient-failure", "isController": false}, {"data": [[1.71673326E12, 1.6166666666666667]], "isOverall": false, "label": "Create patient-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673326E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.133333333333334, "minX": 1.71673326E12, "maxY": 6.366666666666666, "series": [{"data": [[1.71673326E12, 6.366666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71673326E12, 6.133333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673326E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

