/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1364.0, "minX": 0.0, "maxY": 4101.0, "series": [{"data": [[0.0, 1776.0], [0.1, 1776.0], [0.2, 1776.0], [0.3, 1776.0], [0.4, 1776.0], [0.5, 1785.0], [0.6, 1785.0], [0.7, 1785.0], [0.8, 1785.0], [0.9, 1785.0], [1.0, 1828.0], [1.1, 1828.0], [1.2, 1828.0], [1.3, 1828.0], [1.4, 1828.0], [1.5, 1829.0], [1.6, 1829.0], [1.7, 1829.0], [1.8, 1829.0], [1.9, 1829.0], [2.0, 1839.0], [2.1, 1839.0], [2.2, 1839.0], [2.3, 1839.0], [2.4, 1839.0], [2.5, 1889.0], [2.6, 1889.0], [2.7, 1889.0], [2.8, 1889.0], [2.9, 1889.0], [3.0, 1891.0], [3.1, 1891.0], [3.2, 1891.0], [3.3, 1891.0], [3.4, 1891.0], [3.5, 1898.0], [3.6, 1898.0], [3.7, 1898.0], [3.8, 1898.0], [3.9, 1898.0], [4.0, 1903.0], [4.1, 1903.0], [4.2, 1903.0], [4.3, 1903.0], [4.4, 1903.0], [4.5, 1904.0], [4.6, 1904.0], [4.7, 1904.0], [4.8, 1904.0], [4.9, 1904.0], [5.0, 1907.0], [5.1, 1907.0], [5.2, 1907.0], [5.3, 1907.0], [5.4, 1907.0], [5.5, 1910.0], [5.6, 1910.0], [5.7, 1910.0], [5.8, 1910.0], [5.9, 1910.0], [6.0, 1926.0], [6.1, 1926.0], [6.2, 1926.0], [6.3, 1926.0], [6.4, 1926.0], [6.5, 1940.0], [6.6, 1940.0], [6.7, 1940.0], [6.8, 1940.0], [6.9, 1940.0], [7.0, 1959.0], [7.1, 1959.0], [7.2, 1959.0], [7.3, 1959.0], [7.4, 1959.0], [7.5, 1959.0], [7.6, 1959.0], [7.7, 1959.0], [7.8, 1959.0], [7.9, 1959.0], [8.0, 1965.0], [8.1, 1965.0], [8.2, 1965.0], [8.3, 1965.0], [8.4, 1965.0], [8.5, 1966.0], [8.6, 1966.0], [8.7, 1966.0], [8.8, 1966.0], [8.9, 1966.0], [9.0, 1968.0], [9.1, 1968.0], [9.2, 1968.0], [9.3, 1968.0], [9.4, 1968.0], [9.5, 1976.0], [9.6, 1976.0], [9.7, 1976.0], [9.8, 1976.0], [9.9, 1976.0], [10.0, 1982.0], [10.1, 1982.0], [10.2, 1982.0], [10.3, 1982.0], [10.4, 1982.0], [10.5, 1987.0], [10.6, 1987.0], [10.7, 1987.0], [10.8, 1987.0], [10.9, 1987.0], [11.0, 1991.0], [11.1, 1991.0], [11.2, 1991.0], [11.3, 1991.0], [11.4, 1991.0], [11.5, 1997.0], [11.6, 1997.0], [11.7, 1997.0], [11.8, 1997.0], [11.9, 1997.0], [12.0, 1998.0], [12.1, 1998.0], [12.2, 1998.0], [12.3, 1998.0], [12.4, 1998.0], [12.5, 2017.0], [12.6, 2017.0], [12.7, 2017.0], [12.8, 2017.0], [12.9, 2017.0], [13.0, 2030.0], [13.1, 2030.0], [13.2, 2030.0], [13.3, 2030.0], [13.4, 2030.0], [13.5, 2044.0], [13.6, 2044.0], [13.7, 2044.0], [13.8, 2044.0], [13.9, 2044.0], [14.0, 2067.0], [14.1, 2067.0], [14.2, 2067.0], [14.3, 2067.0], [14.4, 2067.0], [14.5, 2075.0], [14.6, 2075.0], [14.7, 2075.0], [14.8, 2075.0], [14.9, 2075.0], [15.0, 2075.0], [15.1, 2075.0], [15.2, 2075.0], [15.3, 2075.0], [15.4, 2075.0], [15.5, 2082.0], [15.6, 2082.0], [15.7, 2082.0], [15.8, 2082.0], [15.9, 2082.0], [16.0, 2085.0], [16.1, 2085.0], [16.2, 2085.0], [16.3, 2085.0], [16.4, 2085.0], [16.5, 2126.0], [16.6, 2126.0], [16.7, 2126.0], [16.8, 2126.0], [16.9, 2126.0], [17.0, 2128.0], [17.1, 2128.0], [17.2, 2128.0], [17.3, 2128.0], [17.4, 2128.0], [17.5, 2166.0], [17.6, 2166.0], [17.7, 2166.0], [17.8, 2166.0], [17.9, 2166.0], [18.0, 2178.0], [18.1, 2178.0], [18.2, 2178.0], [18.3, 2178.0], [18.4, 2178.0], [18.5, 2197.0], [18.6, 2197.0], [18.7, 2197.0], [18.8, 2197.0], [18.9, 2197.0], [19.0, 2200.0], [19.1, 2200.0], [19.2, 2200.0], [19.3, 2200.0], [19.4, 2200.0], [19.5, 2207.0], [19.6, 2207.0], [19.7, 2207.0], [19.8, 2207.0], [19.9, 2207.0], [20.0, 2209.0], [20.1, 2209.0], [20.2, 2209.0], [20.3, 2209.0], [20.4, 2209.0], [20.5, 2230.0], [20.6, 2230.0], [20.7, 2230.0], [20.8, 2230.0], [20.9, 2230.0], [21.0, 2230.0], [21.1, 2230.0], [21.2, 2230.0], [21.3, 2230.0], [21.4, 2230.0], [21.5, 2234.0], [21.6, 2234.0], [21.7, 2234.0], [21.8, 2234.0], [21.9, 2234.0], [22.0, 2235.0], [22.1, 2235.0], [22.2, 2235.0], [22.3, 2235.0], [22.4, 2235.0], [22.5, 2238.0], [22.6, 2238.0], [22.7, 2238.0], [22.8, 2238.0], [22.9, 2238.0], [23.0, 2242.0], [23.1, 2242.0], [23.2, 2242.0], [23.3, 2242.0], [23.4, 2242.0], [23.5, 2252.0], [23.6, 2252.0], [23.7, 2252.0], [23.8, 2252.0], [23.9, 2252.0], [24.0, 2260.0], [24.1, 2260.0], [24.2, 2260.0], [24.3, 2260.0], [24.4, 2260.0], [24.5, 2263.0], [24.6, 2263.0], [24.7, 2263.0], [24.8, 2263.0], [24.9, 2263.0], [25.0, 2267.0], [25.1, 2267.0], [25.2, 2267.0], [25.3, 2267.0], [25.4, 2267.0], [25.5, 2273.0], [25.6, 2273.0], [25.7, 2273.0], [25.8, 2273.0], [25.9, 2273.0], [26.0, 2278.0], [26.1, 2278.0], [26.2, 2278.0], [26.3, 2278.0], [26.4, 2278.0], [26.5, 2287.0], [26.6, 2287.0], [26.7, 2287.0], [26.8, 2287.0], [26.9, 2287.0], [27.0, 2299.0], [27.1, 2299.0], [27.2, 2299.0], [27.3, 2299.0], [27.4, 2299.0], [27.5, 2300.0], [27.6, 2300.0], [27.7, 2300.0], [27.8, 2300.0], [27.9, 2300.0], [28.0, 2300.0], [28.1, 2300.0], [28.2, 2300.0], [28.3, 2300.0], [28.4, 2300.0], [28.5, 2326.0], [28.6, 2326.0], [28.7, 2326.0], [28.8, 2326.0], [28.9, 2326.0], [29.0, 2343.0], [29.1, 2343.0], [29.2, 2343.0], [29.3, 2343.0], [29.4, 2343.0], [29.5, 2349.0], [29.6, 2349.0], [29.7, 2349.0], [29.8, 2349.0], [29.9, 2349.0], [30.0, 2362.0], [30.1, 2362.0], [30.2, 2362.0], [30.3, 2362.0], [30.4, 2362.0], [30.5, 2374.0], [30.6, 2374.0], [30.7, 2374.0], [30.8, 2374.0], [30.9, 2374.0], [31.0, 2377.0], [31.1, 2377.0], [31.2, 2377.0], [31.3, 2377.0], [31.4, 2377.0], [31.5, 2400.0], [31.6, 2400.0], [31.7, 2400.0], [31.8, 2400.0], [31.9, 2400.0], [32.0, 2403.0], [32.1, 2403.0], [32.2, 2403.0], [32.3, 2403.0], [32.4, 2403.0], [32.5, 2404.0], [32.6, 2404.0], [32.7, 2404.0], [32.8, 2404.0], [32.9, 2404.0], [33.0, 2410.0], [33.1, 2410.0], [33.2, 2410.0], [33.3, 2410.0], [33.4, 2410.0], [33.5, 2413.0], [33.6, 2413.0], [33.7, 2413.0], [33.8, 2413.0], [33.9, 2413.0], [34.0, 2413.0], [34.1, 2413.0], [34.2, 2413.0], [34.3, 2413.0], [34.4, 2413.0], [34.5, 2416.0], [34.6, 2416.0], [34.7, 2416.0], [34.8, 2416.0], [34.9, 2416.0], [35.0, 2417.0], [35.1, 2417.0], [35.2, 2417.0], [35.3, 2417.0], [35.4, 2417.0], [35.5, 2417.0], [35.6, 2417.0], [35.7, 2417.0], [35.8, 2417.0], [35.9, 2417.0], [36.0, 2418.0], [36.1, 2418.0], [36.2, 2418.0], [36.3, 2418.0], [36.4, 2418.0], [36.5, 2421.0], [36.6, 2421.0], [36.7, 2421.0], [36.8, 2421.0], [36.9, 2421.0], [37.0, 2423.0], [37.1, 2423.0], [37.2, 2423.0], [37.3, 2423.0], [37.4, 2423.0], [37.5, 2423.0], [37.6, 2423.0], [37.7, 2423.0], [37.8, 2423.0], [37.9, 2423.0], [38.0, 2427.0], [38.1, 2427.0], [38.2, 2427.0], [38.3, 2427.0], [38.4, 2427.0], [38.5, 2431.0], [38.6, 2431.0], [38.7, 2431.0], [38.8, 2431.0], [38.9, 2431.0], [39.0, 2437.0], [39.1, 2437.0], [39.2, 2437.0], [39.3, 2437.0], [39.4, 2437.0], [39.5, 2447.0], [39.6, 2447.0], [39.7, 2447.0], [39.8, 2447.0], [39.9, 2447.0], [40.0, 2450.0], [40.1, 2450.0], [40.2, 2450.0], [40.3, 2450.0], [40.4, 2450.0], [40.5, 2451.0], [40.6, 2451.0], [40.7, 2451.0], [40.8, 2451.0], [40.9, 2451.0], [41.0, 2451.0], [41.1, 2451.0], [41.2, 2451.0], [41.3, 2451.0], [41.4, 2451.0], [41.5, 2472.0], [41.6, 2472.0], [41.7, 2472.0], [41.8, 2472.0], [41.9, 2472.0], [42.0, 2476.0], [42.1, 2476.0], [42.2, 2476.0], [42.3, 2476.0], [42.4, 2476.0], [42.5, 2489.0], [42.6, 2489.0], [42.7, 2489.0], [42.8, 2489.0], [42.9, 2489.0], [43.0, 2503.0], [43.1, 2503.0], [43.2, 2503.0], [43.3, 2503.0], [43.4, 2503.0], [43.5, 2511.0], [43.6, 2511.0], [43.7, 2511.0], [43.8, 2511.0], [43.9, 2511.0], [44.0, 2513.0], [44.1, 2513.0], [44.2, 2513.0], [44.3, 2513.0], [44.4, 2513.0], [44.5, 2525.0], [44.6, 2525.0], [44.7, 2525.0], [44.8, 2525.0], [44.9, 2525.0], [45.0, 2525.0], [45.1, 2525.0], [45.2, 2525.0], [45.3, 2525.0], [45.4, 2525.0], [45.5, 2529.0], [45.6, 2529.0], [45.7, 2529.0], [45.8, 2529.0], [45.9, 2529.0], [46.0, 2530.0], [46.1, 2530.0], [46.2, 2530.0], [46.3, 2530.0], [46.4, 2530.0], [46.5, 2532.0], [46.6, 2532.0], [46.7, 2532.0], [46.8, 2532.0], [46.9, 2532.0], [47.0, 2537.0], [47.1, 2537.0], [47.2, 2537.0], [47.3, 2537.0], [47.4, 2537.0], [47.5, 2544.0], [47.6, 2544.0], [47.7, 2544.0], [47.8, 2544.0], [47.9, 2544.0], [48.0, 2554.0], [48.1, 2554.0], [48.2, 2554.0], [48.3, 2554.0], [48.4, 2554.0], [48.5, 2563.0], [48.6, 2563.0], [48.7, 2563.0], [48.8, 2563.0], [48.9, 2563.0], [49.0, 2571.0], [49.1, 2571.0], [49.2, 2571.0], [49.3, 2571.0], [49.4, 2571.0], [49.5, 2588.0], [49.6, 2588.0], [49.7, 2588.0], [49.8, 2588.0], [49.9, 2588.0], [50.0, 2749.0], [50.1, 2749.0], [50.2, 2749.0], [50.3, 2749.0], [50.4, 2749.0], [50.5, 2772.0], [50.6, 2772.0], [50.7, 2772.0], [50.8, 2772.0], [50.9, 2772.0], [51.0, 2807.0], [51.1, 2807.0], [51.2, 2807.0], [51.3, 2807.0], [51.4, 2807.0], [51.5, 3210.0], [51.6, 3210.0], [51.7, 3210.0], [51.8, 3210.0], [51.9, 3210.0], [52.0, 3219.0], [52.1, 3219.0], [52.2, 3219.0], [52.3, 3219.0], [52.4, 3219.0], [52.5, 3223.0], [52.6, 3223.0], [52.7, 3223.0], [52.8, 3223.0], [52.9, 3223.0], [53.0, 3248.0], [53.1, 3248.0], [53.2, 3248.0], [53.3, 3248.0], [53.4, 3248.0], [53.5, 3257.0], [53.6, 3257.0], [53.7, 3257.0], [53.8, 3257.0], [53.9, 3257.0], [54.0, 3260.0], [54.1, 3260.0], [54.2, 3260.0], [54.3, 3260.0], [54.4, 3260.0], [54.5, 3274.0], [54.6, 3274.0], [54.7, 3274.0], [54.8, 3274.0], [54.9, 3274.0], [55.0, 3283.0], [55.1, 3283.0], [55.2, 3283.0], [55.3, 3283.0], [55.4, 3283.0], [55.5, 3285.0], [55.6, 3285.0], [55.7, 3285.0], [55.8, 3285.0], [55.9, 3285.0], [56.0, 3287.0], [56.1, 3287.0], [56.2, 3287.0], [56.3, 3287.0], [56.4, 3287.0], [56.5, 3289.0], [56.6, 3289.0], [56.7, 3289.0], [56.8, 3289.0], [56.9, 3289.0], [57.0, 3292.0], [57.1, 3292.0], [57.2, 3292.0], [57.3, 3292.0], [57.4, 3292.0], [57.5, 3292.0], [57.6, 3292.0], [57.7, 3292.0], [57.8, 3292.0], [57.9, 3292.0], [58.0, 3293.0], [58.1, 3293.0], [58.2, 3293.0], [58.3, 3293.0], [58.4, 3293.0], [58.5, 3297.0], [58.6, 3297.0], [58.7, 3297.0], [58.8, 3297.0], [58.9, 3297.0], [59.0, 3299.0], [59.1, 3299.0], [59.2, 3299.0], [59.3, 3299.0], [59.4, 3299.0], [59.5, 3300.0], [59.6, 3300.0], [59.7, 3300.0], [59.8, 3300.0], [59.9, 3300.0], [60.0, 3307.0], [60.1, 3307.0], [60.2, 3307.0], [60.3, 3307.0], [60.4, 3307.0], [60.5, 3307.0], [60.6, 3307.0], [60.7, 3307.0], [60.8, 3307.0], [60.9, 3307.0], [61.0, 3308.0], [61.1, 3308.0], [61.2, 3308.0], [61.3, 3308.0], [61.4, 3308.0], [61.5, 3309.0], [61.6, 3309.0], [61.7, 3309.0], [61.8, 3309.0], [61.9, 3309.0], [62.0, 3311.0], [62.1, 3311.0], [62.2, 3311.0], [62.3, 3311.0], [62.4, 3311.0], [62.5, 3316.0], [62.6, 3316.0], [62.7, 3316.0], [62.8, 3316.0], [62.9, 3316.0], [63.0, 3316.0], [63.1, 3316.0], [63.2, 3316.0], [63.3, 3316.0], [63.4, 3316.0], [63.5, 3318.0], [63.6, 3318.0], [63.7, 3318.0], [63.8, 3318.0], [63.9, 3318.0], [64.0, 3325.0], [64.1, 3325.0], [64.2, 3325.0], [64.3, 3325.0], [64.4, 3325.0], [64.5, 3326.0], [64.6, 3326.0], [64.7, 3326.0], [64.8, 3326.0], [64.9, 3326.0], [65.0, 3327.0], [65.1, 3327.0], [65.2, 3327.0], [65.3, 3327.0], [65.4, 3327.0], [65.5, 3327.0], [65.6, 3327.0], [65.7, 3327.0], [65.8, 3327.0], [65.9, 3327.0], [66.0, 3329.0], [66.1, 3329.0], [66.2, 3329.0], [66.3, 3329.0], [66.4, 3329.0], [66.5, 3330.0], [66.6, 3330.0], [66.7, 3330.0], [66.8, 3330.0], [66.9, 3330.0], [67.0, 3333.0], [67.1, 3333.0], [67.2, 3333.0], [67.3, 3333.0], [67.4, 3333.0], [67.5, 3338.0], [67.6, 3338.0], [67.7, 3338.0], [67.8, 3338.0], [67.9, 3338.0], [68.0, 3347.0], [68.1, 3347.0], [68.2, 3347.0], [68.3, 3347.0], [68.4, 3347.0], [68.5, 3348.0], [68.6, 3348.0], [68.7, 3348.0], [68.8, 3348.0], [68.9, 3348.0], [69.0, 3350.0], [69.1, 3350.0], [69.2, 3350.0], [69.3, 3350.0], [69.4, 3350.0], [69.5, 3353.0], [69.6, 3353.0], [69.7, 3353.0], [69.8, 3353.0], [69.9, 3353.0], [70.0, 3354.0], [70.1, 3354.0], [70.2, 3354.0], [70.3, 3354.0], [70.4, 3354.0], [70.5, 3357.0], [70.6, 3357.0], [70.7, 3357.0], [70.8, 3357.0], [70.9, 3357.0], [71.0, 3357.0], [71.1, 3357.0], [71.2, 3357.0], [71.3, 3357.0], [71.4, 3357.0], [71.5, 3365.0], [71.6, 3365.0], [71.7, 3365.0], [71.8, 3365.0], [71.9, 3365.0], [72.0, 3366.0], [72.1, 3366.0], [72.2, 3366.0], [72.3, 3366.0], [72.4, 3366.0], [72.5, 3367.0], [72.6, 3367.0], [72.7, 3367.0], [72.8, 3367.0], [72.9, 3367.0], [73.0, 3370.0], [73.1, 3370.0], [73.2, 3370.0], [73.3, 3370.0], [73.4, 3370.0], [73.5, 3372.0], [73.6, 3372.0], [73.7, 3372.0], [73.8, 3372.0], [73.9, 3372.0], [74.0, 3373.0], [74.1, 3373.0], [74.2, 3373.0], [74.3, 3373.0], [74.4, 3373.0], [74.5, 3375.0], [74.6, 3375.0], [74.7, 3375.0], [74.8, 3375.0], [74.9, 3375.0], [75.0, 3377.0], [75.1, 3377.0], [75.2, 3377.0], [75.3, 3377.0], [75.4, 3377.0], [75.5, 3377.0], [75.6, 3377.0], [75.7, 3377.0], [75.8, 3377.0], [75.9, 3377.0], [76.0, 3377.0], [76.1, 3377.0], [76.2, 3377.0], [76.3, 3377.0], [76.4, 3377.0], [76.5, 3379.0], [76.6, 3379.0], [76.7, 3379.0], [76.8, 3379.0], [76.9, 3379.0], [77.0, 3379.0], [77.1, 3379.0], [77.2, 3379.0], [77.3, 3379.0], [77.4, 3379.0], [77.5, 3380.0], [77.6, 3380.0], [77.7, 3380.0], [77.8, 3380.0], [77.9, 3380.0], [78.0, 3387.0], [78.1, 3387.0], [78.2, 3387.0], [78.3, 3387.0], [78.4, 3387.0], [78.5, 3388.0], [78.6, 3388.0], [78.7, 3388.0], [78.8, 3388.0], [78.9, 3388.0], [79.0, 3389.0], [79.1, 3389.0], [79.2, 3389.0], [79.3, 3389.0], [79.4, 3389.0], [79.5, 3405.0], [79.6, 3405.0], [79.7, 3405.0], [79.8, 3405.0], [79.9, 3405.0], [80.0, 3412.0], [80.1, 3412.0], [80.2, 3412.0], [80.3, 3412.0], [80.4, 3412.0], [80.5, 3417.0], [80.6, 3417.0], [80.7, 3417.0], [80.8, 3417.0], [80.9, 3417.0], [81.0, 3417.0], [81.1, 3417.0], [81.2, 3417.0], [81.3, 3417.0], [81.4, 3417.0], [81.5, 3424.0], [81.6, 3424.0], [81.7, 3424.0], [81.8, 3424.0], [81.9, 3424.0], [82.0, 3426.0], [82.1, 3426.0], [82.2, 3426.0], [82.3, 3426.0], [82.4, 3426.0], [82.5, 3428.0], [82.6, 3428.0], [82.7, 3428.0], [82.8, 3428.0], [82.9, 3428.0], [83.0, 3432.0], [83.1, 3432.0], [83.2, 3432.0], [83.3, 3432.0], [83.4, 3432.0], [83.5, 3435.0], [83.6, 3435.0], [83.7, 3435.0], [83.8, 3435.0], [83.9, 3435.0], [84.0, 3436.0], [84.1, 3436.0], [84.2, 3436.0], [84.3, 3436.0], [84.4, 3436.0], [84.5, 3437.0], [84.6, 3437.0], [84.7, 3437.0], [84.8, 3437.0], [84.9, 3437.0], [85.0, 3439.0], [85.1, 3439.0], [85.2, 3439.0], [85.3, 3439.0], [85.4, 3439.0], [85.5, 3445.0], [85.6, 3445.0], [85.7, 3445.0], [85.8, 3445.0], [85.9, 3445.0], [86.0, 3447.0], [86.1, 3447.0], [86.2, 3447.0], [86.3, 3447.0], [86.4, 3447.0], [86.5, 3449.0], [86.6, 3449.0], [86.7, 3449.0], [86.8, 3449.0], [86.9, 3449.0], [87.0, 3452.0], [87.1, 3452.0], [87.2, 3452.0], [87.3, 3452.0], [87.4, 3452.0], [87.5, 3458.0], [87.6, 3458.0], [87.7, 3458.0], [87.8, 3458.0], [87.9, 3458.0], [88.0, 3459.0], [88.1, 3459.0], [88.2, 3459.0], [88.3, 3459.0], [88.4, 3459.0], [88.5, 3461.0], [88.6, 3461.0], [88.7, 3461.0], [88.8, 3461.0], [88.9, 3461.0], [89.0, 3471.0], [89.1, 3471.0], [89.2, 3471.0], [89.3, 3471.0], [89.4, 3471.0], [89.5, 3472.0], [89.6, 3472.0], [89.7, 3472.0], [89.8, 3472.0], [89.9, 3472.0], [90.0, 3476.0], [90.1, 3476.0], [90.2, 3476.0], [90.3, 3476.0], [90.4, 3476.0], [90.5, 3478.0], [90.6, 3478.0], [90.7, 3478.0], [90.8, 3478.0], [90.9, 3478.0], [91.0, 3479.0], [91.1, 3479.0], [91.2, 3479.0], [91.3, 3479.0], [91.4, 3479.0], [91.5, 3485.0], [91.6, 3485.0], [91.7, 3485.0], [91.8, 3485.0], [91.9, 3485.0], [92.0, 3502.0], [92.1, 3502.0], [92.2, 3502.0], [92.3, 3502.0], [92.4, 3502.0], [92.5, 3510.0], [92.6, 3510.0], [92.7, 3510.0], [92.8, 3510.0], [92.9, 3510.0], [93.0, 3513.0], [93.1, 3513.0], [93.2, 3513.0], [93.3, 3513.0], [93.4, 3513.0], [93.5, 3550.0], [93.6, 3550.0], [93.7, 3550.0], [93.8, 3550.0], [93.9, 3550.0], [94.0, 3612.0], [94.1, 3612.0], [94.2, 3612.0], [94.3, 3612.0], [94.4, 3612.0], [94.5, 3670.0], [94.6, 3670.0], [94.7, 3670.0], [94.8, 3670.0], [94.9, 3670.0], [95.0, 3692.0], [95.1, 3692.0], [95.2, 3692.0], [95.3, 3692.0], [95.4, 3692.0], [95.5, 3701.0], [95.6, 3701.0], [95.7, 3701.0], [95.8, 3701.0], [95.9, 3701.0], [96.0, 3733.0], [96.1, 3733.0], [96.2, 3733.0], [96.3, 3733.0], [96.4, 3733.0], [96.5, 3749.0], [96.6, 3749.0], [96.7, 3749.0], [96.8, 3749.0], [96.9, 3749.0], [97.0, 3766.0], [97.1, 3766.0], [97.2, 3766.0], [97.3, 3766.0], [97.4, 3766.0], [97.5, 3798.0], [97.6, 3798.0], [97.7, 3798.0], [97.8, 3798.0], [97.9, 3798.0], [98.0, 3808.0], [98.1, 3808.0], [98.2, 3808.0], [98.3, 3808.0], [98.4, 3808.0], [98.5, 3825.0], [98.6, 3825.0], [98.7, 3825.0], [98.8, 3825.0], [98.9, 3825.0], [99.0, 3828.0], [99.1, 3828.0], [99.2, 3828.0], [99.3, 3828.0], [99.4, 3828.0], [99.5, 3901.0], [99.6, 3901.0], [99.7, 3901.0], [99.8, 3901.0], [99.9, 3901.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[0.0, 1510.0], [0.1, 1510.0], [0.2, 1510.0], [0.3, 1510.0], [0.4, 1510.0], [0.5, 1518.0], [0.6, 1518.0], [0.7, 1518.0], [0.8, 1518.0], [0.9, 1518.0], [1.0, 1520.0], [1.1, 1520.0], [1.2, 1520.0], [1.3, 1520.0], [1.4, 1520.0], [1.5, 1526.0], [1.6, 1526.0], [1.7, 1526.0], [1.8, 1526.0], [1.9, 1526.0], [2.0, 1548.0], [2.1, 1548.0], [2.2, 1548.0], [2.3, 1548.0], [2.4, 1548.0], [2.5, 1568.0], [2.6, 1568.0], [2.7, 1568.0], [2.8, 1568.0], [2.9, 1568.0], [3.0, 1569.0], [3.1, 1569.0], [3.2, 1569.0], [3.3, 1569.0], [3.4, 1569.0], [3.5, 1570.0], [3.6, 1570.0], [3.7, 1570.0], [3.8, 1570.0], [3.9, 1570.0], [4.0, 1574.0], [4.1, 1574.0], [4.2, 1574.0], [4.3, 1574.0], [4.4, 1574.0], [4.5, 1582.0], [4.6, 1582.0], [4.7, 1582.0], [4.8, 1582.0], [4.9, 1582.0], [5.0, 1596.0], [5.1, 1596.0], [5.2, 1596.0], [5.3, 1596.0], [5.4, 1596.0], [5.5, 1615.0], [5.6, 1615.0], [5.7, 1615.0], [5.8, 1615.0], [5.9, 1615.0], [6.0, 1617.0], [6.1, 1617.0], [6.2, 1617.0], [6.3, 1617.0], [6.4, 1617.0], [6.5, 1618.0], [6.6, 1618.0], [6.7, 1618.0], [6.8, 1618.0], [6.9, 1618.0], [7.0, 1630.0], [7.1, 1630.0], [7.2, 1630.0], [7.3, 1630.0], [7.4, 1630.0], [7.5, 1635.0], [7.6, 1635.0], [7.7, 1635.0], [7.8, 1635.0], [7.9, 1635.0], [8.0, 1657.0], [8.1, 1657.0], [8.2, 1657.0], [8.3, 1657.0], [8.4, 1657.0], [8.5, 1658.0], [8.6, 1658.0], [8.7, 1658.0], [8.8, 1658.0], [8.9, 1658.0], [9.0, 1660.0], [9.1, 1660.0], [9.2, 1660.0], [9.3, 1660.0], [9.4, 1660.0], [9.5, 1666.0], [9.6, 1666.0], [9.7, 1666.0], [9.8, 1666.0], [9.9, 1666.0], [10.0, 1672.0], [10.1, 1672.0], [10.2, 1672.0], [10.3, 1672.0], [10.4, 1672.0], [10.5, 1683.0], [10.6, 1683.0], [10.7, 1683.0], [10.8, 1683.0], [10.9, 1683.0], [11.0, 1690.0], [11.1, 1690.0], [11.2, 1690.0], [11.3, 1690.0], [11.4, 1690.0], [11.5, 1692.0], [11.6, 1692.0], [11.7, 1692.0], [11.8, 1692.0], [11.9, 1692.0], [12.0, 1699.0], [12.1, 1699.0], [12.2, 1699.0], [12.3, 1699.0], [12.4, 1699.0], [12.5, 1704.0], [12.6, 1704.0], [12.7, 1704.0], [12.8, 1704.0], [12.9, 1704.0], [13.0, 1717.0], [13.1, 1717.0], [13.2, 1717.0], [13.3, 1717.0], [13.4, 1717.0], [13.5, 1726.0], [13.6, 1726.0], [13.7, 1726.0], [13.8, 1726.0], [13.9, 1726.0], [14.0, 1750.0], [14.1, 1750.0], [14.2, 1750.0], [14.3, 1750.0], [14.4, 1750.0], [14.5, 1752.0], [14.6, 1752.0], [14.7, 1752.0], [14.8, 1752.0], [14.9, 1752.0], [15.0, 1753.0], [15.1, 1753.0], [15.2, 1753.0], [15.3, 1753.0], [15.4, 1753.0], [15.5, 1759.0], [15.6, 1759.0], [15.7, 1759.0], [15.8, 1759.0], [15.9, 1759.0], [16.0, 1767.0], [16.1, 1767.0], [16.2, 1767.0], [16.3, 1767.0], [16.4, 1767.0], [16.5, 1780.0], [16.6, 1780.0], [16.7, 1780.0], [16.8, 1780.0], [16.9, 1780.0], [17.0, 1785.0], [17.1, 1785.0], [17.2, 1785.0], [17.3, 1785.0], [17.4, 1785.0], [17.5, 1788.0], [17.6, 1788.0], [17.7, 1788.0], [17.8, 1788.0], [17.9, 1788.0], [18.0, 1794.0], [18.1, 1794.0], [18.2, 1794.0], [18.3, 1794.0], [18.4, 1794.0], [18.5, 1800.0], [18.6, 1800.0], [18.7, 1800.0], [18.8, 1800.0], [18.9, 1800.0], [19.0, 1802.0], [19.1, 1802.0], [19.2, 1802.0], [19.3, 1802.0], [19.4, 1802.0], [19.5, 1802.0], [19.6, 1802.0], [19.7, 1802.0], [19.8, 1802.0], [19.9, 1802.0], [20.0, 1804.0], [20.1, 1804.0], [20.2, 1804.0], [20.3, 1804.0], [20.4, 1804.0], [20.5, 1805.0], [20.6, 1805.0], [20.7, 1805.0], [20.8, 1805.0], [20.9, 1805.0], [21.0, 1809.0], [21.1, 1809.0], [21.2, 1809.0], [21.3, 1809.0], [21.4, 1809.0], [21.5, 1820.0], [21.6, 1820.0], [21.7, 1820.0], [21.8, 1820.0], [21.9, 1820.0], [22.0, 1821.0], [22.1, 1821.0], [22.2, 1821.0], [22.3, 1821.0], [22.4, 1821.0], [22.5, 1823.0], [22.6, 1823.0], [22.7, 1823.0], [22.8, 1823.0], [22.9, 1823.0], [23.0, 1825.0], [23.1, 1825.0], [23.2, 1825.0], [23.3, 1825.0], [23.4, 1825.0], [23.5, 1831.0], [23.6, 1831.0], [23.7, 1831.0], [23.8, 1831.0], [23.9, 1831.0], [24.0, 1841.0], [24.1, 1841.0], [24.2, 1841.0], [24.3, 1841.0], [24.4, 1841.0], [24.5, 1853.0], [24.6, 1853.0], [24.7, 1853.0], [24.8, 1853.0], [24.9, 1853.0], [25.0, 1864.0], [25.1, 1864.0], [25.2, 1864.0], [25.3, 1864.0], [25.4, 1864.0], [25.5, 1868.0], [25.6, 1868.0], [25.7, 1868.0], [25.8, 1868.0], [25.9, 1868.0], [26.0, 1876.0], [26.1, 1876.0], [26.2, 1876.0], [26.3, 1876.0], [26.4, 1876.0], [26.5, 1877.0], [26.6, 1877.0], [26.7, 1877.0], [26.8, 1877.0], [26.9, 1877.0], [27.0, 1879.0], [27.1, 1879.0], [27.2, 1879.0], [27.3, 1879.0], [27.4, 1879.0], [27.5, 1882.0], [27.6, 1882.0], [27.7, 1882.0], [27.8, 1882.0], [27.9, 1882.0], [28.0, 1886.0], [28.1, 1886.0], [28.2, 1886.0], [28.3, 1886.0], [28.4, 1886.0], [28.5, 1890.0], [28.6, 1890.0], [28.7, 1890.0], [28.8, 1890.0], [28.9, 1890.0], [29.0, 1894.0], [29.1, 1894.0], [29.2, 1894.0], [29.3, 1894.0], [29.4, 1894.0], [29.5, 1896.0], [29.6, 1896.0], [29.7, 1896.0], [29.8, 1896.0], [29.9, 1896.0], [30.0, 1896.0], [30.1, 1896.0], [30.2, 1896.0], [30.3, 1896.0], [30.4, 1896.0], [30.5, 1899.0], [30.6, 1899.0], [30.7, 1899.0], [30.8, 1899.0], [30.9, 1899.0], [31.0, 1902.0], [31.1, 1902.0], [31.2, 1902.0], [31.3, 1902.0], [31.4, 1902.0], [31.5, 1906.0], [31.6, 1906.0], [31.7, 1906.0], [31.8, 1906.0], [31.9, 1906.0], [32.0, 1906.0], [32.1, 1906.0], [32.2, 1906.0], [32.3, 1906.0], [32.4, 1906.0], [32.5, 1907.0], [32.6, 1907.0], [32.7, 1907.0], [32.8, 1907.0], [32.9, 1907.0], [33.0, 1908.0], [33.1, 1908.0], [33.2, 1908.0], [33.3, 1908.0], [33.4, 1908.0], [33.5, 1913.0], [33.6, 1913.0], [33.7, 1913.0], [33.8, 1913.0], [33.9, 1913.0], [34.0, 1914.0], [34.1, 1914.0], [34.2, 1914.0], [34.3, 1914.0], [34.4, 1914.0], [34.5, 1914.0], [34.6, 1914.0], [34.7, 1914.0], [34.8, 1914.0], [34.9, 1914.0], [35.0, 1914.0], [35.1, 1914.0], [35.2, 1914.0], [35.3, 1914.0], [35.4, 1914.0], [35.5, 1915.0], [35.6, 1915.0], [35.7, 1915.0], [35.8, 1915.0], [35.9, 1915.0], [36.0, 1920.0], [36.1, 1920.0], [36.2, 1920.0], [36.3, 1920.0], [36.4, 1920.0], [36.5, 1923.0], [36.6, 1923.0], [36.7, 1923.0], [36.8, 1923.0], [36.9, 1923.0], [37.0, 1924.0], [37.1, 1924.0], [37.2, 1924.0], [37.3, 1924.0], [37.4, 1924.0], [37.5, 1925.0], [37.6, 1925.0], [37.7, 1925.0], [37.8, 1925.0], [37.9, 1925.0], [38.0, 1926.0], [38.1, 1926.0], [38.2, 1926.0], [38.3, 1926.0], [38.4, 1926.0], [38.5, 1929.0], [38.6, 1929.0], [38.7, 1929.0], [38.8, 1929.0], [38.9, 1929.0], [39.0, 1930.0], [39.1, 1930.0], [39.2, 1930.0], [39.3, 1930.0], [39.4, 1930.0], [39.5, 1932.0], [39.6, 1932.0], [39.7, 1932.0], [39.8, 1932.0], [39.9, 1932.0], [40.0, 1932.0], [40.1, 1932.0], [40.2, 1932.0], [40.3, 1932.0], [40.4, 1932.0], [40.5, 1939.0], [40.6, 1939.0], [40.7, 1939.0], [40.8, 1939.0], [40.9, 1939.0], [41.0, 1941.0], [41.1, 1941.0], [41.2, 1941.0], [41.3, 1941.0], [41.4, 1941.0], [41.5, 1947.0], [41.6, 1947.0], [41.7, 1947.0], [41.8, 1947.0], [41.9, 1947.0], [42.0, 1948.0], [42.1, 1948.0], [42.2, 1948.0], [42.3, 1948.0], [42.4, 1948.0], [42.5, 1950.0], [42.6, 1950.0], [42.7, 1950.0], [42.8, 1950.0], [42.9, 1950.0], [43.0, 1951.0], [43.1, 1951.0], [43.2, 1951.0], [43.3, 1951.0], [43.4, 1951.0], [43.5, 1952.0], [43.6, 1952.0], [43.7, 1952.0], [43.8, 1952.0], [43.9, 1952.0], [44.0, 1953.0], [44.1, 1953.0], [44.2, 1953.0], [44.3, 1953.0], [44.4, 1953.0], [44.5, 1955.0], [44.6, 1955.0], [44.7, 1955.0], [44.8, 1955.0], [44.9, 1955.0], [45.0, 1956.0], [45.1, 1956.0], [45.2, 1956.0], [45.3, 1956.0], [45.4, 1956.0], [45.5, 1960.0], [45.6, 1960.0], [45.7, 1960.0], [45.8, 1960.0], [45.9, 1960.0], [46.0, 1960.0], [46.1, 1960.0], [46.2, 1960.0], [46.3, 1960.0], [46.4, 1960.0], [46.5, 1961.0], [46.6, 1961.0], [46.7, 1961.0], [46.8, 1961.0], [46.9, 1961.0], [47.0, 1961.0], [47.1, 1961.0], [47.2, 1961.0], [47.3, 1961.0], [47.4, 1961.0], [47.5, 1963.0], [47.6, 1963.0], [47.7, 1963.0], [47.8, 1963.0], [47.9, 1963.0], [48.0, 1964.0], [48.1, 1964.0], [48.2, 1964.0], [48.3, 1964.0], [48.4, 1964.0], [48.5, 1965.0], [48.6, 1965.0], [48.7, 1965.0], [48.8, 1965.0], [48.9, 1965.0], [49.0, 1967.0], [49.1, 1967.0], [49.2, 1967.0], [49.3, 1967.0], [49.4, 1967.0], [49.5, 1970.0], [49.6, 1970.0], [49.7, 1970.0], [49.8, 1970.0], [49.9, 1970.0], [50.0, 1970.0], [50.1, 1970.0], [50.2, 1970.0], [50.3, 1970.0], [50.4, 1970.0], [50.5, 1971.0], [50.6, 1971.0], [50.7, 1971.0], [50.8, 1971.0], [50.9, 1971.0], [51.0, 1974.0], [51.1, 1974.0], [51.2, 1974.0], [51.3, 1974.0], [51.4, 1974.0], [51.5, 1976.0], [51.6, 1976.0], [51.7, 1976.0], [51.8, 1976.0], [51.9, 1976.0], [52.0, 1977.0], [52.1, 1977.0], [52.2, 1977.0], [52.3, 1977.0], [52.4, 1977.0], [52.5, 1977.0], [52.6, 1977.0], [52.7, 1977.0], [52.8, 1977.0], [52.9, 1977.0], [53.0, 1977.0], [53.1, 1977.0], [53.2, 1977.0], [53.3, 1977.0], [53.4, 1977.0], [53.5, 1978.0], [53.6, 1978.0], [53.7, 1978.0], [53.8, 1978.0], [53.9, 1978.0], [54.0, 1979.0], [54.1, 1979.0], [54.2, 1979.0], [54.3, 1979.0], [54.4, 1979.0], [54.5, 1979.0], [54.6, 1979.0], [54.7, 1979.0], [54.8, 1979.0], [54.9, 1979.0], [55.0, 1983.0], [55.1, 1983.0], [55.2, 1983.0], [55.3, 1983.0], [55.4, 1983.0], [55.5, 1985.0], [55.6, 1985.0], [55.7, 1985.0], [55.8, 1985.0], [55.9, 1985.0], [56.0, 1990.0], [56.1, 1990.0], [56.2, 1990.0], [56.3, 1990.0], [56.4, 1990.0], [56.5, 1994.0], [56.6, 1994.0], [56.7, 1994.0], [56.8, 1994.0], [56.9, 1994.0], [57.0, 1994.0], [57.1, 1994.0], [57.2, 1994.0], [57.3, 1994.0], [57.4, 1994.0], [57.5, 1995.0], [57.6, 1995.0], [57.7, 1995.0], [57.8, 1995.0], [57.9, 1995.0], [58.0, 2002.0], [58.1, 2002.0], [58.2, 2002.0], [58.3, 2002.0], [58.4, 2002.0], [58.5, 2002.0], [58.6, 2002.0], [58.7, 2002.0], [58.8, 2002.0], [58.9, 2002.0], [59.0, 2004.0], [59.1, 2004.0], [59.2, 2004.0], [59.3, 2004.0], [59.4, 2004.0], [59.5, 2007.0], [59.6, 2007.0], [59.7, 2007.0], [59.8, 2007.0], [59.9, 2007.0], [60.0, 2015.0], [60.1, 2015.0], [60.2, 2015.0], [60.3, 2015.0], [60.4, 2015.0], [60.5, 2021.0], [60.6, 2021.0], [60.7, 2021.0], [60.8, 2021.0], [60.9, 2021.0], [61.0, 2022.0], [61.1, 2022.0], [61.2, 2022.0], [61.3, 2022.0], [61.4, 2022.0], [61.5, 2032.0], [61.6, 2032.0], [61.7, 2032.0], [61.8, 2032.0], [61.9, 2032.0], [62.0, 2034.0], [62.1, 2034.0], [62.2, 2034.0], [62.3, 2034.0], [62.4, 2034.0], [62.5, 2036.0], [62.6, 2036.0], [62.7, 2036.0], [62.8, 2036.0], [62.9, 2036.0], [63.0, 2052.0], [63.1, 2052.0], [63.2, 2052.0], [63.3, 2052.0], [63.4, 2052.0], [63.5, 2059.0], [63.6, 2059.0], [63.7, 2059.0], [63.8, 2059.0], [63.9, 2059.0], [64.0, 2064.0], [64.1, 2064.0], [64.2, 2064.0], [64.3, 2064.0], [64.4, 2064.0], [64.5, 2070.0], [64.6, 2070.0], [64.7, 2070.0], [64.8, 2070.0], [64.9, 2070.0], [65.0, 2073.0], [65.1, 2073.0], [65.2, 2073.0], [65.3, 2073.0], [65.4, 2073.0], [65.5, 2084.0], [65.6, 2084.0], [65.7, 2084.0], [65.8, 2084.0], [65.9, 2084.0], [66.0, 2085.0], [66.1, 2085.0], [66.2, 2085.0], [66.3, 2085.0], [66.4, 2085.0], [66.5, 2087.0], [66.6, 2087.0], [66.7, 2087.0], [66.8, 2087.0], [66.9, 2087.0], [67.0, 2093.0], [67.1, 2093.0], [67.2, 2093.0], [67.3, 2093.0], [67.4, 2093.0], [67.5, 2101.0], [67.6, 2101.0], [67.7, 2101.0], [67.8, 2101.0], [67.9, 2101.0], [68.0, 2102.0], [68.1, 2102.0], [68.2, 2102.0], [68.3, 2102.0], [68.4, 2102.0], [68.5, 2107.0], [68.6, 2107.0], [68.7, 2107.0], [68.8, 2107.0], [68.9, 2107.0], [69.0, 2109.0], [69.1, 2109.0], [69.2, 2109.0], [69.3, 2109.0], [69.4, 2109.0], [69.5, 2118.0], [69.6, 2118.0], [69.7, 2118.0], [69.8, 2118.0], [69.9, 2118.0], [70.0, 2138.0], [70.1, 2138.0], [70.2, 2138.0], [70.3, 2138.0], [70.4, 2138.0], [70.5, 2186.0], [70.6, 2186.0], [70.7, 2186.0], [70.8, 2186.0], [70.9, 2186.0], [71.0, 2188.0], [71.1, 2188.0], [71.2, 2188.0], [71.3, 2188.0], [71.4, 2188.0], [71.5, 2197.0], [71.6, 2197.0], [71.7, 2197.0], [71.8, 2197.0], [71.9, 2197.0], [72.0, 2209.0], [72.1, 2209.0], [72.2, 2209.0], [72.3, 2209.0], [72.4, 2209.0], [72.5, 2327.0], [72.6, 2327.0], [72.7, 2327.0], [72.8, 2327.0], [72.9, 2327.0], [73.0, 2362.0], [73.1, 2362.0], [73.2, 2362.0], [73.3, 2362.0], [73.4, 2362.0], [73.5, 2371.0], [73.6, 2371.0], [73.7, 2371.0], [73.8, 2371.0], [73.9, 2371.0], [74.0, 2376.0], [74.1, 2376.0], [74.2, 2376.0], [74.3, 2376.0], [74.4, 2376.0], [74.5, 2377.0], [74.6, 2377.0], [74.7, 2377.0], [74.8, 2377.0], [74.9, 2377.0], [75.0, 2379.0], [75.1, 2379.0], [75.2, 2379.0], [75.3, 2379.0], [75.4, 2379.0], [75.5, 2382.0], [75.6, 2382.0], [75.7, 2382.0], [75.8, 2382.0], [75.9, 2382.0], [76.0, 2390.0], [76.1, 2390.0], [76.2, 2390.0], [76.3, 2390.0], [76.4, 2390.0], [76.5, 2391.0], [76.6, 2391.0], [76.7, 2391.0], [76.8, 2391.0], [76.9, 2391.0], [77.0, 2394.0], [77.1, 2394.0], [77.2, 2394.0], [77.3, 2394.0], [77.4, 2394.0], [77.5, 2396.0], [77.6, 2396.0], [77.7, 2396.0], [77.8, 2396.0], [77.9, 2396.0], [78.0, 2398.0], [78.1, 2398.0], [78.2, 2398.0], [78.3, 2398.0], [78.4, 2398.0], [78.5, 2406.0], [78.6, 2406.0], [78.7, 2406.0], [78.8, 2406.0], [78.9, 2406.0], [79.0, 2409.0], [79.1, 2409.0], [79.2, 2409.0], [79.3, 2409.0], [79.4, 2409.0], [79.5, 2419.0], [79.6, 2419.0], [79.7, 2419.0], [79.8, 2419.0], [79.9, 2419.0], [80.0, 2431.0], [80.1, 2431.0], [80.2, 2431.0], [80.3, 2431.0], [80.4, 2431.0], [80.5, 2436.0], [80.6, 2436.0], [80.7, 2436.0], [80.8, 2436.0], [80.9, 2436.0], [81.0, 2445.0], [81.1, 2445.0], [81.2, 2445.0], [81.3, 2445.0], [81.4, 2445.0], [81.5, 2447.0], [81.6, 2447.0], [81.7, 2447.0], [81.8, 2447.0], [81.9, 2447.0], [82.0, 2450.0], [82.1, 2450.0], [82.2, 2450.0], [82.3, 2450.0], [82.4, 2450.0], [82.5, 2450.0], [82.6, 2450.0], [82.7, 2450.0], [82.8, 2450.0], [82.9, 2450.0], [83.0, 2453.0], [83.1, 2453.0], [83.2, 2453.0], [83.3, 2453.0], [83.4, 2453.0], [83.5, 2457.0], [83.6, 2457.0], [83.7, 2457.0], [83.8, 2457.0], [83.9, 2457.0], [84.0, 2465.0], [84.1, 2465.0], [84.2, 2465.0], [84.3, 2465.0], [84.4, 2465.0], [84.5, 2471.0], [84.6, 2471.0], [84.7, 2471.0], [84.8, 2471.0], [84.9, 2471.0], [85.0, 2472.0], [85.1, 2472.0], [85.2, 2472.0], [85.3, 2472.0], [85.4, 2472.0], [85.5, 2476.0], [85.6, 2476.0], [85.7, 2476.0], [85.8, 2476.0], [85.9, 2476.0], [86.0, 2479.0], [86.1, 2479.0], [86.2, 2479.0], [86.3, 2479.0], [86.4, 2479.0], [86.5, 2491.0], [86.6, 2491.0], [86.7, 2491.0], [86.8, 2491.0], [86.9, 2491.0], [87.0, 2491.0], [87.1, 2491.0], [87.2, 2491.0], [87.3, 2491.0], [87.4, 2491.0], [87.5, 2491.0], [87.6, 2491.0], [87.7, 2491.0], [87.8, 2491.0], [87.9, 2491.0], [88.0, 2493.0], [88.1, 2493.0], [88.2, 2493.0], [88.3, 2493.0], [88.4, 2493.0], [88.5, 2507.0], [88.6, 2507.0], [88.7, 2507.0], [88.8, 2507.0], [88.9, 2507.0], [89.0, 2521.0], [89.1, 2521.0], [89.2, 2521.0], [89.3, 2521.0], [89.4, 2521.0], [89.5, 2523.0], [89.6, 2523.0], [89.7, 2523.0], [89.8, 2523.0], [89.9, 2523.0], [90.0, 2524.0], [90.1, 2524.0], [90.2, 2524.0], [90.3, 2524.0], [90.4, 2524.0], [90.5, 2530.0], [90.6, 2530.0], [90.7, 2530.0], [90.8, 2530.0], [90.9, 2530.0], [91.0, 2534.0], [91.1, 2534.0], [91.2, 2534.0], [91.3, 2534.0], [91.4, 2534.0], [91.5, 2535.0], [91.6, 2535.0], [91.7, 2535.0], [91.8, 2535.0], [91.9, 2535.0], [92.0, 2536.0], [92.1, 2536.0], [92.2, 2536.0], [92.3, 2536.0], [92.4, 2536.0], [92.5, 2537.0], [92.6, 2537.0], [92.7, 2537.0], [92.8, 2537.0], [92.9, 2537.0], [93.0, 2537.0], [93.1, 2537.0], [93.2, 2537.0], [93.3, 2537.0], [93.4, 2537.0], [93.5, 2542.0], [93.6, 2542.0], [93.7, 2542.0], [93.8, 2542.0], [93.9, 2542.0], [94.0, 2543.0], [94.1, 2543.0], [94.2, 2543.0], [94.3, 2543.0], [94.4, 2543.0], [94.5, 2549.0], [94.6, 2549.0], [94.7, 2549.0], [94.8, 2549.0], [94.9, 2549.0], [95.0, 2550.0], [95.1, 2550.0], [95.2, 2550.0], [95.3, 2550.0], [95.4, 2550.0], [95.5, 2551.0], [95.6, 2551.0], [95.7, 2551.0], [95.8, 2551.0], [95.9, 2551.0], [96.0, 2580.0], [96.1, 2580.0], [96.2, 2580.0], [96.3, 2580.0], [96.4, 2580.0], [96.5, 2586.0], [96.6, 2586.0], [96.7, 2586.0], [96.8, 2586.0], [96.9, 2586.0], [97.0, 2591.0], [97.1, 2591.0], [97.2, 2591.0], [97.3, 2591.0], [97.4, 2591.0], [97.5, 2596.0], [97.6, 2596.0], [97.7, 2596.0], [97.8, 2596.0], [97.9, 2596.0], [98.0, 2601.0], [98.1, 2601.0], [98.2, 2601.0], [98.3, 2601.0], [98.4, 2601.0], [98.5, 2603.0], [98.6, 2603.0], [98.7, 2603.0], [98.8, 2603.0], [98.9, 2603.0], [99.0, 2608.0], [99.1, 2608.0], [99.2, 2608.0], [99.3, 2608.0], [99.4, 2608.0], [99.5, 2635.0], [99.6, 2635.0], [99.7, 2635.0], [99.8, 2635.0], [99.9, 2635.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[0.0, 1800.0], [0.1, 1800.0], [0.2, 1800.0], [0.3, 1800.0], [0.4, 1800.0], [0.5, 1805.0], [0.6, 1805.0], [0.7, 1805.0], [0.8, 1805.0], [0.9, 1805.0], [1.0, 1851.0], [1.1, 1851.0], [1.2, 1851.0], [1.3, 1851.0], [1.4, 1851.0], [1.5, 1856.0], [1.6, 1856.0], [1.7, 1856.0], [1.8, 1856.0], [1.9, 1856.0], [2.0, 1861.0], [2.1, 1861.0], [2.2, 1861.0], [2.3, 1861.0], [2.4, 1861.0], [2.5, 1865.0], [2.6, 1865.0], [2.7, 1865.0], [2.8, 1865.0], [2.9, 1865.0], [3.0, 1884.0], [3.1, 1884.0], [3.2, 1884.0], [3.3, 1884.0], [3.4, 1884.0], [3.5, 1886.0], [3.6, 1886.0], [3.7, 1886.0], [3.8, 1886.0], [3.9, 1886.0], [4.0, 1897.0], [4.1, 1897.0], [4.2, 1897.0], [4.3, 1897.0], [4.4, 1897.0], [4.5, 1909.0], [4.6, 1909.0], [4.7, 1909.0], [4.8, 1909.0], [4.9, 1909.0], [5.0, 1927.0], [5.1, 1927.0], [5.2, 1927.0], [5.3, 1927.0], [5.4, 1927.0], [5.5, 1935.0], [5.6, 1935.0], [5.7, 1935.0], [5.8, 1935.0], [5.9, 1935.0], [6.0, 1938.0], [6.1, 1938.0], [6.2, 1938.0], [6.3, 1938.0], [6.4, 1938.0], [6.5, 1941.0], [6.6, 1941.0], [6.7, 1941.0], [6.8, 1941.0], [6.9, 1941.0], [7.0, 1941.0], [7.1, 1941.0], [7.2, 1941.0], [7.3, 1941.0], [7.4, 1941.0], [7.5, 1971.0], [7.6, 1971.0], [7.7, 1971.0], [7.8, 1971.0], [7.9, 1971.0], [8.0, 1974.0], [8.1, 1974.0], [8.2, 1974.0], [8.3, 1974.0], [8.4, 1974.0], [8.5, 1988.0], [8.6, 1988.0], [8.7, 1988.0], [8.8, 1988.0], [8.9, 1988.0], [9.0, 1991.0], [9.1, 1991.0], [9.2, 1991.0], [9.3, 1991.0], [9.4, 1991.0], [9.5, 1994.0], [9.6, 1994.0], [9.7, 1994.0], [9.8, 1994.0], [9.9, 1994.0], [10.0, 1998.0], [10.1, 1998.0], [10.2, 1998.0], [10.3, 1998.0], [10.4, 1998.0], [10.5, 1999.0], [10.6, 1999.0], [10.7, 1999.0], [10.8, 1999.0], [10.9, 1999.0], [11.0, 2008.0], [11.1, 2008.0], [11.2, 2008.0], [11.3, 2008.0], [11.4, 2008.0], [11.5, 2008.0], [11.6, 2008.0], [11.7, 2008.0], [11.8, 2008.0], [11.9, 2008.0], [12.0, 2008.0], [12.1, 2008.0], [12.2, 2008.0], [12.3, 2008.0], [12.4, 2008.0], [12.5, 2015.0], [12.6, 2015.0], [12.7, 2015.0], [12.8, 2015.0], [12.9, 2015.0], [13.0, 2029.0], [13.1, 2029.0], [13.2, 2029.0], [13.3, 2029.0], [13.4, 2029.0], [13.5, 2032.0], [13.6, 2032.0], [13.7, 2032.0], [13.8, 2032.0], [13.9, 2032.0], [14.0, 2045.0], [14.1, 2045.0], [14.2, 2045.0], [14.3, 2045.0], [14.4, 2045.0], [14.5, 2046.0], [14.6, 2046.0], [14.7, 2046.0], [14.8, 2046.0], [14.9, 2046.0], [15.0, 2053.0], [15.1, 2053.0], [15.2, 2053.0], [15.3, 2053.0], [15.4, 2053.0], [15.5, 2072.0], [15.6, 2072.0], [15.7, 2072.0], [15.8, 2072.0], [15.9, 2072.0], [16.0, 2072.0], [16.1, 2072.0], [16.2, 2072.0], [16.3, 2072.0], [16.4, 2072.0], [16.5, 2074.0], [16.6, 2074.0], [16.7, 2074.0], [16.8, 2074.0], [16.9, 2074.0], [17.0, 2081.0], [17.1, 2081.0], [17.2, 2081.0], [17.3, 2081.0], [17.4, 2081.0], [17.5, 2085.0], [17.6, 2085.0], [17.7, 2085.0], [17.8, 2085.0], [17.9, 2085.0], [18.0, 2088.0], [18.1, 2088.0], [18.2, 2088.0], [18.3, 2088.0], [18.4, 2088.0], [18.5, 2088.0], [18.6, 2088.0], [18.7, 2088.0], [18.8, 2088.0], [18.9, 2088.0], [19.0, 2089.0], [19.1, 2089.0], [19.2, 2089.0], [19.3, 2089.0], [19.4, 2089.0], [19.5, 2099.0], [19.6, 2099.0], [19.7, 2099.0], [19.8, 2099.0], [19.9, 2099.0], [20.0, 2102.0], [20.1, 2102.0], [20.2, 2102.0], [20.3, 2102.0], [20.4, 2102.0], [20.5, 2116.0], [20.6, 2116.0], [20.7, 2116.0], [20.8, 2116.0], [20.9, 2116.0], [21.0, 2123.0], [21.1, 2123.0], [21.2, 2123.0], [21.3, 2123.0], [21.4, 2123.0], [21.5, 2123.0], [21.6, 2123.0], [21.7, 2123.0], [21.8, 2123.0], [21.9, 2123.0], [22.0, 2132.0], [22.1, 2132.0], [22.2, 2132.0], [22.3, 2132.0], [22.4, 2132.0], [22.5, 2133.0], [22.6, 2133.0], [22.7, 2133.0], [22.8, 2133.0], [22.9, 2133.0], [23.0, 2140.0], [23.1, 2140.0], [23.2, 2140.0], [23.3, 2140.0], [23.4, 2140.0], [23.5, 2164.0], [23.6, 2164.0], [23.7, 2164.0], [23.8, 2164.0], [23.9, 2164.0], [24.0, 2170.0], [24.1, 2170.0], [24.2, 2170.0], [24.3, 2170.0], [24.4, 2170.0], [24.5, 2176.0], [24.6, 2176.0], [24.7, 2176.0], [24.8, 2176.0], [24.9, 2176.0], [25.0, 2180.0], [25.1, 2180.0], [25.2, 2180.0], [25.3, 2180.0], [25.4, 2180.0], [25.5, 2181.0], [25.6, 2181.0], [25.7, 2181.0], [25.8, 2181.0], [25.9, 2181.0], [26.0, 2182.0], [26.1, 2182.0], [26.2, 2182.0], [26.3, 2182.0], [26.4, 2182.0], [26.5, 2209.0], [26.6, 2209.0], [26.7, 2209.0], [26.8, 2209.0], [26.9, 2209.0], [27.0, 2215.0], [27.1, 2215.0], [27.2, 2215.0], [27.3, 2215.0], [27.4, 2215.0], [27.5, 2500.0], [27.6, 2500.0], [27.7, 2500.0], [27.8, 2500.0], [27.9, 2500.0], [28.0, 2538.0], [28.1, 2538.0], [28.2, 2538.0], [28.3, 2538.0], [28.4, 2538.0], [28.5, 2572.0], [28.6, 2572.0], [28.7, 2572.0], [28.8, 2572.0], [28.9, 2572.0], [29.0, 2590.0], [29.1, 2590.0], [29.2, 2590.0], [29.3, 2590.0], [29.4, 2590.0], [29.5, 2594.0], [29.6, 2594.0], [29.7, 2594.0], [29.8, 2594.0], [29.9, 2594.0], [30.0, 2621.0], [30.1, 2621.0], [30.2, 2621.0], [30.3, 2621.0], [30.4, 2621.0], [30.5, 2621.0], [30.6, 2621.0], [30.7, 2621.0], [30.8, 2621.0], [30.9, 2621.0], [31.0, 2622.0], [31.1, 2622.0], [31.2, 2622.0], [31.3, 2622.0], [31.4, 2622.0], [31.5, 2642.0], [31.6, 2642.0], [31.7, 2642.0], [31.8, 2642.0], [31.9, 2642.0], [32.0, 2646.0], [32.1, 2646.0], [32.2, 2646.0], [32.3, 2646.0], [32.4, 2646.0], [32.5, 2656.0], [32.6, 2656.0], [32.7, 2656.0], [32.8, 2656.0], [32.9, 2656.0], [33.0, 2662.0], [33.1, 2662.0], [33.2, 2662.0], [33.3, 2662.0], [33.4, 2662.0], [33.5, 2684.0], [33.6, 2684.0], [33.7, 2684.0], [33.8, 2684.0], [33.9, 2684.0], [34.0, 2693.0], [34.1, 2693.0], [34.2, 2693.0], [34.3, 2693.0], [34.4, 2693.0], [34.5, 2703.0], [34.6, 2703.0], [34.7, 2703.0], [34.8, 2703.0], [34.9, 2703.0], [35.0, 2711.0], [35.1, 2711.0], [35.2, 2711.0], [35.3, 2711.0], [35.4, 2711.0], [35.5, 2736.0], [35.6, 2736.0], [35.7, 2736.0], [35.8, 2736.0], [35.9, 2736.0], [36.0, 2744.0], [36.1, 2744.0], [36.2, 2744.0], [36.3, 2744.0], [36.4, 2744.0], [36.5, 2762.0], [36.6, 2762.0], [36.7, 2762.0], [36.8, 2762.0], [36.9, 2762.0], [37.0, 2763.0], [37.1, 2763.0], [37.2, 2763.0], [37.3, 2763.0], [37.4, 2763.0], [37.5, 2784.0], [37.6, 2784.0], [37.7, 2784.0], [37.8, 2784.0], [37.9, 2784.0], [38.0, 2792.0], [38.1, 2792.0], [38.2, 2792.0], [38.3, 2792.0], [38.4, 2792.0], [38.5, 2806.0], [38.6, 2806.0], [38.7, 2806.0], [38.8, 2806.0], [38.9, 2806.0], [39.0, 2856.0], [39.1, 2856.0], [39.2, 2856.0], [39.3, 2856.0], [39.4, 2856.0], [39.5, 2869.0], [39.6, 2869.0], [39.7, 2869.0], [39.8, 2869.0], [39.9, 2869.0], [40.0, 2871.0], [40.1, 2871.0], [40.2, 2871.0], [40.3, 2871.0], [40.4, 2871.0], [40.5, 2881.0], [40.6, 2881.0], [40.7, 2881.0], [40.8, 2881.0], [40.9, 2881.0], [41.0, 2885.0], [41.1, 2885.0], [41.2, 2885.0], [41.3, 2885.0], [41.4, 2885.0], [41.5, 2901.0], [41.6, 2901.0], [41.7, 2901.0], [41.8, 2901.0], [41.9, 2901.0], [42.0, 2904.0], [42.1, 2904.0], [42.2, 2904.0], [42.3, 2904.0], [42.4, 2904.0], [42.5, 2904.0], [42.6, 2904.0], [42.7, 2904.0], [42.8, 2904.0], [42.9, 2904.0], [43.0, 2910.0], [43.1, 2910.0], [43.2, 2910.0], [43.3, 2910.0], [43.4, 2910.0], [43.5, 2949.0], [43.6, 2949.0], [43.7, 2949.0], [43.8, 2949.0], [43.9, 2949.0], [44.0, 2967.0], [44.1, 2967.0], [44.2, 2967.0], [44.3, 2967.0], [44.4, 2967.0], [44.5, 2992.0], [44.6, 2992.0], [44.7, 2992.0], [44.8, 2992.0], [44.9, 2992.0], [45.0, 3019.0], [45.1, 3019.0], [45.2, 3019.0], [45.3, 3019.0], [45.4, 3019.0], [45.5, 3027.0], [45.6, 3027.0], [45.7, 3027.0], [45.8, 3027.0], [45.9, 3027.0], [46.0, 3031.0], [46.1, 3031.0], [46.2, 3031.0], [46.3, 3031.0], [46.4, 3031.0], [46.5, 3033.0], [46.6, 3033.0], [46.7, 3033.0], [46.8, 3033.0], [46.9, 3033.0], [47.0, 3045.0], [47.1, 3045.0], [47.2, 3045.0], [47.3, 3045.0], [47.4, 3045.0], [47.5, 3056.0], [47.6, 3056.0], [47.7, 3056.0], [47.8, 3056.0], [47.9, 3056.0], [48.0, 3060.0], [48.1, 3060.0], [48.2, 3060.0], [48.3, 3060.0], [48.4, 3060.0], [48.5, 3072.0], [48.6, 3072.0], [48.7, 3072.0], [48.8, 3072.0], [48.9, 3072.0], [49.0, 3085.0], [49.1, 3085.0], [49.2, 3085.0], [49.3, 3085.0], [49.4, 3085.0], [49.5, 3085.0], [49.6, 3085.0], [49.7, 3085.0], [49.8, 3085.0], [49.9, 3085.0], [50.0, 3091.0], [50.1, 3091.0], [50.2, 3091.0], [50.3, 3091.0], [50.4, 3091.0], [50.5, 3091.0], [50.6, 3091.0], [50.7, 3091.0], [50.8, 3091.0], [50.9, 3091.0], [51.0, 3096.0], [51.1, 3096.0], [51.2, 3096.0], [51.3, 3096.0], [51.4, 3096.0], [51.5, 3107.0], [51.6, 3107.0], [51.7, 3107.0], [51.8, 3107.0], [51.9, 3107.0], [52.0, 3114.0], [52.1, 3114.0], [52.2, 3114.0], [52.3, 3114.0], [52.4, 3114.0], [52.5, 3119.0], [52.6, 3119.0], [52.7, 3119.0], [52.8, 3119.0], [52.9, 3119.0], [53.0, 3120.0], [53.1, 3120.0], [53.2, 3120.0], [53.3, 3120.0], [53.4, 3120.0], [53.5, 3132.0], [53.6, 3132.0], [53.7, 3132.0], [53.8, 3132.0], [53.9, 3132.0], [54.0, 3136.0], [54.1, 3136.0], [54.2, 3136.0], [54.3, 3136.0], [54.4, 3136.0], [54.5, 3137.0], [54.6, 3137.0], [54.7, 3137.0], [54.8, 3137.0], [54.9, 3137.0], [55.0, 3144.0], [55.1, 3144.0], [55.2, 3144.0], [55.3, 3144.0], [55.4, 3144.0], [55.5, 3155.0], [55.6, 3155.0], [55.7, 3155.0], [55.8, 3155.0], [55.9, 3155.0], [56.0, 3188.0], [56.1, 3188.0], [56.2, 3188.0], [56.3, 3188.0], [56.4, 3188.0], [56.5, 3192.0], [56.6, 3192.0], [56.7, 3192.0], [56.8, 3192.0], [56.9, 3192.0], [57.0, 3219.0], [57.1, 3219.0], [57.2, 3219.0], [57.3, 3219.0], [57.4, 3219.0], [57.5, 3236.0], [57.6, 3236.0], [57.7, 3236.0], [57.8, 3236.0], [57.9, 3236.0], [58.0, 3240.0], [58.1, 3240.0], [58.2, 3240.0], [58.3, 3240.0], [58.4, 3240.0], [58.5, 3250.0], [58.6, 3250.0], [58.7, 3250.0], [58.8, 3250.0], [58.9, 3250.0], [59.0, 3254.0], [59.1, 3254.0], [59.2, 3254.0], [59.3, 3254.0], [59.4, 3254.0], [59.5, 3258.0], [59.6, 3258.0], [59.7, 3258.0], [59.8, 3258.0], [59.9, 3258.0], [60.0, 3259.0], [60.1, 3259.0], [60.2, 3259.0], [60.3, 3259.0], [60.4, 3259.0], [60.5, 3260.0], [60.6, 3260.0], [60.7, 3260.0], [60.8, 3260.0], [60.9, 3260.0], [61.0, 3261.0], [61.1, 3261.0], [61.2, 3261.0], [61.3, 3261.0], [61.4, 3261.0], [61.5, 3281.0], [61.6, 3281.0], [61.7, 3281.0], [61.8, 3281.0], [61.9, 3281.0], [62.0, 3286.0], [62.1, 3286.0], [62.2, 3286.0], [62.3, 3286.0], [62.4, 3286.0], [62.5, 3302.0], [62.6, 3302.0], [62.7, 3302.0], [62.8, 3302.0], [62.9, 3302.0], [63.0, 3304.0], [63.1, 3304.0], [63.2, 3304.0], [63.3, 3304.0], [63.4, 3304.0], [63.5, 3325.0], [63.6, 3325.0], [63.7, 3325.0], [63.8, 3325.0], [63.9, 3325.0], [64.0, 3337.0], [64.1, 3337.0], [64.2, 3337.0], [64.3, 3337.0], [64.4, 3337.0], [64.5, 3339.0], [64.6, 3339.0], [64.7, 3339.0], [64.8, 3339.0], [64.9, 3339.0], [65.0, 3341.0], [65.1, 3341.0], [65.2, 3341.0], [65.3, 3341.0], [65.4, 3341.0], [65.5, 3344.0], [65.6, 3344.0], [65.7, 3344.0], [65.8, 3344.0], [65.9, 3344.0], [66.0, 3348.0], [66.1, 3348.0], [66.2, 3348.0], [66.3, 3348.0], [66.4, 3348.0], [66.5, 3353.0], [66.6, 3353.0], [66.7, 3353.0], [66.8, 3353.0], [66.9, 3353.0], [67.0, 3361.0], [67.1, 3361.0], [67.2, 3361.0], [67.3, 3361.0], [67.4, 3361.0], [67.5, 3363.0], [67.6, 3363.0], [67.7, 3363.0], [67.8, 3363.0], [67.9, 3363.0], [68.0, 3363.0], [68.1, 3363.0], [68.2, 3363.0], [68.3, 3363.0], [68.4, 3363.0], [68.5, 3379.0], [68.6, 3379.0], [68.7, 3379.0], [68.8, 3379.0], [68.9, 3379.0], [69.0, 3383.0], [69.1, 3383.0], [69.2, 3383.0], [69.3, 3383.0], [69.4, 3383.0], [69.5, 3388.0], [69.6, 3388.0], [69.7, 3388.0], [69.8, 3388.0], [69.9, 3388.0], [70.0, 3408.0], [70.1, 3408.0], [70.2, 3408.0], [70.3, 3408.0], [70.4, 3408.0], [70.5, 3413.0], [70.6, 3413.0], [70.7, 3413.0], [70.8, 3413.0], [70.9, 3413.0], [71.0, 3419.0], [71.1, 3419.0], [71.2, 3419.0], [71.3, 3419.0], [71.4, 3419.0], [71.5, 3421.0], [71.6, 3421.0], [71.7, 3421.0], [71.8, 3421.0], [71.9, 3421.0], [72.0, 3430.0], [72.1, 3430.0], [72.2, 3430.0], [72.3, 3430.0], [72.4, 3430.0], [72.5, 3434.0], [72.6, 3434.0], [72.7, 3434.0], [72.8, 3434.0], [72.9, 3434.0], [73.0, 3441.0], [73.1, 3441.0], [73.2, 3441.0], [73.3, 3441.0], [73.4, 3441.0], [73.5, 3449.0], [73.6, 3449.0], [73.7, 3449.0], [73.8, 3449.0], [73.9, 3449.0], [74.0, 3452.0], [74.1, 3452.0], [74.2, 3452.0], [74.3, 3452.0], [74.4, 3452.0], [74.5, 3454.0], [74.6, 3454.0], [74.7, 3454.0], [74.8, 3454.0], [74.9, 3454.0], [75.0, 3463.0], [75.1, 3463.0], [75.2, 3463.0], [75.3, 3463.0], [75.4, 3463.0], [75.5, 3466.0], [75.6, 3466.0], [75.7, 3466.0], [75.8, 3466.0], [75.9, 3466.0], [76.0, 3471.0], [76.1, 3471.0], [76.2, 3471.0], [76.3, 3471.0], [76.4, 3471.0], [76.5, 3480.0], [76.6, 3480.0], [76.7, 3480.0], [76.8, 3480.0], [76.9, 3480.0], [77.0, 3481.0], [77.1, 3481.0], [77.2, 3481.0], [77.3, 3481.0], [77.4, 3481.0], [77.5, 3484.0], [77.6, 3484.0], [77.7, 3484.0], [77.8, 3484.0], [77.9, 3484.0], [78.0, 3485.0], [78.1, 3485.0], [78.2, 3485.0], [78.3, 3485.0], [78.4, 3485.0], [78.5, 3487.0], [78.6, 3487.0], [78.7, 3487.0], [78.8, 3487.0], [78.9, 3487.0], [79.0, 3498.0], [79.1, 3498.0], [79.2, 3498.0], [79.3, 3498.0], [79.4, 3498.0], [79.5, 3509.0], [79.6, 3509.0], [79.7, 3509.0], [79.8, 3509.0], [79.9, 3509.0], [80.0, 3517.0], [80.1, 3517.0], [80.2, 3517.0], [80.3, 3517.0], [80.4, 3517.0], [80.5, 3523.0], [80.6, 3523.0], [80.7, 3523.0], [80.8, 3523.0], [80.9, 3523.0], [81.0, 3540.0], [81.1, 3540.0], [81.2, 3540.0], [81.3, 3540.0], [81.4, 3540.0], [81.5, 3545.0], [81.6, 3545.0], [81.7, 3545.0], [81.8, 3545.0], [81.9, 3545.0], [82.0, 3556.0], [82.1, 3556.0], [82.2, 3556.0], [82.3, 3556.0], [82.4, 3556.0], [82.5, 3562.0], [82.6, 3562.0], [82.7, 3562.0], [82.8, 3562.0], [82.9, 3562.0], [83.0, 3563.0], [83.1, 3563.0], [83.2, 3563.0], [83.3, 3563.0], [83.4, 3563.0], [83.5, 3566.0], [83.6, 3566.0], [83.7, 3566.0], [83.8, 3566.0], [83.9, 3566.0], [84.0, 3567.0], [84.1, 3567.0], [84.2, 3567.0], [84.3, 3567.0], [84.4, 3567.0], [84.5, 3569.0], [84.6, 3569.0], [84.7, 3569.0], [84.8, 3569.0], [84.9, 3569.0], [85.0, 3579.0], [85.1, 3579.0], [85.2, 3579.0], [85.3, 3579.0], [85.4, 3579.0], [85.5, 3588.0], [85.6, 3588.0], [85.7, 3588.0], [85.8, 3588.0], [85.9, 3588.0], [86.0, 3598.0], [86.1, 3598.0], [86.2, 3598.0], [86.3, 3598.0], [86.4, 3598.0], [86.5, 3611.0], [86.6, 3611.0], [86.7, 3611.0], [86.8, 3611.0], [86.9, 3611.0], [87.0, 3614.0], [87.1, 3614.0], [87.2, 3614.0], [87.3, 3614.0], [87.4, 3614.0], [87.5, 3623.0], [87.6, 3623.0], [87.7, 3623.0], [87.8, 3623.0], [87.9, 3623.0], [88.0, 3633.0], [88.1, 3633.0], [88.2, 3633.0], [88.3, 3633.0], [88.4, 3633.0], [88.5, 3644.0], [88.6, 3644.0], [88.7, 3644.0], [88.8, 3644.0], [88.9, 3644.0], [89.0, 3647.0], [89.1, 3647.0], [89.2, 3647.0], [89.3, 3647.0], [89.4, 3647.0], [89.5, 3662.0], [89.6, 3662.0], [89.7, 3662.0], [89.8, 3662.0], [89.9, 3662.0], [90.0, 3663.0], [90.1, 3663.0], [90.2, 3663.0], [90.3, 3663.0], [90.4, 3663.0], [90.5, 3671.0], [90.6, 3671.0], [90.7, 3671.0], [90.8, 3671.0], [90.9, 3671.0], [91.0, 3675.0], [91.1, 3675.0], [91.2, 3675.0], [91.3, 3675.0], [91.4, 3675.0], [91.5, 3699.0], [91.6, 3699.0], [91.7, 3699.0], [91.8, 3699.0], [91.9, 3699.0], [92.0, 3715.0], [92.1, 3715.0], [92.2, 3715.0], [92.3, 3715.0], [92.4, 3715.0], [92.5, 3717.0], [92.6, 3717.0], [92.7, 3717.0], [92.8, 3717.0], [92.9, 3717.0], [93.0, 3721.0], [93.1, 3721.0], [93.2, 3721.0], [93.3, 3721.0], [93.4, 3721.0], [93.5, 3730.0], [93.6, 3730.0], [93.7, 3730.0], [93.8, 3730.0], [93.9, 3730.0], [94.0, 3748.0], [94.1, 3748.0], [94.2, 3748.0], [94.3, 3748.0], [94.4, 3748.0], [94.5, 3783.0], [94.6, 3783.0], [94.7, 3783.0], [94.8, 3783.0], [94.9, 3783.0], [95.0, 3805.0], [95.1, 3805.0], [95.2, 3805.0], [95.3, 3805.0], [95.4, 3805.0], [95.5, 3806.0], [95.6, 3806.0], [95.7, 3806.0], [95.8, 3806.0], [95.9, 3806.0], [96.0, 3811.0], [96.1, 3811.0], [96.2, 3811.0], [96.3, 3811.0], [96.4, 3811.0], [96.5, 3815.0], [96.6, 3815.0], [96.7, 3815.0], [96.8, 3815.0], [96.9, 3815.0], [97.0, 3830.0], [97.1, 3830.0], [97.2, 3830.0], [97.3, 3830.0], [97.4, 3830.0], [97.5, 3857.0], [97.6, 3857.0], [97.7, 3857.0], [97.8, 3857.0], [97.9, 3857.0], [98.0, 3859.0], [98.1, 3859.0], [98.2, 3859.0], [98.3, 3859.0], [98.4, 3859.0], [98.5, 3879.0], [98.6, 3879.0], [98.7, 3879.0], [98.8, 3879.0], [98.9, 3879.0], [99.0, 3959.0], [99.1, 3959.0], [99.2, 3959.0], [99.3, 3959.0], [99.4, 3959.0], [99.5, 4101.0], [99.6, 4101.0], [99.7, 4101.0], [99.8, 4101.0], [99.9, 4101.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[0.0, 1364.0], [0.1, 1364.0], [0.2, 1364.0], [0.3, 1364.0], [0.4, 1364.0], [0.5, 1440.0], [0.6, 1440.0], [0.7, 1440.0], [0.8, 1440.0], [0.9, 1440.0], [1.0, 1462.0], [1.1, 1462.0], [1.2, 1462.0], [1.3, 1462.0], [1.4, 1462.0], [1.5, 1585.0], [1.6, 1585.0], [1.7, 1585.0], [1.8, 1585.0], [1.9, 1585.0], [2.0, 1651.0], [2.1, 1651.0], [2.2, 1651.0], [2.3, 1651.0], [2.4, 1651.0], [2.5, 1652.0], [2.6, 1652.0], [2.7, 1652.0], [2.8, 1652.0], [2.9, 1652.0], [3.0, 1654.0], [3.1, 1654.0], [3.2, 1654.0], [3.3, 1654.0], [3.4, 1654.0], [3.5, 1657.0], [3.6, 1657.0], [3.7, 1657.0], [3.8, 1657.0], [3.9, 1657.0], [4.0, 1658.0], [4.1, 1658.0], [4.2, 1658.0], [4.3, 1658.0], [4.4, 1658.0], [4.5, 1659.0], [4.6, 1659.0], [4.7, 1659.0], [4.8, 1659.0], [4.9, 1659.0], [5.0, 1688.0], [5.1, 1688.0], [5.2, 1688.0], [5.3, 1688.0], [5.4, 1688.0], [5.5, 1699.0], [5.6, 1699.0], [5.7, 1699.0], [5.8, 1699.0], [5.9, 1699.0], [6.0, 1702.0], [6.1, 1702.0], [6.2, 1702.0], [6.3, 1702.0], [6.4, 1702.0], [6.5, 1703.0], [6.6, 1703.0], [6.7, 1703.0], [6.8, 1703.0], [6.9, 1703.0], [7.0, 1703.0], [7.1, 1703.0], [7.2, 1703.0], [7.3, 1703.0], [7.4, 1703.0], [7.5, 1710.0], [7.6, 1710.0], [7.7, 1710.0], [7.8, 1710.0], [7.9, 1710.0], [8.0, 1713.0], [8.1, 1713.0], [8.2, 1713.0], [8.3, 1713.0], [8.4, 1713.0], [8.5, 1715.0], [8.6, 1715.0], [8.7, 1715.0], [8.8, 1715.0], [8.9, 1715.0], [9.0, 1717.0], [9.1, 1717.0], [9.2, 1717.0], [9.3, 1717.0], [9.4, 1717.0], [9.5, 1718.0], [9.6, 1718.0], [9.7, 1718.0], [9.8, 1718.0], [9.9, 1718.0], [10.0, 1722.0], [10.1, 1722.0], [10.2, 1722.0], [10.3, 1722.0], [10.4, 1722.0], [10.5, 1725.0], [10.6, 1725.0], [10.7, 1725.0], [10.8, 1725.0], [10.9, 1725.0], [11.0, 1726.0], [11.1, 1726.0], [11.2, 1726.0], [11.3, 1726.0], [11.4, 1726.0], [11.5, 1729.0], [11.6, 1729.0], [11.7, 1729.0], [11.8, 1729.0], [11.9, 1729.0], [12.0, 1730.0], [12.1, 1730.0], [12.2, 1730.0], [12.3, 1730.0], [12.4, 1730.0], [12.5, 1732.0], [12.6, 1732.0], [12.7, 1732.0], [12.8, 1732.0], [12.9, 1732.0], [13.0, 1748.0], [13.1, 1748.0], [13.2, 1748.0], [13.3, 1748.0], [13.4, 1748.0], [13.5, 1748.0], [13.6, 1748.0], [13.7, 1748.0], [13.8, 1748.0], [13.9, 1748.0], [14.0, 1770.0], [14.1, 1770.0], [14.2, 1770.0], [14.3, 1770.0], [14.4, 1770.0], [14.5, 1776.0], [14.6, 1776.0], [14.7, 1776.0], [14.8, 1776.0], [14.9, 1776.0], [15.0, 1781.0], [15.1, 1781.0], [15.2, 1781.0], [15.3, 1781.0], [15.4, 1781.0], [15.5, 1788.0], [15.6, 1788.0], [15.7, 1788.0], [15.8, 1788.0], [15.9, 1788.0], [16.0, 1789.0], [16.1, 1789.0], [16.2, 1789.0], [16.3, 1789.0], [16.4, 1789.0], [16.5, 1792.0], [16.6, 1792.0], [16.7, 1792.0], [16.8, 1792.0], [16.9, 1792.0], [17.0, 1794.0], [17.1, 1794.0], [17.2, 1794.0], [17.3, 1794.0], [17.4, 1794.0], [17.5, 1795.0], [17.6, 1795.0], [17.7, 1795.0], [17.8, 1795.0], [17.9, 1795.0], [18.0, 1798.0], [18.1, 1798.0], [18.2, 1798.0], [18.3, 1798.0], [18.4, 1798.0], [18.5, 1799.0], [18.6, 1799.0], [18.7, 1799.0], [18.8, 1799.0], [18.9, 1799.0], [19.0, 1808.0], [19.1, 1808.0], [19.2, 1808.0], [19.3, 1808.0], [19.4, 1808.0], [19.5, 1813.0], [19.6, 1813.0], [19.7, 1813.0], [19.8, 1813.0], [19.9, 1813.0], [20.0, 1819.0], [20.1, 1819.0], [20.2, 1819.0], [20.3, 1819.0], [20.4, 1819.0], [20.5, 1825.0], [20.6, 1825.0], [20.7, 1825.0], [20.8, 1825.0], [20.9, 1825.0], [21.0, 1827.0], [21.1, 1827.0], [21.2, 1827.0], [21.3, 1827.0], [21.4, 1827.0], [21.5, 1830.0], [21.6, 1830.0], [21.7, 1830.0], [21.8, 1830.0], [21.9, 1830.0], [22.0, 1831.0], [22.1, 1831.0], [22.2, 1831.0], [22.3, 1831.0], [22.4, 1831.0], [22.5, 1842.0], [22.6, 1842.0], [22.7, 1842.0], [22.8, 1842.0], [22.9, 1842.0], [23.0, 1856.0], [23.1, 1856.0], [23.2, 1856.0], [23.3, 1856.0], [23.4, 1856.0], [23.5, 1870.0], [23.6, 1870.0], [23.7, 1870.0], [23.8, 1870.0], [23.9, 1870.0], [24.0, 2050.0], [24.1, 2050.0], [24.2, 2050.0], [24.3, 2050.0], [24.4, 2050.0], [24.5, 2061.0], [24.6, 2061.0], [24.7, 2061.0], [24.8, 2061.0], [24.9, 2061.0], [25.0, 2088.0], [25.1, 2088.0], [25.2, 2088.0], [25.3, 2088.0], [25.4, 2088.0], [25.5, 2110.0], [25.6, 2110.0], [25.7, 2110.0], [25.8, 2110.0], [25.9, 2110.0], [26.0, 2113.0], [26.1, 2113.0], [26.2, 2113.0], [26.3, 2113.0], [26.4, 2113.0], [26.5, 2117.0], [26.6, 2117.0], [26.7, 2117.0], [26.8, 2117.0], [26.9, 2117.0], [27.0, 2126.0], [27.1, 2126.0], [27.2, 2126.0], [27.3, 2126.0], [27.4, 2126.0], [27.5, 2145.0], [27.6, 2145.0], [27.7, 2145.0], [27.8, 2145.0], [27.9, 2145.0], [28.0, 2149.0], [28.1, 2149.0], [28.2, 2149.0], [28.3, 2149.0], [28.4, 2149.0], [28.5, 2152.0], [28.6, 2152.0], [28.7, 2152.0], [28.8, 2152.0], [28.9, 2152.0], [29.0, 2155.0], [29.1, 2155.0], [29.2, 2155.0], [29.3, 2155.0], [29.4, 2155.0], [29.5, 2164.0], [29.6, 2164.0], [29.7, 2164.0], [29.8, 2164.0], [29.9, 2164.0], [30.0, 2170.0], [30.1, 2170.0], [30.2, 2170.0], [30.3, 2170.0], [30.4, 2170.0], [30.5, 2171.0], [30.6, 2171.0], [30.7, 2171.0], [30.8, 2171.0], [30.9, 2171.0], [31.0, 2177.0], [31.1, 2177.0], [31.2, 2177.0], [31.3, 2177.0], [31.4, 2177.0], [31.5, 2179.0], [31.6, 2179.0], [31.7, 2179.0], [31.8, 2179.0], [31.9, 2179.0], [32.0, 2179.0], [32.1, 2179.0], [32.2, 2179.0], [32.3, 2179.0], [32.4, 2179.0], [32.5, 2185.0], [32.6, 2185.0], [32.7, 2185.0], [32.8, 2185.0], [32.9, 2185.0], [33.0, 2186.0], [33.1, 2186.0], [33.2, 2186.0], [33.3, 2186.0], [33.4, 2186.0], [33.5, 2193.0], [33.6, 2193.0], [33.7, 2193.0], [33.8, 2193.0], [33.9, 2193.0], [34.0, 2194.0], [34.1, 2194.0], [34.2, 2194.0], [34.3, 2194.0], [34.4, 2194.0], [34.5, 2211.0], [34.6, 2211.0], [34.7, 2211.0], [34.8, 2211.0], [34.9, 2211.0], [35.0, 2212.0], [35.1, 2212.0], [35.2, 2212.0], [35.3, 2212.0], [35.4, 2212.0], [35.5, 2228.0], [35.6, 2228.0], [35.7, 2228.0], [35.8, 2228.0], [35.9, 2228.0], [36.0, 2228.0], [36.1, 2228.0], [36.2, 2228.0], [36.3, 2228.0], [36.4, 2228.0], [36.5, 2229.0], [36.6, 2229.0], [36.7, 2229.0], [36.8, 2229.0], [36.9, 2229.0], [37.0, 2231.0], [37.1, 2231.0], [37.2, 2231.0], [37.3, 2231.0], [37.4, 2231.0], [37.5, 2233.0], [37.6, 2233.0], [37.7, 2233.0], [37.8, 2233.0], [37.9, 2233.0], [38.0, 2234.0], [38.1, 2234.0], [38.2, 2234.0], [38.3, 2234.0], [38.4, 2234.0], [38.5, 2237.0], [38.6, 2237.0], [38.7, 2237.0], [38.8, 2237.0], [38.9, 2237.0], [39.0, 2238.0], [39.1, 2238.0], [39.2, 2238.0], [39.3, 2238.0], [39.4, 2238.0], [39.5, 2241.0], [39.6, 2241.0], [39.7, 2241.0], [39.8, 2241.0], [39.9, 2241.0], [40.0, 2251.0], [40.1, 2251.0], [40.2, 2251.0], [40.3, 2251.0], [40.4, 2251.0], [40.5, 2255.0], [40.6, 2255.0], [40.7, 2255.0], [40.8, 2255.0], [40.9, 2255.0], [41.0, 2262.0], [41.1, 2262.0], [41.2, 2262.0], [41.3, 2262.0], [41.4, 2262.0], [41.5, 2264.0], [41.6, 2264.0], [41.7, 2264.0], [41.8, 2264.0], [41.9, 2264.0], [42.0, 2268.0], [42.1, 2268.0], [42.2, 2268.0], [42.3, 2268.0], [42.4, 2268.0], [42.5, 2269.0], [42.6, 2269.0], [42.7, 2269.0], [42.8, 2269.0], [42.9, 2269.0], [43.0, 2270.0], [43.1, 2270.0], [43.2, 2270.0], [43.3, 2270.0], [43.4, 2270.0], [43.5, 2270.0], [43.6, 2270.0], [43.7, 2270.0], [43.8, 2270.0], [43.9, 2270.0], [44.0, 2271.0], [44.1, 2271.0], [44.2, 2271.0], [44.3, 2271.0], [44.4, 2271.0], [44.5, 2271.0], [44.6, 2271.0], [44.7, 2271.0], [44.8, 2271.0], [44.9, 2271.0], [45.0, 2275.0], [45.1, 2275.0], [45.2, 2275.0], [45.3, 2275.0], [45.4, 2275.0], [45.5, 2275.0], [45.6, 2275.0], [45.7, 2275.0], [45.8, 2275.0], [45.9, 2275.0], [46.0, 2276.0], [46.1, 2276.0], [46.2, 2276.0], [46.3, 2276.0], [46.4, 2276.0], [46.5, 2279.0], [46.6, 2279.0], [46.7, 2279.0], [46.8, 2279.0], [46.9, 2279.0], [47.0, 2282.0], [47.1, 2282.0], [47.2, 2282.0], [47.3, 2282.0], [47.4, 2282.0], [47.5, 2294.0], [47.6, 2294.0], [47.7, 2294.0], [47.8, 2294.0], [47.9, 2294.0], [48.0, 2295.0], [48.1, 2295.0], [48.2, 2295.0], [48.3, 2295.0], [48.4, 2295.0], [48.5, 2295.0], [48.6, 2295.0], [48.7, 2295.0], [48.8, 2295.0], [48.9, 2295.0], [49.0, 2297.0], [49.1, 2297.0], [49.2, 2297.0], [49.3, 2297.0], [49.4, 2297.0], [49.5, 2308.0], [49.6, 2308.0], [49.7, 2308.0], [49.8, 2308.0], [49.9, 2308.0], [50.0, 2314.0], [50.1, 2314.0], [50.2, 2314.0], [50.3, 2314.0], [50.4, 2314.0], [50.5, 2316.0], [50.6, 2316.0], [50.7, 2316.0], [50.8, 2316.0], [50.9, 2316.0], [51.0, 2319.0], [51.1, 2319.0], [51.2, 2319.0], [51.3, 2319.0], [51.4, 2319.0], [51.5, 2323.0], [51.6, 2323.0], [51.7, 2323.0], [51.8, 2323.0], [51.9, 2323.0], [52.0, 2323.0], [52.1, 2323.0], [52.2, 2323.0], [52.3, 2323.0], [52.4, 2323.0], [52.5, 2324.0], [52.6, 2324.0], [52.7, 2324.0], [52.8, 2324.0], [52.9, 2324.0], [53.0, 2324.0], [53.1, 2324.0], [53.2, 2324.0], [53.3, 2324.0], [53.4, 2324.0], [53.5, 2324.0], [53.6, 2324.0], [53.7, 2324.0], [53.8, 2324.0], [53.9, 2324.0], [54.0, 2325.0], [54.1, 2325.0], [54.2, 2325.0], [54.3, 2325.0], [54.4, 2325.0], [54.5, 2326.0], [54.6, 2326.0], [54.7, 2326.0], [54.8, 2326.0], [54.9, 2326.0], [55.0, 2329.0], [55.1, 2329.0], [55.2, 2329.0], [55.3, 2329.0], [55.4, 2329.0], [55.5, 2333.0], [55.6, 2333.0], [55.7, 2333.0], [55.8, 2333.0], [55.9, 2333.0], [56.0, 2336.0], [56.1, 2336.0], [56.2, 2336.0], [56.3, 2336.0], [56.4, 2336.0], [56.5, 2340.0], [56.6, 2340.0], [56.7, 2340.0], [56.8, 2340.0], [56.9, 2340.0], [57.0, 2347.0], [57.1, 2347.0], [57.2, 2347.0], [57.3, 2347.0], [57.4, 2347.0], [57.5, 2348.0], [57.6, 2348.0], [57.7, 2348.0], [57.8, 2348.0], [57.9, 2348.0], [58.0, 2348.0], [58.1, 2348.0], [58.2, 2348.0], [58.3, 2348.0], [58.4, 2348.0], [58.5, 2349.0], [58.6, 2349.0], [58.7, 2349.0], [58.8, 2349.0], [58.9, 2349.0], [59.0, 2350.0], [59.1, 2350.0], [59.2, 2350.0], [59.3, 2350.0], [59.4, 2350.0], [59.5, 2356.0], [59.6, 2356.0], [59.7, 2356.0], [59.8, 2356.0], [59.9, 2356.0], [60.0, 2356.0], [60.1, 2356.0], [60.2, 2356.0], [60.3, 2356.0], [60.4, 2356.0], [60.5, 2359.0], [60.6, 2359.0], [60.7, 2359.0], [60.8, 2359.0], [60.9, 2359.0], [61.0, 2362.0], [61.1, 2362.0], [61.2, 2362.0], [61.3, 2362.0], [61.4, 2362.0], [61.5, 2363.0], [61.6, 2363.0], [61.7, 2363.0], [61.8, 2363.0], [61.9, 2363.0], [62.0, 2364.0], [62.1, 2364.0], [62.2, 2364.0], [62.3, 2364.0], [62.4, 2364.0], [62.5, 2364.0], [62.6, 2364.0], [62.7, 2364.0], [62.8, 2364.0], [62.9, 2364.0], [63.0, 2365.0], [63.1, 2365.0], [63.2, 2365.0], [63.3, 2365.0], [63.4, 2365.0], [63.5, 2372.0], [63.6, 2372.0], [63.7, 2372.0], [63.8, 2372.0], [63.9, 2372.0], [64.0, 2373.0], [64.1, 2373.0], [64.2, 2373.0], [64.3, 2373.0], [64.4, 2373.0], [64.5, 2377.0], [64.6, 2377.0], [64.7, 2377.0], [64.8, 2377.0], [64.9, 2377.0], [65.0, 2379.0], [65.1, 2379.0], [65.2, 2379.0], [65.3, 2379.0], [65.4, 2379.0], [65.5, 2388.0], [65.6, 2388.0], [65.7, 2388.0], [65.8, 2388.0], [65.9, 2388.0], [66.0, 2389.0], [66.1, 2389.0], [66.2, 2389.0], [66.3, 2389.0], [66.4, 2389.0], [66.5, 2392.0], [66.6, 2392.0], [66.7, 2392.0], [66.8, 2392.0], [66.9, 2392.0], [67.0, 2399.0], [67.1, 2399.0], [67.2, 2399.0], [67.3, 2399.0], [67.4, 2399.0], [67.5, 2404.0], [67.6, 2404.0], [67.7, 2404.0], [67.8, 2404.0], [67.9, 2404.0], [68.0, 2404.0], [68.1, 2404.0], [68.2, 2404.0], [68.3, 2404.0], [68.4, 2404.0], [68.5, 2410.0], [68.6, 2410.0], [68.7, 2410.0], [68.8, 2410.0], [68.9, 2410.0], [69.0, 2412.0], [69.1, 2412.0], [69.2, 2412.0], [69.3, 2412.0], [69.4, 2412.0], [69.5, 2414.0], [69.6, 2414.0], [69.7, 2414.0], [69.8, 2414.0], [69.9, 2414.0], [70.0, 2433.0], [70.1, 2433.0], [70.2, 2433.0], [70.3, 2433.0], [70.4, 2433.0], [70.5, 2437.0], [70.6, 2437.0], [70.7, 2437.0], [70.8, 2437.0], [70.9, 2437.0], [71.0, 2439.0], [71.1, 2439.0], [71.2, 2439.0], [71.3, 2439.0], [71.4, 2439.0], [71.5, 2455.0], [71.6, 2455.0], [71.7, 2455.0], [71.8, 2455.0], [71.9, 2455.0], [72.0, 2457.0], [72.1, 2457.0], [72.2, 2457.0], [72.3, 2457.0], [72.4, 2457.0], [72.5, 2457.0], [72.6, 2457.0], [72.7, 2457.0], [72.8, 2457.0], [72.9, 2457.0], [73.0, 2467.0], [73.1, 2467.0], [73.2, 2467.0], [73.3, 2467.0], [73.4, 2467.0], [73.5, 2468.0], [73.6, 2468.0], [73.7, 2468.0], [73.8, 2468.0], [73.9, 2468.0], [74.0, 2468.0], [74.1, 2468.0], [74.2, 2468.0], [74.3, 2468.0], [74.4, 2468.0], [74.5, 2470.0], [74.6, 2470.0], [74.7, 2470.0], [74.8, 2470.0], [74.9, 2470.0], [75.0, 2470.0], [75.1, 2470.0], [75.2, 2470.0], [75.3, 2470.0], [75.4, 2470.0], [75.5, 2473.0], [75.6, 2473.0], [75.7, 2473.0], [75.8, 2473.0], [75.9, 2473.0], [76.0, 2478.0], [76.1, 2478.0], [76.2, 2478.0], [76.3, 2478.0], [76.4, 2478.0], [76.5, 2480.0], [76.6, 2480.0], [76.7, 2480.0], [76.8, 2480.0], [76.9, 2480.0], [77.0, 2480.0], [77.1, 2480.0], [77.2, 2480.0], [77.3, 2480.0], [77.4, 2480.0], [77.5, 2491.0], [77.6, 2491.0], [77.7, 2491.0], [77.8, 2491.0], [77.9, 2491.0], [78.0, 2499.0], [78.1, 2499.0], [78.2, 2499.0], [78.3, 2499.0], [78.4, 2499.0], [78.5, 2507.0], [78.6, 2507.0], [78.7, 2507.0], [78.8, 2507.0], [78.9, 2507.0], [79.0, 2529.0], [79.1, 2529.0], [79.2, 2529.0], [79.3, 2529.0], [79.4, 2529.0], [79.5, 2534.0], [79.6, 2534.0], [79.7, 2534.0], [79.8, 2534.0], [79.9, 2534.0], [80.0, 2539.0], [80.1, 2539.0], [80.2, 2539.0], [80.3, 2539.0], [80.4, 2539.0], [80.5, 2544.0], [80.6, 2544.0], [80.7, 2544.0], [80.8, 2544.0], [80.9, 2544.0], [81.0, 2571.0], [81.1, 2571.0], [81.2, 2571.0], [81.3, 2571.0], [81.4, 2571.0], [81.5, 2598.0], [81.6, 2598.0], [81.7, 2598.0], [81.8, 2598.0], [81.9, 2598.0], [82.0, 2602.0], [82.1, 2602.0], [82.2, 2602.0], [82.3, 2602.0], [82.4, 2602.0], [82.5, 2615.0], [82.6, 2615.0], [82.7, 2615.0], [82.8, 2615.0], [82.9, 2615.0], [83.0, 2618.0], [83.1, 2618.0], [83.2, 2618.0], [83.3, 2618.0], [83.4, 2618.0], [83.5, 2632.0], [83.6, 2632.0], [83.7, 2632.0], [83.8, 2632.0], [83.9, 2632.0], [84.0, 2680.0], [84.1, 2680.0], [84.2, 2680.0], [84.3, 2680.0], [84.4, 2680.0], [84.5, 2681.0], [84.6, 2681.0], [84.7, 2681.0], [84.8, 2681.0], [84.9, 2681.0], [85.0, 2695.0], [85.1, 2695.0], [85.2, 2695.0], [85.3, 2695.0], [85.4, 2695.0], [85.5, 2697.0], [85.6, 2697.0], [85.7, 2697.0], [85.8, 2697.0], [85.9, 2697.0], [86.0, 2698.0], [86.1, 2698.0], [86.2, 2698.0], [86.3, 2698.0], [86.4, 2698.0], [86.5, 2700.0], [86.6, 2700.0], [86.7, 2700.0], [86.8, 2700.0], [86.9, 2700.0], [87.0, 2709.0], [87.1, 2709.0], [87.2, 2709.0], [87.3, 2709.0], [87.4, 2709.0], [87.5, 2724.0], [87.6, 2724.0], [87.7, 2724.0], [87.8, 2724.0], [87.9, 2724.0], [88.0, 2727.0], [88.1, 2727.0], [88.2, 2727.0], [88.3, 2727.0], [88.4, 2727.0], [88.5, 2728.0], [88.6, 2728.0], [88.7, 2728.0], [88.8, 2728.0], [88.9, 2728.0], [89.0, 2729.0], [89.1, 2729.0], [89.2, 2729.0], [89.3, 2729.0], [89.4, 2729.0], [89.5, 2732.0], [89.6, 2732.0], [89.7, 2732.0], [89.8, 2732.0], [89.9, 2732.0], [90.0, 2738.0], [90.1, 2738.0], [90.2, 2738.0], [90.3, 2738.0], [90.4, 2738.0], [90.5, 2743.0], [90.6, 2743.0], [90.7, 2743.0], [90.8, 2743.0], [90.9, 2743.0], [91.0, 2749.0], [91.1, 2749.0], [91.2, 2749.0], [91.3, 2749.0], [91.4, 2749.0], [91.5, 2764.0], [91.6, 2764.0], [91.7, 2764.0], [91.8, 2764.0], [91.9, 2764.0], [92.0, 2770.0], [92.1, 2770.0], [92.2, 2770.0], [92.3, 2770.0], [92.4, 2770.0], [92.5, 2774.0], [92.6, 2774.0], [92.7, 2774.0], [92.8, 2774.0], [92.9, 2774.0], [93.0, 2776.0], [93.1, 2776.0], [93.2, 2776.0], [93.3, 2776.0], [93.4, 2776.0], [93.5, 2776.0], [93.6, 2776.0], [93.7, 2776.0], [93.8, 2776.0], [93.9, 2776.0], [94.0, 2783.0], [94.1, 2783.0], [94.2, 2783.0], [94.3, 2783.0], [94.4, 2783.0], [94.5, 2813.0], [94.6, 2813.0], [94.7, 2813.0], [94.8, 2813.0], [94.9, 2813.0], [95.0, 2814.0], [95.1, 2814.0], [95.2, 2814.0], [95.3, 2814.0], [95.4, 2814.0], [95.5, 2816.0], [95.6, 2816.0], [95.7, 2816.0], [95.8, 2816.0], [95.9, 2816.0], [96.0, 2819.0], [96.1, 2819.0], [96.2, 2819.0], [96.3, 2819.0], [96.4, 2819.0], [96.5, 2838.0], [96.6, 2838.0], [96.7, 2838.0], [96.8, 2838.0], [96.9, 2838.0], [97.0, 2845.0], [97.1, 2845.0], [97.2, 2845.0], [97.3, 2845.0], [97.4, 2845.0], [97.5, 2847.0], [97.6, 2847.0], [97.7, 2847.0], [97.8, 2847.0], [97.9, 2847.0], [98.0, 2853.0], [98.1, 2853.0], [98.2, 2853.0], [98.3, 2853.0], [98.4, 2853.0], [98.5, 2859.0], [98.6, 2859.0], [98.7, 2859.0], [98.8, 2859.0], [98.9, 2859.0], [99.0, 2868.0], [99.1, 2868.0], [99.2, 2868.0], [99.3, 2868.0], [99.4, 2868.0], [99.5, 2887.0], [99.6, 2887.0], [99.7, 2887.0], [99.8, 2887.0], [99.9, 2887.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[0.0, 1794.0], [0.1, 1794.0], [0.2, 1794.0], [0.3, 1794.0], [0.4, 1794.0], [0.5, 2040.0], [0.6, 2040.0], [0.7, 2040.0], [0.8, 2040.0], [0.9, 2040.0], [1.0, 2043.0], [1.1, 2043.0], [1.2, 2043.0], [1.3, 2043.0], [1.4, 2043.0], [1.5, 2046.0], [1.6, 2046.0], [1.7, 2046.0], [1.8, 2046.0], [1.9, 2046.0], [2.0, 2058.0], [2.1, 2058.0], [2.2, 2058.0], [2.3, 2058.0], [2.4, 2058.0], [2.5, 2076.0], [2.6, 2076.0], [2.7, 2076.0], [2.8, 2076.0], [2.9, 2076.0], [3.0, 2076.0], [3.1, 2076.0], [3.2, 2076.0], [3.3, 2076.0], [3.4, 2076.0], [3.5, 2090.0], [3.6, 2090.0], [3.7, 2090.0], [3.8, 2090.0], [3.9, 2090.0], [4.0, 2093.0], [4.1, 2093.0], [4.2, 2093.0], [4.3, 2093.0], [4.4, 2093.0], [4.5, 2094.0], [4.6, 2094.0], [4.7, 2094.0], [4.8, 2094.0], [4.9, 2094.0], [5.0, 2094.0], [5.1, 2094.0], [5.2, 2094.0], [5.3, 2094.0], [5.4, 2094.0], [5.5, 2097.0], [5.6, 2097.0], [5.7, 2097.0], [5.8, 2097.0], [5.9, 2097.0], [6.0, 2098.0], [6.1, 2098.0], [6.2, 2098.0], [6.3, 2098.0], [6.4, 2098.0], [6.5, 2108.0], [6.6, 2108.0], [6.7, 2108.0], [6.8, 2108.0], [6.9, 2108.0], [7.0, 2111.0], [7.1, 2111.0], [7.2, 2111.0], [7.3, 2111.0], [7.4, 2111.0], [7.5, 2112.0], [7.6, 2112.0], [7.7, 2112.0], [7.8, 2112.0], [7.9, 2112.0], [8.0, 2112.0], [8.1, 2112.0], [8.2, 2112.0], [8.3, 2112.0], [8.4, 2112.0], [8.5, 2113.0], [8.6, 2113.0], [8.7, 2113.0], [8.8, 2113.0], [8.9, 2113.0], [9.0, 2115.0], [9.1, 2115.0], [9.2, 2115.0], [9.3, 2115.0], [9.4, 2115.0], [9.5, 2115.0], [9.6, 2115.0], [9.7, 2115.0], [9.8, 2115.0], [9.9, 2115.0], [10.0, 2118.0], [10.1, 2118.0], [10.2, 2118.0], [10.3, 2118.0], [10.4, 2118.0], [10.5, 2133.0], [10.6, 2133.0], [10.7, 2133.0], [10.8, 2133.0], [10.9, 2133.0], [11.0, 2134.0], [11.1, 2134.0], [11.2, 2134.0], [11.3, 2134.0], [11.4, 2134.0], [11.5, 2139.0], [11.6, 2139.0], [11.7, 2139.0], [11.8, 2139.0], [11.9, 2139.0], [12.0, 2139.0], [12.1, 2139.0], [12.2, 2139.0], [12.3, 2139.0], [12.4, 2139.0], [12.5, 2140.0], [12.6, 2140.0], [12.7, 2140.0], [12.8, 2140.0], [12.9, 2140.0], [13.0, 2141.0], [13.1, 2141.0], [13.2, 2141.0], [13.3, 2141.0], [13.4, 2141.0], [13.5, 2142.0], [13.6, 2142.0], [13.7, 2142.0], [13.8, 2142.0], [13.9, 2142.0], [14.0, 2144.0], [14.1, 2144.0], [14.2, 2144.0], [14.3, 2144.0], [14.4, 2144.0], [14.5, 2147.0], [14.6, 2147.0], [14.7, 2147.0], [14.8, 2147.0], [14.9, 2147.0], [15.0, 2151.0], [15.1, 2151.0], [15.2, 2151.0], [15.3, 2151.0], [15.4, 2151.0], [15.5, 2153.0], [15.6, 2153.0], [15.7, 2153.0], [15.8, 2153.0], [15.9, 2153.0], [16.0, 2160.0], [16.1, 2160.0], [16.2, 2160.0], [16.3, 2160.0], [16.4, 2160.0], [16.5, 2165.0], [16.6, 2165.0], [16.7, 2165.0], [16.8, 2165.0], [16.9, 2165.0], [17.0, 2166.0], [17.1, 2166.0], [17.2, 2166.0], [17.3, 2166.0], [17.4, 2166.0], [17.5, 2174.0], [17.6, 2174.0], [17.7, 2174.0], [17.8, 2174.0], [17.9, 2174.0], [18.0, 2175.0], [18.1, 2175.0], [18.2, 2175.0], [18.3, 2175.0], [18.4, 2175.0], [18.5, 2178.0], [18.6, 2178.0], [18.7, 2178.0], [18.8, 2178.0], [18.9, 2178.0], [19.0, 2181.0], [19.1, 2181.0], [19.2, 2181.0], [19.3, 2181.0], [19.4, 2181.0], [19.5, 2188.0], [19.6, 2188.0], [19.7, 2188.0], [19.8, 2188.0], [19.9, 2188.0], [20.0, 2195.0], [20.1, 2195.0], [20.2, 2195.0], [20.3, 2195.0], [20.4, 2195.0], [20.5, 2196.0], [20.6, 2196.0], [20.7, 2196.0], [20.8, 2196.0], [20.9, 2196.0], [21.0, 2217.0], [21.1, 2217.0], [21.2, 2217.0], [21.3, 2217.0], [21.4, 2217.0], [21.5, 2219.0], [21.6, 2219.0], [21.7, 2219.0], [21.8, 2219.0], [21.9, 2219.0], [22.0, 2220.0], [22.1, 2220.0], [22.2, 2220.0], [22.3, 2220.0], [22.4, 2220.0], [22.5, 2228.0], [22.6, 2228.0], [22.7, 2228.0], [22.8, 2228.0], [22.9, 2228.0], [23.0, 2230.0], [23.1, 2230.0], [23.2, 2230.0], [23.3, 2230.0], [23.4, 2230.0], [23.5, 2233.0], [23.6, 2233.0], [23.7, 2233.0], [23.8, 2233.0], [23.9, 2233.0], [24.0, 2254.0], [24.1, 2254.0], [24.2, 2254.0], [24.3, 2254.0], [24.4, 2254.0], [24.5, 2301.0], [24.6, 2301.0], [24.7, 2301.0], [24.8, 2301.0], [24.9, 2301.0], [25.0, 2314.0], [25.1, 2314.0], [25.2, 2314.0], [25.3, 2314.0], [25.4, 2314.0], [25.5, 2321.0], [25.6, 2321.0], [25.7, 2321.0], [25.8, 2321.0], [25.9, 2321.0], [26.0, 2342.0], [26.1, 2342.0], [26.2, 2342.0], [26.3, 2342.0], [26.4, 2342.0], [26.5, 2344.0], [26.6, 2344.0], [26.7, 2344.0], [26.8, 2344.0], [26.9, 2344.0], [27.0, 2349.0], [27.1, 2349.0], [27.2, 2349.0], [27.3, 2349.0], [27.4, 2349.0], [27.5, 2350.0], [27.6, 2350.0], [27.7, 2350.0], [27.8, 2350.0], [27.9, 2350.0], [28.0, 2376.0], [28.1, 2376.0], [28.2, 2376.0], [28.3, 2376.0], [28.4, 2376.0], [28.5, 2377.0], [28.6, 2377.0], [28.7, 2377.0], [28.8, 2377.0], [28.9, 2377.0], [29.0, 2380.0], [29.1, 2380.0], [29.2, 2380.0], [29.3, 2380.0], [29.4, 2380.0], [29.5, 2386.0], [29.6, 2386.0], [29.7, 2386.0], [29.8, 2386.0], [29.9, 2386.0], [30.0, 2388.0], [30.1, 2388.0], [30.2, 2388.0], [30.3, 2388.0], [30.4, 2388.0], [30.5, 2391.0], [30.6, 2391.0], [30.7, 2391.0], [30.8, 2391.0], [30.9, 2391.0], [31.0, 2406.0], [31.1, 2406.0], [31.2, 2406.0], [31.3, 2406.0], [31.4, 2406.0], [31.5, 2428.0], [31.6, 2428.0], [31.7, 2428.0], [31.8, 2428.0], [31.9, 2428.0], [32.0, 2436.0], [32.1, 2436.0], [32.2, 2436.0], [32.3, 2436.0], [32.4, 2436.0], [32.5, 2437.0], [32.6, 2437.0], [32.7, 2437.0], [32.8, 2437.0], [32.9, 2437.0], [33.0, 2443.0], [33.1, 2443.0], [33.2, 2443.0], [33.3, 2443.0], [33.4, 2443.0], [33.5, 2453.0], [33.6, 2453.0], [33.7, 2453.0], [33.8, 2453.0], [33.9, 2453.0], [34.0, 2469.0], [34.1, 2469.0], [34.2, 2469.0], [34.3, 2469.0], [34.4, 2469.0], [34.5, 2470.0], [34.6, 2470.0], [34.7, 2470.0], [34.8, 2470.0], [34.9, 2470.0], [35.0, 2476.0], [35.1, 2476.0], [35.2, 2476.0], [35.3, 2476.0], [35.4, 2476.0], [35.5, 2482.0], [35.6, 2482.0], [35.7, 2482.0], [35.8, 2482.0], [35.9, 2482.0], [36.0, 2486.0], [36.1, 2486.0], [36.2, 2486.0], [36.3, 2486.0], [36.4, 2486.0], [36.5, 2492.0], [36.6, 2492.0], [36.7, 2492.0], [36.8, 2492.0], [36.9, 2492.0], [37.0, 2496.0], [37.1, 2496.0], [37.2, 2496.0], [37.3, 2496.0], [37.4, 2496.0], [37.5, 2496.0], [37.6, 2496.0], [37.7, 2496.0], [37.8, 2496.0], [37.9, 2496.0], [38.0, 2500.0], [38.1, 2500.0], [38.2, 2500.0], [38.3, 2500.0], [38.4, 2500.0], [38.5, 2506.0], [38.6, 2506.0], [38.7, 2506.0], [38.8, 2506.0], [38.9, 2506.0], [39.0, 2522.0], [39.1, 2522.0], [39.2, 2522.0], [39.3, 2522.0], [39.4, 2522.0], [39.5, 2526.0], [39.6, 2526.0], [39.7, 2526.0], [39.8, 2526.0], [39.9, 2526.0], [40.0, 2527.0], [40.1, 2527.0], [40.2, 2527.0], [40.3, 2527.0], [40.4, 2527.0], [40.5, 2529.0], [40.6, 2529.0], [40.7, 2529.0], [40.8, 2529.0], [40.9, 2529.0], [41.0, 2532.0], [41.1, 2532.0], [41.2, 2532.0], [41.3, 2532.0], [41.4, 2532.0], [41.5, 2537.0], [41.6, 2537.0], [41.7, 2537.0], [41.8, 2537.0], [41.9, 2537.0], [42.0, 2538.0], [42.1, 2538.0], [42.2, 2538.0], [42.3, 2538.0], [42.4, 2538.0], [42.5, 2540.0], [42.6, 2540.0], [42.7, 2540.0], [42.8, 2540.0], [42.9, 2540.0], [43.0, 2546.0], [43.1, 2546.0], [43.2, 2546.0], [43.3, 2546.0], [43.4, 2546.0], [43.5, 2559.0], [43.6, 2559.0], [43.7, 2559.0], [43.8, 2559.0], [43.9, 2559.0], [44.0, 2560.0], [44.1, 2560.0], [44.2, 2560.0], [44.3, 2560.0], [44.4, 2560.0], [44.5, 2569.0], [44.6, 2569.0], [44.7, 2569.0], [44.8, 2569.0], [44.9, 2569.0], [45.0, 2574.0], [45.1, 2574.0], [45.2, 2574.0], [45.3, 2574.0], [45.4, 2574.0], [45.5, 2581.0], [45.6, 2581.0], [45.7, 2581.0], [45.8, 2581.0], [45.9, 2581.0], [46.0, 2583.0], [46.1, 2583.0], [46.2, 2583.0], [46.3, 2583.0], [46.4, 2583.0], [46.5, 2584.0], [46.6, 2584.0], [46.7, 2584.0], [46.8, 2584.0], [46.9, 2584.0], [47.0, 2584.0], [47.1, 2584.0], [47.2, 2584.0], [47.3, 2584.0], [47.4, 2584.0], [47.5, 2591.0], [47.6, 2591.0], [47.7, 2591.0], [47.8, 2591.0], [47.9, 2591.0], [48.0, 2606.0], [48.1, 2606.0], [48.2, 2606.0], [48.3, 2606.0], [48.4, 2606.0], [48.5, 2607.0], [48.6, 2607.0], [48.7, 2607.0], [48.8, 2607.0], [48.9, 2607.0], [49.0, 2609.0], [49.1, 2609.0], [49.2, 2609.0], [49.3, 2609.0], [49.4, 2609.0], [49.5, 2617.0], [49.6, 2617.0], [49.7, 2617.0], [49.8, 2617.0], [49.9, 2617.0], [50.0, 2640.0], [50.1, 2640.0], [50.2, 2640.0], [50.3, 2640.0], [50.4, 2640.0], [50.5, 2658.0], [50.6, 2658.0], [50.7, 2658.0], [50.8, 2658.0], [50.9, 2658.0], [51.0, 2669.0], [51.1, 2669.0], [51.2, 2669.0], [51.3, 2669.0], [51.4, 2669.0], [51.5, 2758.0], [51.6, 2758.0], [51.7, 2758.0], [51.8, 2758.0], [51.9, 2758.0], [52.0, 2821.0], [52.1, 2821.0], [52.2, 2821.0], [52.3, 2821.0], [52.4, 2821.0], [52.5, 2821.0], [52.6, 2821.0], [52.7, 2821.0], [52.8, 2821.0], [52.9, 2821.0], [53.0, 2840.0], [53.1, 2840.0], [53.2, 2840.0], [53.3, 2840.0], [53.4, 2840.0], [53.5, 2881.0], [53.6, 2881.0], [53.7, 2881.0], [53.8, 2881.0], [53.9, 2881.0], [54.0, 2928.0], [54.1, 2928.0], [54.2, 2928.0], [54.3, 2928.0], [54.4, 2928.0], [54.5, 2936.0], [54.6, 2936.0], [54.7, 2936.0], [54.8, 2936.0], [54.9, 2936.0], [55.0, 2966.0], [55.1, 2966.0], [55.2, 2966.0], [55.3, 2966.0], [55.4, 2966.0], [55.5, 2993.0], [55.6, 2993.0], [55.7, 2993.0], [55.8, 2993.0], [55.9, 2993.0], [56.0, 2994.0], [56.1, 2994.0], [56.2, 2994.0], [56.3, 2994.0], [56.4, 2994.0], [56.5, 3049.0], [56.6, 3049.0], [56.7, 3049.0], [56.8, 3049.0], [56.9, 3049.0], [57.0, 3068.0], [57.1, 3068.0], [57.2, 3068.0], [57.3, 3068.0], [57.4, 3068.0], [57.5, 3118.0], [57.6, 3118.0], [57.7, 3118.0], [57.8, 3118.0], [57.9, 3118.0], [58.0, 3132.0], [58.1, 3132.0], [58.2, 3132.0], [58.3, 3132.0], [58.4, 3132.0], [58.5, 3161.0], [58.6, 3161.0], [58.7, 3161.0], [58.8, 3161.0], [58.9, 3161.0], [59.0, 3177.0], [59.1, 3177.0], [59.2, 3177.0], [59.3, 3177.0], [59.4, 3177.0], [59.5, 3178.0], [59.6, 3178.0], [59.7, 3178.0], [59.8, 3178.0], [59.9, 3178.0], [60.0, 3179.0], [60.1, 3179.0], [60.2, 3179.0], [60.3, 3179.0], [60.4, 3179.0], [60.5, 3185.0], [60.6, 3185.0], [60.7, 3185.0], [60.8, 3185.0], [60.9, 3185.0], [61.0, 3208.0], [61.1, 3208.0], [61.2, 3208.0], [61.3, 3208.0], [61.4, 3208.0], [61.5, 3214.0], [61.6, 3214.0], [61.7, 3214.0], [61.8, 3214.0], [61.9, 3214.0], [62.0, 3216.0], [62.1, 3216.0], [62.2, 3216.0], [62.3, 3216.0], [62.4, 3216.0], [62.5, 3220.0], [62.6, 3220.0], [62.7, 3220.0], [62.8, 3220.0], [62.9, 3220.0], [63.0, 3224.0], [63.1, 3224.0], [63.2, 3224.0], [63.3, 3224.0], [63.4, 3224.0], [63.5, 3240.0], [63.6, 3240.0], [63.7, 3240.0], [63.8, 3240.0], [63.9, 3240.0], [64.0, 3245.0], [64.1, 3245.0], [64.2, 3245.0], [64.3, 3245.0], [64.4, 3245.0], [64.5, 3246.0], [64.6, 3246.0], [64.7, 3246.0], [64.8, 3246.0], [64.9, 3246.0], [65.0, 3253.0], [65.1, 3253.0], [65.2, 3253.0], [65.3, 3253.0], [65.4, 3253.0], [65.5, 3264.0], [65.6, 3264.0], [65.7, 3264.0], [65.8, 3264.0], [65.9, 3264.0], [66.0, 3275.0], [66.1, 3275.0], [66.2, 3275.0], [66.3, 3275.0], [66.4, 3275.0], [66.5, 3276.0], [66.6, 3276.0], [66.7, 3276.0], [66.8, 3276.0], [66.9, 3276.0], [67.0, 3278.0], [67.1, 3278.0], [67.2, 3278.0], [67.3, 3278.0], [67.4, 3278.0], [67.5, 3284.0], [67.6, 3284.0], [67.7, 3284.0], [67.8, 3284.0], [67.9, 3284.0], [68.0, 3296.0], [68.1, 3296.0], [68.2, 3296.0], [68.3, 3296.0], [68.4, 3296.0], [68.5, 3297.0], [68.6, 3297.0], [68.7, 3297.0], [68.8, 3297.0], [68.9, 3297.0], [69.0, 3323.0], [69.1, 3323.0], [69.2, 3323.0], [69.3, 3323.0], [69.4, 3323.0], [69.5, 3327.0], [69.6, 3327.0], [69.7, 3327.0], [69.8, 3327.0], [69.9, 3327.0], [70.0, 3333.0], [70.1, 3333.0], [70.2, 3333.0], [70.3, 3333.0], [70.4, 3333.0], [70.5, 3345.0], [70.6, 3345.0], [70.7, 3345.0], [70.8, 3345.0], [70.9, 3345.0], [71.0, 3346.0], [71.1, 3346.0], [71.2, 3346.0], [71.3, 3346.0], [71.4, 3346.0], [71.5, 3346.0], [71.6, 3346.0], [71.7, 3346.0], [71.8, 3346.0], [71.9, 3346.0], [72.0, 3351.0], [72.1, 3351.0], [72.2, 3351.0], [72.3, 3351.0], [72.4, 3351.0], [72.5, 3351.0], [72.6, 3351.0], [72.7, 3351.0], [72.8, 3351.0], [72.9, 3351.0], [73.0, 3352.0], [73.1, 3352.0], [73.2, 3352.0], [73.3, 3352.0], [73.4, 3352.0], [73.5, 3352.0], [73.6, 3352.0], [73.7, 3352.0], [73.8, 3352.0], [73.9, 3352.0], [74.0, 3361.0], [74.1, 3361.0], [74.2, 3361.0], [74.3, 3361.0], [74.4, 3361.0], [74.5, 3366.0], [74.6, 3366.0], [74.7, 3366.0], [74.8, 3366.0], [74.9, 3366.0], [75.0, 3369.0], [75.1, 3369.0], [75.2, 3369.0], [75.3, 3369.0], [75.4, 3369.0], [75.5, 3372.0], [75.6, 3372.0], [75.7, 3372.0], [75.8, 3372.0], [75.9, 3372.0], [76.0, 3372.0], [76.1, 3372.0], [76.2, 3372.0], [76.3, 3372.0], [76.4, 3372.0], [76.5, 3380.0], [76.6, 3380.0], [76.7, 3380.0], [76.8, 3380.0], [76.9, 3380.0], [77.0, 3380.0], [77.1, 3380.0], [77.2, 3380.0], [77.3, 3380.0], [77.4, 3380.0], [77.5, 3381.0], [77.6, 3381.0], [77.7, 3381.0], [77.8, 3381.0], [77.9, 3381.0], [78.0, 3384.0], [78.1, 3384.0], [78.2, 3384.0], [78.3, 3384.0], [78.4, 3384.0], [78.5, 3386.0], [78.6, 3386.0], [78.7, 3386.0], [78.8, 3386.0], [78.9, 3386.0], [79.0, 3387.0], [79.1, 3387.0], [79.2, 3387.0], [79.3, 3387.0], [79.4, 3387.0], [79.5, 3396.0], [79.6, 3396.0], [79.7, 3396.0], [79.8, 3396.0], [79.9, 3396.0], [80.0, 3397.0], [80.1, 3397.0], [80.2, 3397.0], [80.3, 3397.0], [80.4, 3397.0], [80.5, 3397.0], [80.6, 3397.0], [80.7, 3397.0], [80.8, 3397.0], [80.9, 3397.0], [81.0, 3397.0], [81.1, 3397.0], [81.2, 3397.0], [81.3, 3397.0], [81.4, 3397.0], [81.5, 3399.0], [81.6, 3399.0], [81.7, 3399.0], [81.8, 3399.0], [81.9, 3399.0], [82.0, 3400.0], [82.1, 3400.0], [82.2, 3400.0], [82.3, 3400.0], [82.4, 3400.0], [82.5, 3401.0], [82.6, 3401.0], [82.7, 3401.0], [82.8, 3401.0], [82.9, 3401.0], [83.0, 3403.0], [83.1, 3403.0], [83.2, 3403.0], [83.3, 3403.0], [83.4, 3403.0], [83.5, 3404.0], [83.6, 3404.0], [83.7, 3404.0], [83.8, 3404.0], [83.9, 3404.0], [84.0, 3405.0], [84.1, 3405.0], [84.2, 3405.0], [84.3, 3405.0], [84.4, 3405.0], [84.5, 3406.0], [84.6, 3406.0], [84.7, 3406.0], [84.8, 3406.0], [84.9, 3406.0], [85.0, 3408.0], [85.1, 3408.0], [85.2, 3408.0], [85.3, 3408.0], [85.4, 3408.0], [85.5, 3411.0], [85.6, 3411.0], [85.7, 3411.0], [85.8, 3411.0], [85.9, 3411.0], [86.0, 3418.0], [86.1, 3418.0], [86.2, 3418.0], [86.3, 3418.0], [86.4, 3418.0], [86.5, 3425.0], [86.6, 3425.0], [86.7, 3425.0], [86.8, 3425.0], [86.9, 3425.0], [87.0, 3436.0], [87.1, 3436.0], [87.2, 3436.0], [87.3, 3436.0], [87.4, 3436.0], [87.5, 3442.0], [87.6, 3442.0], [87.7, 3442.0], [87.8, 3442.0], [87.9, 3442.0], [88.0, 3442.0], [88.1, 3442.0], [88.2, 3442.0], [88.3, 3442.0], [88.4, 3442.0], [88.5, 3445.0], [88.6, 3445.0], [88.7, 3445.0], [88.8, 3445.0], [88.9, 3445.0], [89.0, 3451.0], [89.1, 3451.0], [89.2, 3451.0], [89.3, 3451.0], [89.4, 3451.0], [89.5, 3457.0], [89.6, 3457.0], [89.7, 3457.0], [89.8, 3457.0], [89.9, 3457.0], [90.0, 3457.0], [90.1, 3457.0], [90.2, 3457.0], [90.3, 3457.0], [90.4, 3457.0], [90.5, 3460.0], [90.6, 3460.0], [90.7, 3460.0], [90.8, 3460.0], [90.9, 3460.0], [91.0, 3462.0], [91.1, 3462.0], [91.2, 3462.0], [91.3, 3462.0], [91.4, 3462.0], [91.5, 3476.0], [91.6, 3476.0], [91.7, 3476.0], [91.8, 3476.0], [91.9, 3476.0], [92.0, 3479.0], [92.1, 3479.0], [92.2, 3479.0], [92.3, 3479.0], [92.4, 3479.0], [92.5, 3494.0], [92.6, 3494.0], [92.7, 3494.0], [92.8, 3494.0], [92.9, 3494.0], [93.0, 3496.0], [93.1, 3496.0], [93.2, 3496.0], [93.3, 3496.0], [93.4, 3496.0], [93.5, 3498.0], [93.6, 3498.0], [93.7, 3498.0], [93.8, 3498.0], [93.9, 3498.0], [94.0, 3501.0], [94.1, 3501.0], [94.2, 3501.0], [94.3, 3501.0], [94.4, 3501.0], [94.5, 3509.0], [94.6, 3509.0], [94.7, 3509.0], [94.8, 3509.0], [94.9, 3509.0], [95.0, 3510.0], [95.1, 3510.0], [95.2, 3510.0], [95.3, 3510.0], [95.4, 3510.0], [95.5, 3513.0], [95.6, 3513.0], [95.7, 3513.0], [95.8, 3513.0], [95.9, 3513.0], [96.0, 3515.0], [96.1, 3515.0], [96.2, 3515.0], [96.3, 3515.0], [96.4, 3515.0], [96.5, 3523.0], [96.6, 3523.0], [96.7, 3523.0], [96.8, 3523.0], [96.9, 3523.0], [97.0, 3525.0], [97.1, 3525.0], [97.2, 3525.0], [97.3, 3525.0], [97.4, 3525.0], [97.5, 3530.0], [97.6, 3530.0], [97.7, 3530.0], [97.8, 3530.0], [97.9, 3530.0], [98.0, 3559.0], [98.1, 3559.0], [98.2, 3559.0], [98.3, 3559.0], [98.4, 3559.0], [98.5, 3562.0], [98.6, 3562.0], [98.7, 3562.0], [98.8, 3562.0], [98.9, 3562.0], [99.0, 3566.0], [99.1, 3566.0], [99.2, 3566.0], [99.3, 3566.0], [99.4, 3566.0], [99.5, 3577.0], [99.6, 3577.0], [99.7, 3577.0], [99.8, 3577.0], [99.9, 3577.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1300.0, "maxY": 54.0, "series": [{"data": [[2100.0, 5.0], [2300.0, 8.0], [2200.0, 17.0], [2400.0, 23.0], [2500.0, 14.0], [2700.0, 2.0], [2800.0, 1.0], [3200.0, 16.0], [3300.0, 40.0], [3400.0, 25.0], [3500.0, 4.0], [3600.0, 3.0], [3700.0, 5.0], [3800.0, 3.0], [3900.0, 1.0], [1700.0, 2.0], [1800.0, 6.0], [1900.0, 17.0], [2000.0, 8.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[2100.0, 9.0], [2300.0, 12.0], [2200.0, 1.0], [2400.0, 20.0], [2500.0, 19.0], [2600.0, 4.0], [1500.0, 11.0], [1600.0, 14.0], [1700.0, 12.0], [1800.0, 25.0], [1900.0, 54.0], [2000.0, 19.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[2100.0, 13.0], [2200.0, 2.0], [2500.0, 5.0], [2600.0, 9.0], [2700.0, 8.0], [2800.0, 6.0], [2900.0, 7.0], [3000.0, 13.0], [3100.0, 11.0], [3200.0, 11.0], [3300.0, 15.0], [3400.0, 19.0], [3500.0, 14.0], [3700.0, 6.0], [3600.0, 11.0], [3800.0, 8.0], [3900.0, 1.0], [4100.0, 1.0], [1800.0, 9.0], [1900.0, 13.0], [2000.0, 18.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[2100.0, 18.0], [2200.0, 30.0], [2300.0, 36.0], [2400.0, 22.0], [2500.0, 7.0], [2600.0, 9.0], [2700.0, 16.0], [2800.0, 11.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 8.0], [1700.0, 26.0], [1800.0, 10.0], [2000.0, 3.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[2100.0, 29.0], [2200.0, 7.0], [2300.0, 13.0], [2400.0, 14.0], [2500.0, 20.0], [2600.0, 7.0], [2800.0, 4.0], [2700.0, 1.0], [2900.0, 5.0], [3000.0, 2.0], [3100.0, 7.0], [3200.0, 16.0], [3300.0, 26.0], [3400.0, 24.0], [3500.0, 12.0], [1700.0, 1.0], [2000.0, 12.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 839.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 839.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 158.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 174.533, "minX": 1.71673356E12, "maxY": 174.533, "series": [{"data": [[1.71673356E12, 174.533]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673356E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1802.5, "minX": 1.0, "maxY": 3901.0, "series": [{"data": [[3.0, 3408.5], [4.0, 3452.0], [6.0, 3371.5], [8.0, 3465.0], [9.0, 3333.0], [10.0, 3461.0], [11.0, 3478.0], [12.0, 3733.0], [13.0, 3307.0], [14.0, 3447.0], [15.0, 3348.0], [17.0, 3337.5], [19.0, 3351.0], [21.0, 3409.0], [22.0, 3449.0], [23.0, 3377.0], [24.0, 3357.0], [25.0, 3357.0], [27.0, 3406.0], [28.0, 3377.0], [29.0, 3435.0], [30.0, 3373.0], [31.0, 3316.0], [33.0, 3417.0], [32.0, 3318.0], [35.0, 3901.0], [34.0, 3458.0], [37.0, 3377.0], [36.0, 3365.0], [39.0, 3375.0], [38.0, 3472.0], [40.0, 3366.0], [59.0, 3471.0], [71.0, 3410.2666666666664], [75.0, 3612.0], [74.0, 3329.0], [73.0, 3285.0], [72.0, 3437.0], [79.0, 3289.0], [78.0, 3476.0], [77.0, 3292.0], [76.0, 3701.0], [83.0, 3283.0], [82.0, 3808.0], [81.0, 3219.0], [80.0, 3426.0], [87.0, 3749.0], [86.0, 3389.0], [85.0, 3493.0], [91.0, 3317.0], [89.0, 3825.0], [88.0, 3692.0], [95.0, 3379.0], [94.0, 3260.0], [93.0, 3325.5], [99.0, 2525.0], [98.0, 2588.0], [97.0, 3210.0], [96.0, 3293.0], [103.0, 2458.0], [101.0, 2423.0], [100.0, 2563.0], [107.0, 2479.5], [105.0, 2550.5], [111.0, 2537.0], [110.0, 2437.0], [109.0, 2421.0], [108.0, 2554.0], [115.0, 2451.0], [114.0, 2513.0], [113.0, 2529.0], [112.0, 2807.0], [119.0, 2400.0], [118.0, 2525.0], [117.0, 2544.0], [116.0, 2511.0], [123.0, 2404.0], [122.0, 2451.0], [121.0, 2476.0], [120.0, 2326.0], [127.0, 2413.0], [126.0, 2772.0], [125.0, 2489.0], [124.0, 2416.0], [135.0, 2417.0], [134.0, 2749.0], [133.0, 2362.0], [132.0, 2417.0], [131.0, 2431.0], [130.0, 2403.0], [129.0, 2447.0], [128.0, 2450.0], [143.0, 2287.0], [142.0, 2278.0], [141.0, 2349.0], [140.0, 2377.0], [139.0, 2410.0], [138.0, 2343.0], [137.0, 2423.0], [136.0, 2472.0], [151.0, 2242.0], [150.0, 2234.0], [149.0, 2178.0], [148.0, 2252.0], [147.0, 2238.0], [146.0, 2299.0], [145.0, 2267.0], [144.0, 2300.0], [159.0, 2166.0], [158.0, 2245.0], [156.0, 2209.0], [155.0, 2230.0], [154.0, 2263.0], [153.0, 2273.0], [152.0, 2235.0], [167.0, 2082.0], [166.0, 2418.0], [165.0, 2126.0], [164.0, 2200.0], [163.0, 2030.0], [162.0, 2197.0], [161.0, 2128.0], [160.0, 2207.0], [175.0, 2067.0], [174.0, 2017.0], [173.0, 1987.0], [172.0, 2374.0], [171.0, 2085.0], [170.0, 2075.0], [169.0, 2044.0], [168.0, 2075.0], [183.0, 1904.0], [182.0, 1959.0], [181.0, 2300.0], [180.0, 1982.0], [179.0, 1998.0], [178.0, 1976.0], [177.0, 1959.0], [176.0, 1997.0], [191.0, 1903.0], [190.0, 1889.0], [189.0, 1891.0], [188.0, 1991.0], [187.0, 1968.0], [186.0, 1940.0], [185.0, 1966.0], [184.0, 1965.0], [198.0, 1839.0], [197.0, 1828.0], [196.0, 1907.0], [195.0, 1841.5], [193.0, 1926.0], [192.0, 1910.0], [200.0, 1802.5], [1.0, 3370.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[102.84500000000011, 2817.300000000001]], "isOverall": false, "label": "Create patient-Aggregated", "isController": false}, {"data": [[200.0, 2048.4200000000005]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[200.0, 2048.4200000000005]], "isOverall": false, "label": "Get all patients-Aggregated", "isController": false}, {"data": [[200.0, 2924.7249999999995]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[200.0, 2924.7249999999995]], "isOverall": false, "label": "Create Doctor-Aggregated", "isController": false}, {"data": [[200.0, 2255.8449999999975]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[200.0, 2255.8449999999975]], "isOverall": false, "label": "Create prescription-Aggregated", "isController": false}, {"data": [[97.0, 3577.0], [103.0, 3566.0], [101.0, 3559.0], [100.0, 3442.0], [107.0, 3451.0], [119.0, 3443.5], [118.0, 3433.3333333333335], [122.0, 3433.25], [121.0, 3440.4], [120.0, 3465.285714285714], [126.0, 3397.0], [135.0, 3438.6666666666665], [134.0, 3387.0], [133.0, 3445.6666666666665], [132.0, 3394.3333333333335], [131.0, 3245.0], [128.0, 3352.0], [143.0, 3277.875], [142.0, 3266.5], [141.0, 3280.5], [140.0, 3323.8], [139.0, 3326.0], [136.0, 3402.076923076923], [149.0, 3177.5], [148.0, 3208.0], [147.0, 3296.0], [158.0, 3132.0], [164.0, 3068.0], [175.0, 2928.0], [169.0, 2993.5], [168.0, 2992.5], [183.0, 2821.0], [179.0, 2966.0], [188.0, 2860.5], [193.0, 2789.5], [200.0, 2320.6601941747563]], "isOverall": false, "label": "Release drug", "isController": false}, {"data": [[169.82000000000005, 2803.825]], "isOverall": false, "label": "Release drug-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18517.0, "minX": 1.71673356E12, "maxY": 37953.333333333336, "series": [{"data": [[1.71673356E12, 18517.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71673356E12, 37953.333333333336]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673356E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2048.4200000000005, "minX": 1.71673356E12, "maxY": 2924.7249999999995, "series": [{"data": [[1.71673356E12, 2817.300000000001]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673356E12, 2048.4200000000005]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673356E12, 2924.7249999999995]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673356E12, 2255.8449999999975]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673356E12, 2803.825]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673356E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2023.8950000000004, "minX": 1.71673356E12, "maxY": 2908.0249999999996, "series": [{"data": [[1.71673356E12, 2812.5499999999975]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673356E12, 2023.8950000000004]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673356E12, 2908.0249999999996]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673356E12, 2239.5599999999995]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673356E12, 2803.3800000000006]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673356E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71673356E12, "maxY": 0.5699999999999995, "series": [{"data": [[1.71673356E12, 0.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673356E12, 0.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673356E12, 0.5699999999999995]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673356E12, 0.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673356E12, 0.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673356E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1364.0, "minX": 1.71673356E12, "maxY": 4101.0, "series": [{"data": [[1.71673356E12, 4101.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71673356E12, 1364.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71673356E12, 3458.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71673356E12, 3826.71]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71673356E12, 2409.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71673356E12, 3577.499999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673356E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1926.0, "minX": 4.0, "maxY": 3453.0, "series": [{"data": [[131.0, 1926.0], [4.0, 2456.0], [136.0, 3453.0], [69.0, 2450.0], [78.0, 2462.0], [154.0, 3284.0], [97.0, 3377.0], [103.0, 2110.0], [55.0, 2032.0], [118.0, 2387.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[136.0, 2893.0], [9.0, 2684.0], [154.0, 2472.0], [46.0, 1994.0], [118.0, 2199.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 154.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1902.0, "minX": 4.0, "maxY": 3429.0, "series": [{"data": [[131.0, 1902.0], [4.0, 2456.0], [136.0, 3429.0], [69.0, 2435.0], [78.0, 2451.0], [154.0, 3284.0], [97.0, 3372.0], [103.0, 2097.0], [55.0, 2011.0], [118.0, 2383.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[136.0, 2891.5], [9.0, 2684.0], [154.0, 2469.0], [46.0, 1993.5], [118.0, 2199.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 154.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.71673356E12, "maxY": 16.666666666666668, "series": [{"data": [[1.71673356E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673356E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.6333333333333333, "minX": 1.71673356E12, "maxY": 14.033333333333333, "series": [{"data": [[1.71673356E12, 14.033333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71673356E12, 2.6333333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673356E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.65, "minX": 1.71673356E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.71673356E12, 3.3333333333333335]], "isOverall": false, "label": "Get all patients-success", "isController": false}, {"data": [[1.71673356E12, 3.3333333333333335]], "isOverall": false, "label": "Create prescription-success", "isController": false}, {"data": [[1.71673356E12, 2.683333333333333]], "isOverall": false, "label": "Release drug-success", "isController": false}, {"data": [[1.71673356E12, 0.8166666666666667]], "isOverall": false, "label": "Create Doctor-failure", "isController": false}, {"data": [[1.71673356E12, 0.65]], "isOverall": false, "label": "Release drug-failure", "isController": false}, {"data": [[1.71673356E12, 2.5166666666666666]], "isOverall": false, "label": "Create Doctor-success", "isController": false}, {"data": [[1.71673356E12, 1.1666666666666667]], "isOverall": false, "label": "Create patient-failure", "isController": false}, {"data": [[1.71673356E12, 2.1666666666666665]], "isOverall": false, "label": "Create patient-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673356E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.6333333333333333, "minX": 1.71673356E12, "maxY": 14.033333333333333, "series": [{"data": [[1.71673356E12, 14.033333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71673356E12, 2.6333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673356E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

