/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1160.0, "minX": 0.0, "maxY": 8928.0, "series": [{"data": [[0.0, 2023.0], [0.1, 2023.0], [0.2, 2023.0], [0.3, 2032.0], [0.4, 2032.0], [0.5, 2035.0], [0.6, 2035.0], [0.7, 2035.0], [0.8, 2037.0], [0.9, 2037.0], [1.0, 2037.0], [1.1, 2037.0], [1.2, 2037.0], [1.3, 2038.0], [1.4, 2038.0], [1.5, 2038.0], [1.6, 2038.0], [1.7, 2038.0], [1.8, 2039.0], [1.9, 2039.0], [2.0, 2039.0], [2.1, 2039.0], [2.2, 2039.0], [2.3, 2040.0], [2.4, 2040.0], [2.5, 2041.0], [2.6, 2041.0], [2.7, 2041.0], [2.8, 2041.0], [2.9, 2041.0], [3.0, 2041.0], [3.1, 2041.0], [3.2, 2041.0], [3.3, 2041.0], [3.4, 2041.0], [3.5, 2041.0], [3.6, 2041.0], [3.7, 2041.0], [3.8, 2041.0], [3.9, 2041.0], [4.0, 2042.0], [4.1, 2042.0], [4.2, 2042.0], [4.3, 2042.0], [4.4, 2042.0], [4.5, 2043.0], [4.6, 2043.0], [4.7, 2043.0], [4.8, 2043.0], [4.9, 2043.0], [5.0, 2044.0], [5.1, 2044.0], [5.2, 2044.0], [5.3, 2044.0], [5.4, 2044.0], [5.5, 2044.0], [5.6, 2044.0], [5.7, 2044.0], [5.8, 2044.0], [5.9, 2044.0], [6.0, 2045.0], [6.1, 2045.0], [6.2, 2045.0], [6.3, 2045.0], [6.4, 2045.0], [6.5, 2046.0], [6.6, 2046.0], [6.7, 2046.0], [6.8, 2046.0], [6.9, 2046.0], [7.0, 2047.0], [7.1, 2047.0], [7.2, 2047.0], [7.3, 2047.0], [7.4, 2047.0], [7.5, 2047.0], [7.6, 2047.0], [7.7, 2047.0], [7.8, 2048.0], [7.9, 2048.0], [8.0, 2048.0], [8.1, 2048.0], [8.2, 2048.0], [8.3, 2049.0], [8.4, 2049.0], [8.5, 2049.0], [8.6, 2049.0], [8.7, 2049.0], [8.8, 2049.0], [8.9, 2049.0], [9.0, 2049.0], [9.1, 2049.0], [9.2, 2049.0], [9.3, 2049.0], [9.4, 2049.0], [9.5, 2049.0], [9.6, 2049.0], [9.7, 2049.0], [9.8, 2049.0], [9.9, 2049.0], [10.0, 2050.0], [10.1, 2050.0], [10.2, 2050.0], [10.3, 2050.0], [10.4, 2050.0], [10.5, 2050.0], [10.6, 2050.0], [10.7, 2050.0], [10.8, 2050.0], [10.9, 2050.0], [11.0, 2050.0], [11.1, 2050.0], [11.2, 2050.0], [11.3, 2050.0], [11.4, 2050.0], [11.5, 2051.0], [11.6, 2051.0], [11.7, 2051.0], [11.8, 2051.0], [11.9, 2051.0], [12.0, 2051.0], [12.1, 2051.0], [12.2, 2051.0], [12.3, 2051.0], [12.4, 2051.0], [12.5, 2051.0], [12.6, 2051.0], [12.7, 2051.0], [12.8, 2052.0], [12.9, 2052.0], [13.0, 2052.0], [13.1, 2052.0], [13.2, 2052.0], [13.3, 2052.0], [13.4, 2052.0], [13.5, 2052.0], [13.6, 2052.0], [13.7, 2052.0], [13.8, 2052.0], [13.9, 2052.0], [14.0, 2052.0], [14.1, 2052.0], [14.2, 2052.0], [14.3, 2053.0], [14.4, 2053.0], [14.5, 2053.0], [14.6, 2053.0], [14.7, 2053.0], [14.8, 2053.0], [14.9, 2053.0], [15.0, 2053.0], [15.1, 2053.0], [15.2, 2053.0], [15.3, 2054.0], [15.4, 2054.0], [15.5, 2054.0], [15.6, 2054.0], [15.7, 2054.0], [15.8, 2054.0], [15.9, 2054.0], [16.0, 2054.0], [16.1, 2054.0], [16.2, 2054.0], [16.3, 2054.0], [16.4, 2054.0], [16.5, 2055.0], [16.6, 2055.0], [16.7, 2055.0], [16.8, 2055.0], [16.9, 2055.0], [17.0, 2055.0], [17.1, 2055.0], [17.2, 2055.0], [17.3, 2055.0], [17.4, 2055.0], [17.5, 2056.0], [17.6, 2056.0], [17.7, 2056.0], [17.8, 2056.0], [17.9, 2056.0], [18.0, 2056.0], [18.1, 2056.0], [18.2, 2056.0], [18.3, 2056.0], [18.4, 2056.0], [18.5, 2056.0], [18.6, 2056.0], [18.7, 2056.0], [18.8, 2057.0], [18.9, 2057.0], [19.0, 2057.0], [19.1, 2057.0], [19.2, 2057.0], [19.3, 2057.0], [19.4, 2057.0], [19.5, 2058.0], [19.6, 2058.0], [19.7, 2058.0], [19.8, 2058.0], [19.9, 2058.0], [20.0, 2058.0], [20.1, 2058.0], [20.2, 2058.0], [20.3, 2058.0], [20.4, 2058.0], [20.5, 2058.0], [20.6, 2058.0], [20.7, 2058.0], [20.8, 2058.0], [20.9, 2058.0], [21.0, 2059.0], [21.1, 2059.0], [21.2, 2059.0], [21.3, 2059.0], [21.4, 2059.0], [21.5, 2059.0], [21.6, 2059.0], [21.7, 2059.0], [21.8, 2060.0], [21.9, 2060.0], [22.0, 2060.0], [22.1, 2060.0], [22.2, 2060.0], [22.3, 2060.0], [22.4, 2060.0], [22.5, 2060.0], [22.6, 2060.0], [22.7, 2060.0], [22.8, 2060.0], [22.9, 2060.0], [23.0, 2060.0], [23.1, 2060.0], [23.2, 2060.0], [23.3, 2060.0], [23.4, 2060.0], [23.5, 2060.0], [23.6, 2060.0], [23.7, 2060.0], [23.8, 2060.0], [23.9, 2060.0], [24.0, 2061.0], [24.1, 2061.0], [24.2, 2061.0], [24.3, 2061.0], [24.4, 2061.0], [24.5, 2061.0], [24.6, 2061.0], [24.7, 2061.0], [24.8, 2061.0], [24.9, 2061.0], [25.0, 2061.0], [25.1, 2061.0], [25.2, 2061.0], [25.3, 2062.0], [25.4, 2062.0], [25.5, 2062.0], [25.6, 2062.0], [25.7, 2062.0], [25.8, 2062.0], [25.9, 2062.0], [26.0, 2062.0], [26.1, 2062.0], [26.2, 2062.0], [26.3, 2062.0], [26.4, 2062.0], [26.5, 2062.0], [26.6, 2062.0], [26.7, 2062.0], [26.8, 2062.0], [26.9, 2062.0], [27.0, 2062.0], [27.1, 2062.0], [27.2, 2062.0], [27.3, 2063.0], [27.4, 2063.0], [27.5, 2063.0], [27.6, 2063.0], [27.7, 2063.0], [27.8, 2063.0], [27.9, 2063.0], [28.0, 2065.0], [28.1, 2065.0], [28.2, 2065.0], [28.3, 2065.0], [28.4, 2065.0], [28.5, 2065.0], [28.6, 2065.0], [28.7, 2065.0], [28.8, 2066.0], [28.9, 2066.0], [29.0, 2067.0], [29.1, 2067.0], [29.2, 2067.0], [29.3, 2067.0], [29.4, 2067.0], [29.5, 2067.0], [29.6, 2067.0], [29.7, 2067.0], [29.8, 2067.0], [29.9, 2067.0], [30.0, 2068.0], [30.1, 2068.0], [30.2, 2068.0], [30.3, 2068.0], [30.4, 2068.0], [30.5, 2068.0], [30.6, 2068.0], [30.7, 2068.0], [30.8, 2069.0], [30.9, 2069.0], [31.0, 2069.0], [31.1, 2069.0], [31.2, 2069.0], [31.3, 2069.0], [31.4, 2069.0], [31.5, 2069.0], [31.6, 2069.0], [31.7, 2069.0], [31.8, 2070.0], [31.9, 2070.0], [32.0, 2070.0], [32.1, 2070.0], [32.2, 2070.0], [32.3, 2070.0], [32.4, 2070.0], [32.5, 2070.0], [32.6, 2070.0], [32.7, 2070.0], [32.8, 2070.0], [32.9, 2070.0], [33.0, 2070.0], [33.1, 2070.0], [33.2, 2070.0], [33.3, 2071.0], [33.4, 2071.0], [33.5, 2071.0], [33.6, 2071.0], [33.7, 2071.0], [33.8, 2071.0], [33.9, 2071.0], [34.0, 2071.0], [34.1, 2071.0], [34.2, 2071.0], [34.3, 2071.0], [34.4, 2071.0], [34.5, 2072.0], [34.6, 2072.0], [34.7, 2072.0], [34.8, 2072.0], [34.9, 2072.0], [35.0, 2072.0], [35.1, 2072.0], [35.2, 2072.0], [35.3, 2072.0], [35.4, 2072.0], [35.5, 2073.0], [35.6, 2073.0], [35.7, 2073.0], [35.8, 2073.0], [35.9, 2073.0], [36.0, 2073.0], [36.1, 2073.0], [36.2, 2073.0], [36.3, 2074.0], [36.4, 2074.0], [36.5, 2074.0], [36.6, 2074.0], [36.7, 2074.0], [36.8, 2075.0], [36.9, 2075.0], [37.0, 2075.0], [37.1, 2075.0], [37.2, 2075.0], [37.3, 2075.0], [37.4, 2075.0], [37.5, 2075.0], [37.6, 2075.0], [37.7, 2075.0], [37.8, 2075.0], [37.9, 2075.0], [38.0, 2075.0], [38.1, 2075.0], [38.2, 2075.0], [38.3, 2076.0], [38.4, 2076.0], [38.5, 2076.0], [38.6, 2076.0], [38.7, 2076.0], [38.8, 2077.0], [38.9, 2077.0], [39.0, 2077.0], [39.1, 2077.0], [39.2, 2077.0], [39.3, 2077.0], [39.4, 2077.0], [39.5, 2077.0], [39.6, 2077.0], [39.7, 2077.0], [39.8, 2077.0], [39.9, 2077.0], [40.0, 2078.0], [40.1, 2078.0], [40.2, 2078.0], [40.3, 2078.0], [40.4, 2078.0], [40.5, 2078.0], [40.6, 2078.0], [40.7, 2078.0], [40.8, 2079.0], [40.9, 2079.0], [41.0, 2079.0], [41.1, 2079.0], [41.2, 2079.0], [41.3, 2079.0], [41.4, 2079.0], [41.5, 2080.0], [41.6, 2080.0], [41.7, 2080.0], [41.8, 2080.0], [41.9, 2080.0], [42.0, 2080.0], [42.1, 2080.0], [42.2, 2080.0], [42.3, 2080.0], [42.4, 2080.0], [42.5, 2080.0], [42.6, 2080.0], [42.7, 2080.0], [42.8, 2081.0], [42.9, 2081.0], [43.0, 2081.0], [43.1, 2081.0], [43.2, 2081.0], [43.3, 2081.0], [43.4, 2081.0], [43.5, 2082.0], [43.6, 2082.0], [43.7, 2082.0], [43.8, 2082.0], [43.9, 2082.0], [44.0, 2082.0], [44.1, 2082.0], [44.2, 2082.0], [44.3, 2083.0], [44.4, 2083.0], [44.5, 2083.0], [44.6, 2083.0], [44.7, 2083.0], [44.8, 2084.0], [44.9, 2084.0], [45.0, 2084.0], [45.1, 2084.0], [45.2, 2084.0], [45.3, 2084.0], [45.4, 2084.0], [45.5, 2085.0], [45.6, 2085.0], [45.7, 2085.0], [45.8, 2085.0], [45.9, 2085.0], [46.0, 2086.0], [46.1, 2086.0], [46.2, 2086.0], [46.3, 2086.0], [46.4, 2086.0], [46.5, 2086.0], [46.6, 2086.0], [46.7, 2086.0], [46.8, 2087.0], [46.9, 2087.0], [47.0, 2087.0], [47.1, 2087.0], [47.2, 2087.0], [47.3, 2087.0], [47.4, 2087.0], [47.5, 2087.0], [47.6, 2087.0], [47.7, 2087.0], [47.8, 2089.0], [47.9, 2089.0], [48.0, 2089.0], [48.1, 2089.0], [48.2, 2089.0], [48.3, 2089.0], [48.4, 2089.0], [48.5, 2090.0], [48.6, 2090.0], [48.7, 2090.0], [48.8, 2090.0], [48.9, 2090.0], [49.0, 2090.0], [49.1, 2090.0], [49.2, 2090.0], [49.3, 2091.0], [49.4, 2091.0], [49.5, 2092.0], [49.6, 2092.0], [49.7, 2092.0], [49.8, 2093.0], [49.9, 2093.0], [50.0, 2093.0], [50.1, 2093.0], [50.2, 2093.0], [50.3, 2093.0], [50.4, 2093.0], [50.5, 2093.0], [50.6, 2093.0], [50.7, 2093.0], [50.8, 2094.0], [50.9, 2094.0], [51.0, 2095.0], [51.1, 2095.0], [51.2, 2095.0], [51.3, 2096.0], [51.4, 2096.0], [51.5, 2097.0], [51.6, 2097.0], [51.7, 2097.0], [51.8, 2098.0], [51.9, 2098.0], [52.0, 2098.0], [52.1, 2098.0], [52.2, 2098.0], [52.3, 2099.0], [52.4, 2099.0], [52.5, 2099.0], [52.6, 2099.0], [52.7, 2099.0], [52.8, 2100.0], [52.9, 2100.0], [53.0, 2101.0], [53.1, 2101.0], [53.2, 2101.0], [53.3, 2102.0], [53.4, 2102.0], [53.5, 2103.0], [53.6, 2103.0], [53.7, 2103.0], [53.8, 2104.0], [53.9, 2104.0], [54.0, 2104.0], [54.1, 2104.0], [54.2, 2104.0], [54.3, 2104.0], [54.4, 2104.0], [54.5, 2105.0], [54.6, 2105.0], [54.7, 2105.0], [54.8, 2105.0], [54.9, 2105.0], [55.0, 2105.0], [55.1, 2105.0], [55.2, 2105.0], [55.3, 2106.0], [55.4, 2106.0], [55.5, 2106.0], [55.6, 2106.0], [55.7, 2106.0], [55.8, 2107.0], [55.9, 2107.0], [56.0, 2108.0], [56.1, 2108.0], [56.2, 2108.0], [56.3, 2108.0], [56.4, 2108.0], [56.5, 2108.0], [56.6, 2108.0], [56.7, 2108.0], [56.8, 2108.0], [56.9, 2108.0], [57.0, 2109.0], [57.1, 2109.0], [57.2, 2109.0], [57.3, 2110.0], [57.4, 2110.0], [57.5, 2113.0], [57.6, 2113.0], [57.7, 2113.0], [57.8, 2114.0], [57.9, 2114.0], [58.0, 2115.0], [58.1, 2115.0], [58.2, 2115.0], [58.3, 2115.0], [58.4, 2115.0], [58.5, 2116.0], [58.6, 2116.0], [58.7, 2116.0], [58.8, 2116.0], [58.9, 2116.0], [59.0, 2116.0], [59.1, 2116.0], [59.2, 2116.0], [59.3, 2117.0], [59.4, 2117.0], [59.5, 2119.0], [59.6, 2119.0], [59.7, 2119.0], [59.8, 2120.0], [59.9, 2120.0], [60.0, 2120.0], [60.1, 2120.0], [60.2, 2120.0], [60.3, 2120.0], [60.4, 2120.0], [60.5, 2121.0], [60.6, 2121.0], [60.7, 2121.0], [60.8, 2121.0], [60.9, 2121.0], [61.0, 2121.0], [61.1, 2121.0], [61.2, 2121.0], [61.3, 2121.0], [61.4, 2121.0], [61.5, 2122.0], [61.6, 2122.0], [61.7, 2122.0], [61.8, 2123.0], [61.9, 2123.0], [62.0, 2124.0], [62.1, 2124.0], [62.2, 2124.0], [62.3, 2124.0], [62.4, 2124.0], [62.5, 2125.0], [62.6, 2125.0], [62.7, 2125.0], [62.8, 2125.0], [62.9, 2125.0], [63.0, 2125.0], [63.1, 2125.0], [63.2, 2125.0], [63.3, 2125.0], [63.4, 2125.0], [63.5, 2125.0], [63.6, 2125.0], [63.7, 2125.0], [63.8, 2126.0], [63.9, 2126.0], [64.0, 2126.0], [64.1, 2126.0], [64.2, 2126.0], [64.3, 2126.0], [64.4, 2126.0], [64.5, 2126.0], [64.6, 2126.0], [64.7, 2126.0], [64.8, 2126.0], [64.9, 2126.0], [65.0, 2127.0], [65.1, 2127.0], [65.2, 2127.0], [65.3, 2127.0], [65.4, 2127.0], [65.5, 2128.0], [65.6, 2128.0], [65.7, 2128.0], [65.8, 2129.0], [65.9, 2129.0], [66.0, 2129.0], [66.1, 2129.0], [66.2, 2129.0], [66.3, 2130.0], [66.4, 2130.0], [66.5, 2130.0], [66.6, 2130.0], [66.7, 2130.0], [66.8, 2132.0], [66.9, 2132.0], [67.0, 2132.0], [67.1, 2132.0], [67.2, 2132.0], [67.3, 2133.0], [67.4, 2133.0], [67.5, 2134.0], [67.6, 2134.0], [67.7, 2134.0], [67.8, 2134.0], [67.9, 2134.0], [68.0, 2134.0], [68.1, 2134.0], [68.2, 2134.0], [68.3, 2134.0], [68.4, 2134.0], [68.5, 2135.0], [68.6, 2135.0], [68.7, 2135.0], [68.8, 2135.0], [68.9, 2135.0], [69.0, 2136.0], [69.1, 2136.0], [69.2, 2136.0], [69.3, 2136.0], [69.4, 2136.0], [69.5, 2137.0], [69.6, 2137.0], [69.7, 2137.0], [69.8, 2137.0], [69.9, 2137.0], [70.0, 2137.0], [70.1, 2137.0], [70.2, 2137.0], [70.3, 2138.0], [70.4, 2138.0], [70.5, 2139.0], [70.6, 2139.0], [70.7, 2139.0], [70.8, 2140.0], [70.9, 2140.0], [71.0, 2142.0], [71.1, 2142.0], [71.2, 2142.0], [71.3, 2142.0], [71.4, 2142.0], [71.5, 2143.0], [71.6, 2143.0], [71.7, 2143.0], [71.8, 2144.0], [71.9, 2144.0], [72.0, 2144.0], [72.1, 2144.0], [72.2, 2144.0], [72.3, 2147.0], [72.4, 2147.0], [72.5, 2149.0], [72.6, 2149.0], [72.7, 2149.0], [72.8, 2149.0], [72.9, 2149.0], [73.0, 2150.0], [73.1, 2150.0], [73.2, 2150.0], [73.3, 2151.0], [73.4, 2151.0], [73.5, 2152.0], [73.6, 2152.0], [73.7, 2152.0], [73.8, 2153.0], [73.9, 2153.0], [74.0, 2155.0], [74.1, 2155.0], [74.2, 2155.0], [74.3, 2155.0], [74.4, 2155.0], [74.5, 2157.0], [74.6, 2157.0], [74.7, 2157.0], [74.8, 2159.0], [74.9, 2159.0], [75.0, 2159.0], [75.1, 2159.0], [75.2, 2159.0], [75.3, 2160.0], [75.4, 2160.0], [75.5, 2163.0], [75.6, 2163.0], [75.7, 2163.0], [75.8, 2164.0], [75.9, 2164.0], [76.0, 2164.0], [76.1, 2164.0], [76.2, 2164.0], [76.3, 2168.0], [76.4, 2168.0], [76.5, 2168.0], [76.6, 2168.0], [76.7, 2168.0], [76.8, 2171.0], [76.9, 2171.0], [77.0, 2171.0], [77.1, 2171.0], [77.2, 2171.0], [77.3, 2173.0], [77.4, 2173.0], [77.5, 2174.0], [77.6, 2174.0], [77.7, 2174.0], [77.8, 2175.0], [77.9, 2175.0], [78.0, 2175.0], [78.1, 2175.0], [78.2, 2175.0], [78.3, 2177.0], [78.4, 2177.0], [78.5, 2177.0], [78.6, 2177.0], [78.7, 2177.0], [78.8, 2180.0], [78.9, 2180.0], [79.0, 2181.0], [79.1, 2181.0], [79.2, 2181.0], [79.3, 2183.0], [79.4, 2183.0], [79.5, 2186.0], [79.6, 2186.0], [79.7, 2186.0], [79.8, 2188.0], [79.9, 2188.0], [80.0, 2188.0], [80.1, 2188.0], [80.2, 2188.0], [80.3, 2189.0], [80.4, 2189.0], [80.5, 2189.0], [80.6, 2189.0], [80.7, 2189.0], [80.8, 2190.0], [80.9, 2190.0], [81.0, 2191.0], [81.1, 2191.0], [81.2, 2191.0], [81.3, 2192.0], [81.4, 2192.0], [81.5, 2192.0], [81.6, 2192.0], [81.7, 2192.0], [81.8, 2194.0], [81.9, 2194.0], [82.0, 2199.0], [82.1, 2199.0], [82.2, 2199.0], [82.3, 2200.0], [82.4, 2200.0], [82.5, 2200.0], [82.6, 2200.0], [82.7, 2200.0], [82.8, 2207.0], [82.9, 2207.0], [83.0, 2208.0], [83.1, 2208.0], [83.2, 2208.0], [83.3, 2213.0], [83.4, 2213.0], [83.5, 2213.0], [83.6, 2213.0], [83.7, 2213.0], [83.8, 2213.0], [83.9, 2213.0], [84.0, 2214.0], [84.1, 2214.0], [84.2, 2214.0], [84.3, 2214.0], [84.4, 2214.0], [84.5, 2215.0], [84.6, 2215.0], [84.7, 2215.0], [84.8, 2215.0], [84.9, 2215.0], [85.0, 2216.0], [85.1, 2216.0], [85.2, 2216.0], [85.3, 2217.0], [85.4, 2217.0], [85.5, 2217.0], [85.6, 2217.0], [85.7, 2217.0], [85.8, 2217.0], [85.9, 2217.0], [86.0, 2219.0], [86.1, 2219.0], [86.2, 2219.0], [86.3, 2221.0], [86.4, 2221.0], [86.5, 2224.0], [86.6, 2224.0], [86.7, 2224.0], [86.8, 2224.0], [86.9, 2224.0], [87.0, 2227.0], [87.1, 2227.0], [87.2, 2227.0], [87.3, 2228.0], [87.4, 2228.0], [87.5, 2232.0], [87.6, 2232.0], [87.7, 2232.0], [87.8, 2233.0], [87.9, 2233.0], [88.0, 2237.0], [88.1, 2237.0], [88.2, 2237.0], [88.3, 2237.0], [88.4, 2237.0], [88.5, 2238.0], [88.6, 2238.0], [88.7, 2238.0], [88.8, 2238.0], [88.9, 2238.0], [89.0, 2239.0], [89.1, 2239.0], [89.2, 2239.0], [89.3, 2239.0], [89.4, 2239.0], [89.5, 2241.0], [89.6, 2241.0], [89.7, 2241.0], [89.8, 2241.0], [89.9, 2241.0], [90.0, 2244.0], [90.1, 2244.0], [90.2, 2244.0], [90.3, 2245.0], [90.4, 2245.0], [90.5, 2247.0], [90.6, 2247.0], [90.7, 2247.0], [90.8, 2248.0], [90.9, 2248.0], [91.0, 2249.0], [91.1, 2249.0], [91.2, 2249.0], [91.3, 2250.0], [91.4, 2250.0], [91.5, 2250.0], [91.6, 2250.0], [91.7, 2250.0], [91.8, 2251.0], [91.9, 2251.0], [92.0, 2252.0], [92.1, 2252.0], [92.2, 2252.0], [92.3, 2253.0], [92.4, 2253.0], [92.5, 2260.0], [92.6, 2260.0], [92.7, 2260.0], [92.8, 2262.0], [92.9, 2262.0], [93.0, 2262.0], [93.1, 2262.0], [93.2, 2262.0], [93.3, 2266.0], [93.4, 2266.0], [93.5, 2267.0], [93.6, 2267.0], [93.7, 2267.0], [93.8, 2270.0], [93.9, 2270.0], [94.0, 2272.0], [94.1, 2272.0], [94.2, 2272.0], [94.3, 2275.0], [94.4, 2275.0], [94.5, 2278.0], [94.6, 2278.0], [94.7, 2278.0], [94.8, 2279.0], [94.9, 2279.0], [95.0, 2280.0], [95.1, 2280.0], [95.2, 2280.0], [95.3, 2283.0], [95.4, 2283.0], [95.5, 2283.0], [95.6, 2283.0], [95.7, 2283.0], [95.8, 2290.0], [95.9, 2290.0], [96.0, 2290.0], [96.1, 2290.0], [96.2, 2290.0], [96.3, 2292.0], [96.4, 2292.0], [96.5, 2292.0], [96.6, 2292.0], [96.7, 2292.0], [96.8, 2304.0], [96.9, 2304.0], [97.0, 2308.0], [97.1, 2308.0], [97.2, 2308.0], [97.3, 2319.0], [97.4, 2319.0], [97.5, 2319.0], [97.6, 2319.0], [97.7, 2319.0], [97.8, 2321.0], [97.9, 2321.0], [98.0, 2324.0], [98.1, 2324.0], [98.2, 2324.0], [98.3, 2332.0], [98.4, 2332.0], [98.5, 2335.0], [98.6, 2335.0], [98.7, 2335.0], [98.8, 2335.0], [98.9, 2335.0], [99.0, 2339.0], [99.1, 2339.0], [99.2, 2339.0], [99.3, 2355.0], [99.4, 2355.0], [99.5, 2358.0], [99.6, 2358.0], [99.7, 2358.0], [99.8, 2385.0], [99.9, 2385.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[0.0, 1340.0], [0.1, 1340.0], [0.2, 1340.0], [0.3, 1390.0], [0.4, 1390.0], [0.5, 1394.0], [0.6, 1394.0], [0.7, 1394.0], [0.8, 1422.0], [0.9, 1422.0], [1.0, 1469.0], [1.1, 1469.0], [1.2, 1469.0], [1.3, 1478.0], [1.4, 1478.0], [1.5, 1480.0], [1.6, 1480.0], [1.7, 1480.0], [1.8, 1492.0], [1.9, 1492.0], [2.0, 1502.0], [2.1, 1502.0], [2.2, 1502.0], [2.3, 1510.0], [2.4, 1510.0], [2.5, 1517.0], [2.6, 1517.0], [2.7, 1517.0], [2.8, 1542.0], [2.9, 1542.0], [3.0, 1545.0], [3.1, 1545.0], [3.2, 1545.0], [3.3, 1554.0], [3.4, 1554.0], [3.5, 1575.0], [3.6, 1575.0], [3.7, 1575.0], [3.8, 1575.0], [3.9, 1575.0], [4.0, 1601.0], [4.1, 1601.0], [4.2, 1601.0], [4.3, 1606.0], [4.4, 1606.0], [4.5, 1623.0], [4.6, 1623.0], [4.7, 1623.0], [4.8, 1632.0], [4.9, 1632.0], [5.0, 1658.0], [5.1, 1658.0], [5.2, 1658.0], [5.3, 1699.0], [5.4, 1699.0], [5.5, 1720.0], [5.6, 1720.0], [5.7, 1720.0], [5.8, 1740.0], [5.9, 1740.0], [6.0, 1761.0], [6.1, 1761.0], [6.2, 1761.0], [6.3, 3888.0], [6.4, 3888.0], [6.5, 3919.0], [6.6, 3919.0], [6.7, 3919.0], [6.8, 3923.0], [6.9, 3923.0], [7.0, 3935.0], [7.1, 3935.0], [7.2, 3935.0], [7.3, 4079.0], [7.4, 4079.0], [7.5, 4079.0], [7.6, 4079.0], [7.7, 4079.0], [7.8, 4082.0], [7.9, 4082.0], [8.0, 4100.0], [8.1, 4100.0], [8.2, 4100.0], [8.3, 4120.0], [8.4, 4120.0], [8.5, 4132.0], [8.6, 4132.0], [8.7, 4132.0], [8.8, 4134.0], [8.9, 4134.0], [9.0, 4138.0], [9.1, 4138.0], [9.2, 4138.0], [9.3, 4181.0], [9.4, 4181.0], [9.5, 4185.0], [9.6, 4185.0], [9.7, 4185.0], [9.8, 4193.0], [9.9, 4193.0], [10.0, 4198.0], [10.1, 4198.0], [10.2, 4198.0], [10.3, 4206.0], [10.4, 4206.0], [10.5, 4214.0], [10.6, 4214.0], [10.7, 4214.0], [10.8, 4222.0], [10.9, 4222.0], [11.0, 4227.0], [11.1, 4227.0], [11.2, 4227.0], [11.3, 4231.0], [11.4, 4231.0], [11.5, 4238.0], [11.6, 4238.0], [11.7, 4238.0], [11.8, 4246.0], [11.9, 4246.0], [12.0, 4250.0], [12.1, 4250.0], [12.2, 4250.0], [12.3, 4253.0], [12.4, 4253.0], [12.5, 4258.0], [12.6, 4258.0], [12.7, 4258.0], [12.8, 4259.0], [12.9, 4259.0], [13.0, 4261.0], [13.1, 4261.0], [13.2, 4261.0], [13.3, 4265.0], [13.4, 4265.0], [13.5, 4270.0], [13.6, 4270.0], [13.7, 4270.0], [13.8, 4275.0], [13.9, 4275.0], [14.0, 4278.0], [14.1, 4278.0], [14.2, 4278.0], [14.3, 4294.0], [14.4, 4294.0], [14.5, 4298.0], [14.6, 4298.0], [14.7, 4298.0], [14.8, 4327.0], [14.9, 4327.0], [15.0, 4334.0], [15.1, 4334.0], [15.2, 4334.0], [15.3, 4334.0], [15.4, 4334.0], [15.5, 4335.0], [15.6, 4335.0], [15.7, 4335.0], [15.8, 4362.0], [15.9, 4362.0], [16.0, 4369.0], [16.1, 4369.0], [16.2, 4369.0], [16.3, 4372.0], [16.4, 4372.0], [16.5, 4386.0], [16.6, 4386.0], [16.7, 4386.0], [16.8, 4396.0], [16.9, 4396.0], [17.0, 4400.0], [17.1, 4400.0], [17.2, 4400.0], [17.3, 4400.0], [17.4, 4400.0], [17.5, 4408.0], [17.6, 4408.0], [17.7, 4408.0], [17.8, 4411.0], [17.9, 4411.0], [18.0, 4414.0], [18.1, 4414.0], [18.2, 4414.0], [18.3, 4415.0], [18.4, 4415.0], [18.5, 4421.0], [18.6, 4421.0], [18.7, 4421.0], [18.8, 4425.0], [18.9, 4425.0], [19.0, 4427.0], [19.1, 4427.0], [19.2, 4427.0], [19.3, 4430.0], [19.4, 4430.0], [19.5, 4448.0], [19.6, 4448.0], [19.7, 4448.0], [19.8, 4452.0], [19.9, 4452.0], [20.0, 4458.0], [20.1, 4458.0], [20.2, 4458.0], [20.3, 4462.0], [20.4, 4462.0], [20.5, 4467.0], [20.6, 4467.0], [20.7, 4467.0], [20.8, 4473.0], [20.9, 4473.0], [21.0, 4489.0], [21.1, 4489.0], [21.2, 4489.0], [21.3, 4493.0], [21.4, 4493.0], [21.5, 4499.0], [21.6, 4499.0], [21.7, 4499.0], [21.8, 4500.0], [21.9, 4500.0], [22.0, 4506.0], [22.1, 4506.0], [22.2, 4506.0], [22.3, 4511.0], [22.4, 4511.0], [22.5, 4513.0], [22.6, 4513.0], [22.7, 4513.0], [22.8, 4515.0], [22.9, 4515.0], [23.0, 4526.0], [23.1, 4526.0], [23.2, 4526.0], [23.3, 4532.0], [23.4, 4532.0], [23.5, 4535.0], [23.6, 4535.0], [23.7, 4535.0], [23.8, 4535.0], [23.9, 4535.0], [24.0, 4537.0], [24.1, 4537.0], [24.2, 4537.0], [24.3, 4537.0], [24.4, 4537.0], [24.5, 4548.0], [24.6, 4548.0], [24.7, 4548.0], [24.8, 4559.0], [24.9, 4559.0], [25.0, 4559.0], [25.1, 4559.0], [25.2, 4559.0], [25.3, 4574.0], [25.4, 4574.0], [25.5, 4575.0], [25.6, 4575.0], [25.7, 4575.0], [25.8, 4576.0], [25.9, 4576.0], [26.0, 4581.0], [26.1, 4581.0], [26.2, 4581.0], [26.3, 4582.0], [26.4, 4582.0], [26.5, 4586.0], [26.6, 4586.0], [26.7, 4586.0], [26.8, 4587.0], [26.9, 4587.0], [27.0, 4587.0], [27.1, 4587.0], [27.2, 4587.0], [27.3, 4593.0], [27.4, 4593.0], [27.5, 4593.0], [27.6, 4593.0], [27.7, 4593.0], [27.8, 4596.0], [27.9, 4596.0], [28.0, 4601.0], [28.1, 4601.0], [28.2, 4601.0], [28.3, 4605.0], [28.4, 4605.0], [28.5, 4608.0], [28.6, 4608.0], [28.7, 4608.0], [28.8, 4612.0], [28.9, 4612.0], [29.0, 4618.0], [29.1, 4618.0], [29.2, 4618.0], [29.3, 4621.0], [29.4, 4621.0], [29.5, 4634.0], [29.6, 4634.0], [29.7, 4634.0], [29.8, 4638.0], [29.9, 4638.0], [30.0, 4641.0], [30.1, 4641.0], [30.2, 4641.0], [30.3, 4642.0], [30.4, 4642.0], [30.5, 4643.0], [30.6, 4643.0], [30.7, 4643.0], [30.8, 4646.0], [30.9, 4646.0], [31.0, 4674.0], [31.1, 4674.0], [31.2, 4674.0], [31.3, 4678.0], [31.4, 4678.0], [31.5, 4686.0], [31.6, 4686.0], [31.7, 4686.0], [31.8, 4697.0], [31.9, 4697.0], [32.0, 4701.0], [32.1, 4701.0], [32.2, 4701.0], [32.3, 4704.0], [32.4, 4704.0], [32.5, 4705.0], [32.6, 4705.0], [32.7, 4705.0], [32.8, 4708.0], [32.9, 4708.0], [33.0, 4714.0], [33.1, 4714.0], [33.2, 4714.0], [33.3, 4717.0], [33.4, 4717.0], [33.5, 4723.0], [33.6, 4723.0], [33.7, 4723.0], [33.8, 4723.0], [33.9, 4723.0], [34.0, 4728.0], [34.1, 4728.0], [34.2, 4728.0], [34.3, 4732.0], [34.4, 4732.0], [34.5, 4734.0], [34.6, 4734.0], [34.7, 4734.0], [34.8, 4737.0], [34.9, 4737.0], [35.0, 4749.0], [35.1, 4749.0], [35.2, 4749.0], [35.3, 4749.0], [35.4, 4749.0], [35.5, 4751.0], [35.6, 4751.0], [35.7, 4751.0], [35.8, 4754.0], [35.9, 4754.0], [36.0, 4760.0], [36.1, 4760.0], [36.2, 4760.0], [36.3, 4762.0], [36.4, 4762.0], [36.5, 4763.0], [36.6, 4763.0], [36.7, 4763.0], [36.8, 4763.0], [36.9, 4763.0], [37.0, 4767.0], [37.1, 4767.0], [37.2, 4767.0], [37.3, 4770.0], [37.4, 4770.0], [37.5, 4778.0], [37.6, 4778.0], [37.7, 4778.0], [37.8, 4778.0], [37.9, 4778.0], [38.0, 4789.0], [38.1, 4789.0], [38.2, 4789.0], [38.3, 4796.0], [38.4, 4796.0], [38.5, 4797.0], [38.6, 4797.0], [38.7, 4797.0], [38.8, 4824.0], [38.9, 4824.0], [39.0, 4833.0], [39.1, 4833.0], [39.2, 4833.0], [39.3, 4833.0], [39.4, 4833.0], [39.5, 4835.0], [39.6, 4835.0], [39.7, 4835.0], [39.8, 4839.0], [39.9, 4839.0], [40.0, 4846.0], [40.1, 4846.0], [40.2, 4846.0], [40.3, 4876.0], [40.4, 4876.0], [40.5, 4876.0], [40.6, 4876.0], [40.7, 4876.0], [40.8, 4878.0], [40.9, 4878.0], [41.0, 4885.0], [41.1, 4885.0], [41.2, 4885.0], [41.3, 4891.0], [41.4, 4891.0], [41.5, 4895.0], [41.6, 4895.0], [41.7, 4895.0], [41.8, 4895.0], [41.9, 4895.0], [42.0, 4900.0], [42.1, 4900.0], [42.2, 4900.0], [42.3, 4900.0], [42.4, 4900.0], [42.5, 4901.0], [42.6, 4901.0], [42.7, 4901.0], [42.8, 4903.0], [42.9, 4903.0], [43.0, 4906.0], [43.1, 4906.0], [43.2, 4906.0], [43.3, 4907.0], [43.4, 4907.0], [43.5, 4908.0], [43.6, 4908.0], [43.7, 4908.0], [43.8, 4908.0], [43.9, 4908.0], [44.0, 4908.0], [44.1, 4908.0], [44.2, 4908.0], [44.3, 4909.0], [44.4, 4909.0], [44.5, 4911.0], [44.6, 4911.0], [44.7, 4911.0], [44.8, 4921.0], [44.9, 4921.0], [45.0, 4921.0], [45.1, 4921.0], [45.2, 4921.0], [45.3, 4923.0], [45.4, 4923.0], [45.5, 4924.0], [45.6, 4924.0], [45.7, 4924.0], [45.8, 4925.0], [45.9, 4925.0], [46.0, 4927.0], [46.1, 4927.0], [46.2, 4927.0], [46.3, 4928.0], [46.4, 4928.0], [46.5, 4935.0], [46.6, 4935.0], [46.7, 4935.0], [46.8, 4950.0], [46.9, 4950.0], [47.0, 4950.0], [47.1, 4950.0], [47.2, 4950.0], [47.3, 4951.0], [47.4, 4951.0], [47.5, 4952.0], [47.6, 4952.0], [47.7, 4952.0], [47.8, 4953.0], [47.9, 4953.0], [48.0, 4954.0], [48.1, 4954.0], [48.2, 4954.0], [48.3, 4956.0], [48.4, 4956.0], [48.5, 4961.0], [48.6, 4961.0], [48.7, 4961.0], [48.8, 4961.0], [48.9, 4961.0], [49.0, 4963.0], [49.1, 4963.0], [49.2, 4963.0], [49.3, 4966.0], [49.4, 4966.0], [49.5, 4967.0], [49.6, 4967.0], [49.7, 4967.0], [49.8, 4972.0], [49.9, 4972.0], [50.0, 4975.0], [50.1, 4975.0], [50.2, 4975.0], [50.3, 4979.0], [50.4, 4979.0], [50.5, 4988.0], [50.6, 4988.0], [50.7, 4988.0], [50.8, 4997.0], [50.9, 4997.0], [51.0, 4999.0], [51.1, 4999.0], [51.2, 4999.0], [51.3, 5000.0], [51.4, 5000.0], [51.5, 5001.0], [51.6, 5001.0], [51.7, 5001.0], [51.8, 5014.0], [51.9, 5014.0], [52.0, 5017.0], [52.1, 5017.0], [52.2, 5017.0], [52.3, 5021.0], [52.4, 5021.0], [52.5, 5022.0], [52.6, 5022.0], [52.7, 5022.0], [52.8, 5025.0], [52.9, 5025.0], [53.0, 5027.0], [53.1, 5027.0], [53.2, 5027.0], [53.3, 5032.0], [53.4, 5032.0], [53.5, 5038.0], [53.6, 5038.0], [53.7, 5038.0], [53.8, 5038.0], [53.9, 5038.0], [54.0, 5039.0], [54.1, 5039.0], [54.2, 5039.0], [54.3, 5040.0], [54.4, 5040.0], [54.5, 5045.0], [54.6, 5045.0], [54.7, 5045.0], [54.8, 5053.0], [54.9, 5053.0], [55.0, 5053.0], [55.1, 5053.0], [55.2, 5053.0], [55.3, 5058.0], [55.4, 5058.0], [55.5, 5060.0], [55.6, 5060.0], [55.7, 5060.0], [55.8, 5060.0], [55.9, 5060.0], [56.0, 5062.0], [56.1, 5062.0], [56.2, 5062.0], [56.3, 5063.0], [56.4, 5063.0], [56.5, 5064.0], [56.6, 5064.0], [56.7, 5064.0], [56.8, 5074.0], [56.9, 5074.0], [57.0, 5075.0], [57.1, 5075.0], [57.2, 5075.0], [57.3, 5075.0], [57.4, 5075.0], [57.5, 5078.0], [57.6, 5078.0], [57.7, 5078.0], [57.8, 5080.0], [57.9, 5080.0], [58.0, 5081.0], [58.1, 5081.0], [58.2, 5081.0], [58.3, 5084.0], [58.4, 5084.0], [58.5, 5087.0], [58.6, 5087.0], [58.7, 5087.0], [58.8, 5091.0], [58.9, 5091.0], [59.0, 5099.0], [59.1, 5099.0], [59.2, 5099.0], [59.3, 5100.0], [59.4, 5100.0], [59.5, 5100.0], [59.6, 5100.0], [59.7, 5100.0], [59.8, 5105.0], [59.9, 5105.0], [60.0, 5109.0], [60.1, 5109.0], [60.2, 5109.0], [60.3, 5110.0], [60.4, 5110.0], [60.5, 5113.0], [60.6, 5113.0], [60.7, 5113.0], [60.8, 5115.0], [60.9, 5115.0], [61.0, 5116.0], [61.1, 5116.0], [61.2, 5116.0], [61.3, 5122.0], [61.4, 5122.0], [61.5, 5130.0], [61.6, 5130.0], [61.7, 5130.0], [61.8, 5134.0], [61.9, 5134.0], [62.0, 5136.0], [62.1, 5136.0], [62.2, 5136.0], [62.3, 5137.0], [62.4, 5137.0], [62.5, 5138.0], [62.6, 5138.0], [62.7, 5138.0], [62.8, 5140.0], [62.9, 5140.0], [63.0, 5163.0], [63.1, 5163.0], [63.2, 5163.0], [63.3, 5164.0], [63.4, 5164.0], [63.5, 5168.0], [63.6, 5168.0], [63.7, 5168.0], [63.8, 5173.0], [63.9, 5173.0], [64.0, 5175.0], [64.1, 5175.0], [64.2, 5175.0], [64.3, 5181.0], [64.4, 5181.0], [64.5, 5186.0], [64.6, 5186.0], [64.7, 5186.0], [64.8, 5188.0], [64.9, 5188.0], [65.0, 5188.0], [65.1, 5188.0], [65.2, 5188.0], [65.3, 5191.0], [65.4, 5191.0], [65.5, 5198.0], [65.6, 5198.0], [65.7, 5198.0], [65.8, 5216.0], [65.9, 5216.0], [66.0, 5221.0], [66.1, 5221.0], [66.2, 5221.0], [66.3, 5231.0], [66.4, 5231.0], [66.5, 5232.0], [66.6, 5232.0], [66.7, 5232.0], [66.8, 5248.0], [66.9, 5248.0], [67.0, 5249.0], [67.1, 5249.0], [67.2, 5249.0], [67.3, 5251.0], [67.4, 5251.0], [67.5, 5251.0], [67.6, 5251.0], [67.7, 5251.0], [67.8, 5253.0], [67.9, 5253.0], [68.0, 5254.0], [68.1, 5254.0], [68.2, 5254.0], [68.3, 5260.0], [68.4, 5260.0], [68.5, 5261.0], [68.6, 5261.0], [68.7, 5261.0], [68.8, 5262.0], [68.9, 5262.0], [69.0, 5263.0], [69.1, 5263.0], [69.2, 5263.0], [69.3, 5263.0], [69.4, 5263.0], [69.5, 5272.0], [69.6, 5272.0], [69.7, 5272.0], [69.8, 5276.0], [69.9, 5276.0], [70.0, 5276.0], [70.1, 5276.0], [70.2, 5276.0], [70.3, 5280.0], [70.4, 5280.0], [70.5, 5282.0], [70.6, 5282.0], [70.7, 5282.0], [70.8, 5282.0], [70.9, 5282.0], [71.0, 5282.0], [71.1, 5282.0], [71.2, 5282.0], [71.3, 5283.0], [71.4, 5283.0], [71.5, 5289.0], [71.6, 5289.0], [71.7, 5289.0], [71.8, 5290.0], [71.9, 5290.0], [72.0, 5293.0], [72.1, 5293.0], [72.2, 5293.0], [72.3, 5301.0], [72.4, 5301.0], [72.5, 5303.0], [72.6, 5303.0], [72.7, 5303.0], [72.8, 5308.0], [72.9, 5308.0], [73.0, 5309.0], [73.1, 5309.0], [73.2, 5309.0], [73.3, 5316.0], [73.4, 5316.0], [73.5, 5318.0], [73.6, 5318.0], [73.7, 5318.0], [73.8, 5319.0], [73.9, 5319.0], [74.0, 5322.0], [74.1, 5322.0], [74.2, 5322.0], [74.3, 5327.0], [74.4, 5327.0], [74.5, 5327.0], [74.6, 5327.0], [74.7, 5327.0], [74.8, 5341.0], [74.9, 5341.0], [75.0, 5348.0], [75.1, 5348.0], [75.2, 5348.0], [75.3, 5355.0], [75.4, 5355.0], [75.5, 5372.0], [75.6, 5372.0], [75.7, 5372.0], [75.8, 5380.0], [75.9, 5380.0], [76.0, 5380.0], [76.1, 5380.0], [76.2, 5380.0], [76.3, 5382.0], [76.4, 5382.0], [76.5, 5385.0], [76.6, 5385.0], [76.7, 5385.0], [76.8, 5397.0], [76.9, 5397.0], [77.0, 5402.0], [77.1, 5402.0], [77.2, 5402.0], [77.3, 5403.0], [77.4, 5403.0], [77.5, 5404.0], [77.6, 5404.0], [77.7, 5404.0], [77.8, 5410.0], [77.9, 5410.0], [78.0, 5415.0], [78.1, 5415.0], [78.2, 5415.0], [78.3, 5457.0], [78.4, 5457.0], [78.5, 5465.0], [78.6, 5465.0], [78.7, 5465.0], [78.8, 5486.0], [78.9, 5486.0], [79.0, 5491.0], [79.1, 5491.0], [79.2, 5491.0], [79.3, 5510.0], [79.4, 5510.0], [79.5, 5517.0], [79.6, 5517.0], [79.7, 5517.0], [79.8, 5520.0], [79.9, 5520.0], [80.0, 5532.0], [80.1, 5532.0], [80.2, 5532.0], [80.3, 5541.0], [80.4, 5541.0], [80.5, 5582.0], [80.6, 5582.0], [80.7, 5582.0], [80.8, 5588.0], [80.9, 5588.0], [81.0, 5592.0], [81.1, 5592.0], [81.2, 5592.0], [81.3, 5594.0], [81.4, 5594.0], [81.5, 5646.0], [81.6, 5646.0], [81.7, 5646.0], [81.8, 5647.0], [81.9, 5647.0], [82.0, 5652.0], [82.1, 5652.0], [82.2, 5652.0], [82.3, 5679.0], [82.4, 5679.0], [82.5, 5693.0], [82.6, 5693.0], [82.7, 5693.0], [82.8, 5696.0], [82.9, 5696.0], [83.0, 5705.0], [83.1, 5705.0], [83.2, 5705.0], [83.3, 5727.0], [83.4, 5727.0], [83.5, 5729.0], [83.6, 5729.0], [83.7, 5729.0], [83.8, 5745.0], [83.9, 5745.0], [84.0, 5751.0], [84.1, 5751.0], [84.2, 5751.0], [84.3, 5754.0], [84.4, 5754.0], [84.5, 5785.0], [84.6, 5785.0], [84.7, 5785.0], [84.8, 5804.0], [84.9, 5804.0], [85.0, 5820.0], [85.1, 5820.0], [85.2, 5820.0], [85.3, 5835.0], [85.4, 5835.0], [85.5, 5836.0], [85.6, 5836.0], [85.7, 5836.0], [85.8, 5852.0], [85.9, 5852.0], [86.0, 5854.0], [86.1, 5854.0], [86.2, 5854.0], [86.3, 5856.0], [86.4, 5856.0], [86.5, 5860.0], [86.6, 5860.0], [86.7, 5860.0], [86.8, 5864.0], [86.9, 5864.0], [87.0, 5866.0], [87.1, 5866.0], [87.2, 5866.0], [87.3, 5873.0], [87.4, 5873.0], [87.5, 5875.0], [87.6, 5875.0], [87.7, 5875.0], [87.8, 5881.0], [87.9, 5881.0], [88.0, 5889.0], [88.1, 5889.0], [88.2, 5889.0], [88.3, 5926.0], [88.4, 5926.0], [88.5, 5934.0], [88.6, 5934.0], [88.7, 5934.0], [88.8, 5952.0], [88.9, 5952.0], [89.0, 5953.0], [89.1, 5953.0], [89.2, 5953.0], [89.3, 5954.0], [89.4, 5954.0], [89.5, 5955.0], [89.6, 5955.0], [89.7, 5955.0], [89.8, 5995.0], [89.9, 5995.0], [90.0, 6035.0], [90.1, 6035.0], [90.2, 6035.0], [90.3, 6046.0], [90.4, 6046.0], [90.5, 6069.0], [90.6, 6069.0], [90.7, 6069.0], [90.8, 6077.0], [90.9, 6077.0], [91.0, 6221.0], [91.1, 6221.0], [91.2, 6221.0], [91.3, 8051.0], [91.4, 8051.0], [91.5, 8073.0], [91.6, 8073.0], [91.7, 8073.0], [91.8, 8101.0], [91.9, 8101.0], [92.0, 8108.0], [92.1, 8108.0], [92.2, 8108.0], [92.3, 8124.0], [92.4, 8124.0], [92.5, 8124.0], [92.6, 8124.0], [92.7, 8124.0], [92.8, 8136.0], [92.9, 8136.0], [93.0, 8137.0], [93.1, 8137.0], [93.2, 8137.0], [93.3, 8138.0], [93.4, 8138.0], [93.5, 8138.0], [93.6, 8138.0], [93.7, 8138.0], [93.8, 8157.0], [93.9, 8157.0], [94.0, 8158.0], [94.1, 8158.0], [94.2, 8158.0], [94.3, 8164.0], [94.4, 8164.0], [94.5, 8167.0], [94.6, 8167.0], [94.7, 8167.0], [94.8, 8174.0], [94.9, 8174.0], [95.0, 8174.0], [95.1, 8174.0], [95.2, 8174.0], [95.3, 8188.0], [95.4, 8188.0], [95.5, 8196.0], [95.6, 8196.0], [95.7, 8196.0], [95.8, 8213.0], [95.9, 8213.0], [96.0, 8241.0], [96.1, 8241.0], [96.2, 8241.0], [96.3, 8248.0], [96.4, 8248.0], [96.5, 8281.0], [96.6, 8281.0], [96.7, 8281.0], [96.8, 8321.0], [96.9, 8321.0], [97.0, 8322.0], [97.1, 8322.0], [97.2, 8322.0], [97.3, 8356.0], [97.4, 8356.0], [97.5, 8370.0], [97.6, 8370.0], [97.7, 8370.0], [97.8, 8400.0], [97.9, 8400.0], [98.0, 8411.0], [98.1, 8411.0], [98.2, 8411.0], [98.3, 8463.0], [98.4, 8463.0], [98.5, 8480.0], [98.6, 8480.0], [98.7, 8480.0], [98.8, 8788.0], [98.9, 8788.0], [99.0, 8852.0], [99.1, 8852.0], [99.2, 8852.0], [99.3, 8856.0], [99.4, 8856.0], [99.5, 8899.0], [99.6, 8899.0], [99.7, 8899.0], [99.8, 8928.0], [99.9, 8928.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[0.0, 1160.0], [0.1, 1160.0], [0.2, 1160.0], [0.3, 1195.0], [0.4, 1195.0], [0.5, 1213.0], [0.6, 1213.0], [0.7, 1213.0], [0.8, 1278.0], [0.9, 1278.0], [1.0, 1278.0], [1.1, 1278.0], [1.2, 1278.0], [1.3, 1308.0], [1.4, 1308.0], [1.5, 1309.0], [1.6, 1309.0], [1.7, 1309.0], [1.8, 1315.0], [1.9, 1315.0], [2.0, 1325.0], [2.1, 1325.0], [2.2, 1325.0], [2.3, 1356.0], [2.4, 1356.0], [2.5, 1377.0], [2.6, 1377.0], [2.7, 1377.0], [2.8, 1394.0], [2.9, 1394.0], [3.0, 1399.0], [3.1, 1399.0], [3.2, 1399.0], [3.3, 1431.0], [3.4, 1431.0], [3.5, 1450.0], [3.6, 1450.0], [3.7, 1450.0], [3.8, 1463.0], [3.9, 1463.0], [4.0, 1464.0], [4.1, 1464.0], [4.2, 1464.0], [4.3, 1467.0], [4.4, 1467.0], [4.5, 1482.0], [4.6, 1482.0], [4.7, 1482.0], [4.8, 1490.0], [4.9, 1490.0], [5.0, 1495.0], [5.1, 1495.0], [5.2, 1495.0], [5.3, 1495.0], [5.4, 1495.0], [5.5, 1498.0], [5.6, 1498.0], [5.7, 1498.0], [5.8, 1499.0], [5.9, 1499.0], [6.0, 1499.0], [6.1, 1499.0], [6.2, 1499.0], [6.3, 1503.0], [6.4, 1503.0], [6.5, 1514.0], [6.6, 1514.0], [6.7, 1514.0], [6.8, 1514.0], [6.9, 1514.0], [7.0, 1517.0], [7.1, 1517.0], [7.2, 1517.0], [7.3, 1525.0], [7.4, 1525.0], [7.5, 1527.0], [7.6, 1527.0], [7.7, 1527.0], [7.8, 1529.0], [7.9, 1529.0], [8.0, 1532.0], [8.1, 1532.0], [8.2, 1532.0], [8.3, 1537.0], [8.4, 1537.0], [8.5, 1555.0], [8.6, 1555.0], [8.7, 1555.0], [8.8, 1556.0], [8.9, 1556.0], [9.0, 1564.0], [9.1, 1564.0], [9.2, 1564.0], [9.3, 1567.0], [9.4, 1567.0], [9.5, 1568.0], [9.6, 1568.0], [9.7, 1568.0], [9.8, 1569.0], [9.9, 1569.0], [10.0, 1580.0], [10.1, 1580.0], [10.2, 1580.0], [10.3, 1582.0], [10.4, 1582.0], [10.5, 1586.0], [10.6, 1586.0], [10.7, 1586.0], [10.8, 1589.0], [10.9, 1589.0], [11.0, 1596.0], [11.1, 1596.0], [11.2, 1596.0], [11.3, 1601.0], [11.4, 1601.0], [11.5, 1604.0], [11.6, 1604.0], [11.7, 1604.0], [11.8, 1604.0], [11.9, 1604.0], [12.0, 1614.0], [12.1, 1614.0], [12.2, 1614.0], [12.3, 1615.0], [12.4, 1615.0], [12.5, 1615.0], [12.6, 1615.0], [12.7, 1615.0], [12.8, 1618.0], [12.9, 1618.0], [13.0, 1620.0], [13.1, 1620.0], [13.2, 1620.0], [13.3, 1621.0], [13.4, 1621.0], [13.5, 1621.0], [13.6, 1621.0], [13.7, 1621.0], [13.8, 1624.0], [13.9, 1624.0], [14.0, 1641.0], [14.1, 1641.0], [14.2, 1641.0], [14.3, 1648.0], [14.4, 1648.0], [14.5, 1648.0], [14.6, 1648.0], [14.7, 1648.0], [14.8, 1655.0], [14.9, 1655.0], [15.0, 1656.0], [15.1, 1656.0], [15.2, 1656.0], [15.3, 1659.0], [15.4, 1659.0], [15.5, 1663.0], [15.6, 1663.0], [15.7, 1663.0], [15.8, 1669.0], [15.9, 1669.0], [16.0, 1671.0], [16.1, 1671.0], [16.2, 1671.0], [16.3, 1673.0], [16.4, 1673.0], [16.5, 1677.0], [16.6, 1677.0], [16.7, 1677.0], [16.8, 1680.0], [16.9, 1680.0], [17.0, 1683.0], [17.1, 1683.0], [17.2, 1683.0], [17.3, 1684.0], [17.4, 1684.0], [17.5, 1684.0], [17.6, 1684.0], [17.7, 1684.0], [17.8, 1690.0], [17.9, 1690.0], [18.0, 1693.0], [18.1, 1693.0], [18.2, 1693.0], [18.3, 1695.0], [18.4, 1695.0], [18.5, 1697.0], [18.6, 1697.0], [18.7, 1697.0], [18.8, 1697.0], [18.9, 1697.0], [19.0, 1699.0], [19.1, 1699.0], [19.2, 1699.0], [19.3, 1704.0], [19.4, 1704.0], [19.5, 1710.0], [19.6, 1710.0], [19.7, 1710.0], [19.8, 1711.0], [19.9, 1711.0], [20.0, 1714.0], [20.1, 1714.0], [20.2, 1714.0], [20.3, 1721.0], [20.4, 1721.0], [20.5, 1722.0], [20.6, 1722.0], [20.7, 1722.0], [20.8, 1725.0], [20.9, 1725.0], [21.0, 1725.0], [21.1, 1725.0], [21.2, 1725.0], [21.3, 1725.0], [21.4, 1725.0], [21.5, 1726.0], [21.6, 1726.0], [21.7, 1726.0], [21.8, 1727.0], [21.9, 1727.0], [22.0, 1735.0], [22.1, 1735.0], [22.2, 1735.0], [22.3, 1736.0], [22.4, 1736.0], [22.5, 1736.0], [22.6, 1736.0], [22.7, 1736.0], [22.8, 1740.0], [22.9, 1740.0], [23.0, 1740.0], [23.1, 1740.0], [23.2, 1740.0], [23.3, 1744.0], [23.4, 1744.0], [23.5, 1745.0], [23.6, 1745.0], [23.7, 1745.0], [23.8, 1749.0], [23.9, 1749.0], [24.0, 1750.0], [24.1, 1750.0], [24.2, 1750.0], [24.3, 1753.0], [24.4, 1753.0], [24.5, 1757.0], [24.6, 1757.0], [24.7, 1757.0], [24.8, 1758.0], [24.9, 1758.0], [25.0, 1765.0], [25.1, 1765.0], [25.2, 1765.0], [25.3, 1770.0], [25.4, 1770.0], [25.5, 1771.0], [25.6, 1771.0], [25.7, 1771.0], [25.8, 1772.0], [25.9, 1772.0], [26.0, 1773.0], [26.1, 1773.0], [26.2, 1773.0], [26.3, 1774.0], [26.4, 1774.0], [26.5, 1776.0], [26.6, 1776.0], [26.7, 1776.0], [26.8, 1778.0], [26.9, 1778.0], [27.0, 1778.0], [27.1, 1778.0], [27.2, 1778.0], [27.3, 1782.0], [27.4, 1782.0], [27.5, 1787.0], [27.6, 1787.0], [27.7, 1787.0], [27.8, 1789.0], [27.9, 1789.0], [28.0, 1790.0], [28.1, 1790.0], [28.2, 1790.0], [28.3, 1793.0], [28.4, 1793.0], [28.5, 1796.0], [28.6, 1796.0], [28.7, 1796.0], [28.8, 1796.0], [28.9, 1796.0], [29.0, 1800.0], [29.1, 1800.0], [29.2, 1800.0], [29.3, 1809.0], [29.4, 1809.0], [29.5, 1810.0], [29.6, 1810.0], [29.7, 1810.0], [29.8, 1810.0], [29.9, 1810.0], [30.0, 1810.0], [30.1, 1810.0], [30.2, 1810.0], [30.3, 1811.0], [30.4, 1811.0], [30.5, 1813.0], [30.6, 1813.0], [30.7, 1813.0], [30.8, 1814.0], [30.9, 1814.0], [31.0, 1814.0], [31.1, 1814.0], [31.2, 1814.0], [31.3, 1815.0], [31.4, 1815.0], [31.5, 1823.0], [31.6, 1823.0], [31.7, 1823.0], [31.8, 1827.0], [31.9, 1827.0], [32.0, 1827.0], [32.1, 1827.0], [32.2, 1827.0], [32.3, 1830.0], [32.4, 1830.0], [32.5, 1831.0], [32.6, 1831.0], [32.7, 1831.0], [32.8, 1832.0], [32.9, 1832.0], [33.0, 1832.0], [33.1, 1832.0], [33.2, 1832.0], [33.3, 1832.0], [33.4, 1832.0], [33.5, 1838.0], [33.6, 1838.0], [33.7, 1838.0], [33.8, 1839.0], [33.9, 1839.0], [34.0, 1841.0], [34.1, 1841.0], [34.2, 1841.0], [34.3, 1842.0], [34.4, 1842.0], [34.5, 1843.0], [34.6, 1843.0], [34.7, 1843.0], [34.8, 1848.0], [34.9, 1848.0], [35.0, 1848.0], [35.1, 1848.0], [35.2, 1848.0], [35.3, 1850.0], [35.4, 1850.0], [35.5, 1855.0], [35.6, 1855.0], [35.7, 1855.0], [35.8, 1857.0], [35.9, 1857.0], [36.0, 1857.0], [36.1, 1857.0], [36.2, 1857.0], [36.3, 1861.0], [36.4, 1861.0], [36.5, 1864.0], [36.6, 1864.0], [36.7, 1864.0], [36.8, 1865.0], [36.9, 1865.0], [37.0, 1865.0], [37.1, 1865.0], [37.2, 1865.0], [37.3, 1867.0], [37.4, 1867.0], [37.5, 1869.0], [37.6, 1869.0], [37.7, 1869.0], [37.8, 1869.0], [37.9, 1869.0], [38.0, 1870.0], [38.1, 1870.0], [38.2, 1870.0], [38.3, 1872.0], [38.4, 1872.0], [38.5, 1875.0], [38.6, 1875.0], [38.7, 1875.0], [38.8, 1876.0], [38.9, 1876.0], [39.0, 1877.0], [39.1, 1877.0], [39.2, 1877.0], [39.3, 1878.0], [39.4, 1878.0], [39.5, 1881.0], [39.6, 1881.0], [39.7, 1881.0], [39.8, 1885.0], [39.9, 1885.0], [40.0, 1887.0], [40.1, 1887.0], [40.2, 1887.0], [40.3, 1888.0], [40.4, 1888.0], [40.5, 1891.0], [40.6, 1891.0], [40.7, 1891.0], [40.8, 1892.0], [40.9, 1892.0], [41.0, 1898.0], [41.1, 1898.0], [41.2, 1898.0], [41.3, 1899.0], [41.4, 1899.0], [41.5, 1901.0], [41.6, 1901.0], [41.7, 1901.0], [41.8, 1902.0], [41.9, 1902.0], [42.0, 1912.0], [42.1, 1912.0], [42.2, 1912.0], [42.3, 1913.0], [42.4, 1913.0], [42.5, 1916.0], [42.6, 1916.0], [42.7, 1916.0], [42.8, 1918.0], [42.9, 1918.0], [43.0, 1920.0], [43.1, 1920.0], [43.2, 1920.0], [43.3, 1921.0], [43.4, 1921.0], [43.5, 1927.0], [43.6, 1927.0], [43.7, 1927.0], [43.8, 1936.0], [43.9, 1936.0], [44.0, 1937.0], [44.1, 1937.0], [44.2, 1937.0], [44.3, 1941.0], [44.4, 1941.0], [44.5, 1943.0], [44.6, 1943.0], [44.7, 1943.0], [44.8, 1943.0], [44.9, 1943.0], [45.0, 1948.0], [45.1, 1948.0], [45.2, 1948.0], [45.3, 1950.0], [45.4, 1950.0], [45.5, 1955.0], [45.6, 1955.0], [45.7, 1955.0], [45.8, 1957.0], [45.9, 1957.0], [46.0, 1960.0], [46.1, 1960.0], [46.2, 1960.0], [46.3, 1962.0], [46.4, 1962.0], [46.5, 1963.0], [46.6, 1963.0], [46.7, 1963.0], [46.8, 1970.0], [46.9, 1970.0], [47.0, 1976.0], [47.1, 1976.0], [47.2, 1976.0], [47.3, 1979.0], [47.4, 1979.0], [47.5, 1987.0], [47.6, 1987.0], [47.7, 1987.0], [47.8, 1990.0], [47.9, 1990.0], [48.0, 1992.0], [48.1, 1992.0], [48.2, 1992.0], [48.3, 1998.0], [48.4, 1998.0], [48.5, 2031.0], [48.6, 2031.0], [48.7, 2031.0], [48.8, 2033.0], [48.9, 2033.0], [49.0, 2033.0], [49.1, 2033.0], [49.2, 2033.0], [49.3, 2033.0], [49.4, 2033.0], [49.5, 2036.0], [49.6, 2036.0], [49.7, 2036.0], [49.8, 2049.0], [49.9, 2049.0], [50.0, 2059.0], [50.1, 2059.0], [50.2, 2059.0], [50.3, 2067.0], [50.4, 2067.0], [50.5, 2072.0], [50.6, 2072.0], [50.7, 2072.0], [50.8, 2074.0], [50.9, 2074.0], [51.0, 2075.0], [51.1, 2075.0], [51.2, 2075.0], [51.3, 2084.0], [51.4, 2084.0], [51.5, 2087.0], [51.6, 2087.0], [51.7, 2087.0], [51.8, 2098.0], [51.9, 2098.0], [52.0, 2106.0], [52.1, 2106.0], [52.2, 2106.0], [52.3, 2120.0], [52.4, 2120.0], [52.5, 2138.0], [52.6, 2138.0], [52.7, 2138.0], [52.8, 2140.0], [52.9, 2140.0], [53.0, 2146.0], [53.1, 2146.0], [53.2, 2146.0], [53.3, 2149.0], [53.4, 2149.0], [53.5, 2151.0], [53.6, 2151.0], [53.7, 2151.0], [53.8, 2152.0], [53.9, 2152.0], [54.0, 2171.0], [54.1, 2171.0], [54.2, 2171.0], [54.3, 2175.0], [54.4, 2175.0], [54.5, 2177.0], [54.6, 2177.0], [54.7, 2177.0], [54.8, 2182.0], [54.9, 2182.0], [55.0, 2183.0], [55.1, 2183.0], [55.2, 2183.0], [55.3, 2184.0], [55.4, 2184.0], [55.5, 2190.0], [55.6, 2190.0], [55.7, 2190.0], [55.8, 2194.0], [55.9, 2194.0], [56.0, 2198.0], [56.1, 2198.0], [56.2, 2198.0], [56.3, 2205.0], [56.4, 2205.0], [56.5, 2207.0], [56.6, 2207.0], [56.7, 2207.0], [56.8, 2210.0], [56.9, 2210.0], [57.0, 2211.0], [57.1, 2211.0], [57.2, 2211.0], [57.3, 2212.0], [57.4, 2212.0], [57.5, 2213.0], [57.6, 2213.0], [57.7, 2213.0], [57.8, 2222.0], [57.9, 2222.0], [58.0, 2232.0], [58.1, 2232.0], [58.2, 2232.0], [58.3, 2235.0], [58.4, 2235.0], [58.5, 2236.0], [58.6, 2236.0], [58.7, 2236.0], [58.8, 2239.0], [58.9, 2239.0], [59.0, 2248.0], [59.1, 2248.0], [59.2, 2248.0], [59.3, 2249.0], [59.4, 2249.0], [59.5, 2259.0], [59.6, 2259.0], [59.7, 2259.0], [59.8, 2260.0], [59.9, 2260.0], [60.0, 2260.0], [60.1, 2260.0], [60.2, 2260.0], [60.3, 2282.0], [60.4, 2282.0], [60.5, 2283.0], [60.6, 2283.0], [60.7, 2283.0], [60.8, 2284.0], [60.9, 2284.0], [61.0, 2286.0], [61.1, 2286.0], [61.2, 2286.0], [61.3, 2293.0], [61.4, 2293.0], [61.5, 2294.0], [61.6, 2294.0], [61.7, 2294.0], [61.8, 2297.0], [61.9, 2297.0], [62.0, 2297.0], [62.1, 2297.0], [62.2, 2297.0], [62.3, 2313.0], [62.4, 2313.0], [62.5, 2313.0], [62.6, 2313.0], [62.7, 2313.0], [62.8, 2314.0], [62.9, 2314.0], [63.0, 2319.0], [63.1, 2319.0], [63.2, 2319.0], [63.3, 2324.0], [63.4, 2324.0], [63.5, 2332.0], [63.6, 2332.0], [63.7, 2332.0], [63.8, 2342.0], [63.9, 2342.0], [64.0, 2348.0], [64.1, 2348.0], [64.2, 2348.0], [64.3, 2365.0], [64.4, 2365.0], [64.5, 2375.0], [64.6, 2375.0], [64.7, 2375.0], [64.8, 2377.0], [64.9, 2377.0], [65.0, 2382.0], [65.1, 2382.0], [65.2, 2382.0], [65.3, 2389.0], [65.4, 2389.0], [65.5, 2390.0], [65.6, 2390.0], [65.7, 2390.0], [65.8, 2393.0], [65.9, 2393.0], [66.0, 2395.0], [66.1, 2395.0], [66.2, 2395.0], [66.3, 2401.0], [66.4, 2401.0], [66.5, 2402.0], [66.6, 2402.0], [66.7, 2402.0], [66.8, 2405.0], [66.9, 2405.0], [67.0, 2412.0], [67.1, 2412.0], [67.2, 2412.0], [67.3, 2412.0], [67.4, 2412.0], [67.5, 2413.0], [67.6, 2413.0], [67.7, 2413.0], [67.8, 2413.0], [67.9, 2413.0], [68.0, 2418.0], [68.1, 2418.0], [68.2, 2418.0], [68.3, 2421.0], [68.4, 2421.0], [68.5, 2426.0], [68.6, 2426.0], [68.7, 2426.0], [68.8, 2427.0], [68.9, 2427.0], [69.0, 2433.0], [69.1, 2433.0], [69.2, 2433.0], [69.3, 2436.0], [69.4, 2436.0], [69.5, 2444.0], [69.6, 2444.0], [69.7, 2444.0], [69.8, 2446.0], [69.9, 2446.0], [70.0, 2449.0], [70.1, 2449.0], [70.2, 2449.0], [70.3, 2453.0], [70.4, 2453.0], [70.5, 2463.0], [70.6, 2463.0], [70.7, 2463.0], [70.8, 2469.0], [70.9, 2469.0], [71.0, 2478.0], [71.1, 2478.0], [71.2, 2478.0], [71.3, 2480.0], [71.4, 2480.0], [71.5, 2491.0], [71.6, 2491.0], [71.7, 2491.0], [71.8, 2493.0], [71.9, 2493.0], [72.0, 2501.0], [72.1, 2501.0], [72.2, 2501.0], [72.3, 2506.0], [72.4, 2506.0], [72.5, 2512.0], [72.6, 2512.0], [72.7, 2512.0], [72.8, 2513.0], [72.9, 2513.0], [73.0, 2516.0], [73.1, 2516.0], [73.2, 2516.0], [73.3, 2518.0], [73.4, 2518.0], [73.5, 2524.0], [73.6, 2524.0], [73.7, 2524.0], [73.8, 2524.0], [73.9, 2524.0], [74.0, 2526.0], [74.1, 2526.0], [74.2, 2526.0], [74.3, 2527.0], [74.4, 2527.0], [74.5, 2532.0], [74.6, 2532.0], [74.7, 2532.0], [74.8, 2533.0], [74.9, 2533.0], [75.0, 2538.0], [75.1, 2538.0], [75.2, 2538.0], [75.3, 2538.0], [75.4, 2538.0], [75.5, 2540.0], [75.6, 2540.0], [75.7, 2540.0], [75.8, 2543.0], [75.9, 2543.0], [76.0, 2545.0], [76.1, 2545.0], [76.2, 2545.0], [76.3, 2549.0], [76.4, 2549.0], [76.5, 2552.0], [76.6, 2552.0], [76.7, 2552.0], [76.8, 2557.0], [76.9, 2557.0], [77.0, 2558.0], [77.1, 2558.0], [77.2, 2558.0], [77.3, 2582.0], [77.4, 2582.0], [77.5, 2583.0], [77.6, 2583.0], [77.7, 2583.0], [77.8, 2583.0], [77.9, 2583.0], [78.0, 2585.0], [78.1, 2585.0], [78.2, 2585.0], [78.3, 2594.0], [78.4, 2594.0], [78.5, 2598.0], [78.6, 2598.0], [78.7, 2598.0], [78.8, 2600.0], [78.9, 2600.0], [79.0, 2601.0], [79.1, 2601.0], [79.2, 2601.0], [79.3, 2608.0], [79.4, 2608.0], [79.5, 2615.0], [79.6, 2615.0], [79.7, 2615.0], [79.8, 2615.0], [79.9, 2615.0], [80.0, 2620.0], [80.1, 2620.0], [80.2, 2620.0], [80.3, 2623.0], [80.4, 2623.0], [80.5, 2629.0], [80.6, 2629.0], [80.7, 2629.0], [80.8, 2633.0], [80.9, 2633.0], [81.0, 2641.0], [81.1, 2641.0], [81.2, 2641.0], [81.3, 2645.0], [81.4, 2645.0], [81.5, 2647.0], [81.6, 2647.0], [81.7, 2647.0], [81.8, 2649.0], [81.9, 2649.0], [82.0, 2652.0], [82.1, 2652.0], [82.2, 2652.0], [82.3, 2668.0], [82.4, 2668.0], [82.5, 2669.0], [82.6, 2669.0], [82.7, 2669.0], [82.8, 2670.0], [82.9, 2670.0], [83.0, 2685.0], [83.1, 2685.0], [83.2, 2685.0], [83.3, 2692.0], [83.4, 2692.0], [83.5, 2695.0], [83.6, 2695.0], [83.7, 2695.0], [83.8, 2719.0], [83.9, 2719.0], [84.0, 2721.0], [84.1, 2721.0], [84.2, 2721.0], [84.3, 2723.0], [84.4, 2723.0], [84.5, 2733.0], [84.6, 2733.0], [84.7, 2733.0], [84.8, 2741.0], [84.9, 2741.0], [85.0, 2742.0], [85.1, 2742.0], [85.2, 2742.0], [85.3, 2755.0], [85.4, 2755.0], [85.5, 2759.0], [85.6, 2759.0], [85.7, 2759.0], [85.8, 2764.0], [85.9, 2764.0], [86.0, 2812.0], [86.1, 2812.0], [86.2, 2812.0], [86.3, 2819.0], [86.4, 2819.0], [86.5, 2826.0], [86.6, 2826.0], [86.7, 2826.0], [86.8, 2829.0], [86.9, 2829.0], [87.0, 2850.0], [87.1, 2850.0], [87.2, 2850.0], [87.3, 2855.0], [87.4, 2855.0], [87.5, 2857.0], [87.6, 2857.0], [87.7, 2857.0], [87.8, 2863.0], [87.9, 2863.0], [88.0, 2865.0], [88.1, 2865.0], [88.2, 2865.0], [88.3, 2868.0], [88.4, 2868.0], [88.5, 2880.0], [88.6, 2880.0], [88.7, 2880.0], [88.8, 2897.0], [88.9, 2897.0], [89.0, 2904.0], [89.1, 2904.0], [89.2, 2904.0], [89.3, 2910.0], [89.4, 2910.0], [89.5, 2919.0], [89.6, 2919.0], [89.7, 2919.0], [89.8, 2919.0], [89.9, 2919.0], [90.0, 2927.0], [90.1, 2927.0], [90.2, 2927.0], [90.3, 2957.0], [90.4, 2957.0], [90.5, 2972.0], [90.6, 2972.0], [90.7, 2972.0], [90.8, 2977.0], [90.9, 2977.0], [91.0, 2980.0], [91.1, 2980.0], [91.2, 2980.0], [91.3, 2980.0], [91.4, 2980.0], [91.5, 2982.0], [91.6, 2982.0], [91.7, 2982.0], [91.8, 2999.0], [91.9, 2999.0], [92.0, 3010.0], [92.1, 3010.0], [92.2, 3010.0], [92.3, 3025.0], [92.4, 3025.0], [92.5, 3039.0], [92.6, 3039.0], [92.7, 3039.0], [92.8, 3048.0], [92.9, 3048.0], [93.0, 3093.0], [93.1, 3093.0], [93.2, 3093.0], [93.3, 3105.0], [93.4, 3105.0], [93.5, 3188.0], [93.6, 3188.0], [93.7, 3188.0], [93.8, 5018.0], [93.9, 5018.0], [94.0, 5019.0], [94.1, 5019.0], [94.2, 5019.0], [94.3, 5019.0], [94.4, 5019.0], [94.5, 5020.0], [94.6, 5020.0], [94.7, 5020.0], [94.8, 5020.0], [94.9, 5020.0], [95.0, 5021.0], [95.1, 5021.0], [95.2, 5021.0], [95.3, 5022.0], [95.4, 5022.0], [95.5, 5022.0], [95.6, 5022.0], [95.7, 5022.0], [95.8, 5023.0], [95.9, 5023.0], [96.0, 5024.0], [96.1, 5024.0], [96.2, 5024.0], [96.3, 5024.0], [96.4, 5024.0], [96.5, 5024.0], [96.6, 5024.0], [96.7, 5024.0], [96.8, 5025.0], [96.9, 5025.0], [97.0, 5025.0], [97.1, 5025.0], [97.2, 5025.0], [97.3, 5026.0], [97.4, 5026.0], [97.5, 5027.0], [97.6, 5027.0], [97.7, 5027.0], [97.8, 5028.0], [97.9, 5028.0], [98.0, 5029.0], [98.1, 5029.0], [98.2, 5029.0], [98.3, 5029.0], [98.4, 5029.0], [98.5, 5029.0], [98.6, 5029.0], [98.7, 5029.0], [98.8, 5029.0], [98.9, 5029.0], [99.0, 5031.0], [99.1, 5031.0], [99.2, 5031.0], [99.3, 5032.0], [99.4, 5032.0], [99.5, 5033.0], [99.6, 5033.0], [99.7, 5033.0], [99.8, 5033.0], [99.9, 5033.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[0.0, 2066.0], [0.1, 2066.0], [0.2, 2066.0], [0.3, 2069.0], [0.4, 2069.0], [0.5, 2076.0], [0.6, 2076.0], [0.7, 2076.0], [0.8, 2078.0], [0.9, 2078.0], [1.0, 2082.0], [1.1, 2082.0], [1.2, 2082.0], [1.3, 2090.0], [1.4, 2090.0], [1.5, 2095.0], [1.6, 2095.0], [1.7, 2095.0], [1.8, 2102.0], [1.9, 2102.0], [2.0, 2104.0], [2.1, 2104.0], [2.2, 2104.0], [2.3, 2106.0], [2.4, 2106.0], [2.5, 2109.0], [2.6, 2109.0], [2.7, 2109.0], [2.8, 2109.0], [2.9, 2109.0], [3.0, 2111.0], [3.1, 2111.0], [3.2, 2111.0], [3.3, 2112.0], [3.4, 2112.0], [3.5, 2113.0], [3.6, 2113.0], [3.7, 2113.0], [3.8, 2120.0], [3.9, 2120.0], [4.0, 2121.0], [4.1, 2121.0], [4.2, 2121.0], [4.3, 2131.0], [4.4, 2131.0], [4.5, 2139.0], [4.6, 2139.0], [4.7, 2139.0], [4.8, 2140.0], [4.9, 2140.0], [5.0, 2142.0], [5.1, 2142.0], [5.2, 2142.0], [5.3, 2156.0], [5.4, 2156.0], [5.5, 2163.0], [5.6, 2163.0], [5.7, 2163.0], [5.8, 2163.0], [5.9, 2163.0], [6.0, 2174.0], [6.1, 2174.0], [6.2, 2174.0], [6.3, 2175.0], [6.4, 2175.0], [6.5, 2178.0], [6.6, 2178.0], [6.7, 2178.0], [6.8, 2186.0], [6.9, 2186.0], [7.0, 2188.0], [7.1, 2188.0], [7.2, 2188.0], [7.3, 2189.0], [7.4, 2189.0], [7.5, 2195.0], [7.6, 2195.0], [7.7, 2195.0], [7.8, 2201.0], [7.9, 2201.0], [8.0, 2203.0], [8.1, 2203.0], [8.2, 2203.0], [8.3, 2204.0], [8.4, 2204.0], [8.5, 2209.0], [8.6, 2209.0], [8.7, 2209.0], [8.8, 2210.0], [8.9, 2210.0], [9.0, 2212.0], [9.1, 2212.0], [9.2, 2212.0], [9.3, 2212.0], [9.4, 2212.0], [9.5, 2215.0], [9.6, 2215.0], [9.7, 2215.0], [9.8, 2218.0], [9.9, 2218.0], [10.0, 2221.0], [10.1, 2221.0], [10.2, 2221.0], [10.3, 2223.0], [10.4, 2223.0], [10.5, 2223.0], [10.6, 2223.0], [10.7, 2223.0], [10.8, 2227.0], [10.9, 2227.0], [11.0, 2229.0], [11.1, 2229.0], [11.2, 2229.0], [11.3, 2229.0], [11.4, 2229.0], [11.5, 2230.0], [11.6, 2230.0], [11.7, 2230.0], [11.8, 2230.0], [11.9, 2230.0], [12.0, 2230.0], [12.1, 2230.0], [12.2, 2230.0], [12.3, 2231.0], [12.4, 2231.0], [12.5, 2231.0], [12.6, 2231.0], [12.7, 2231.0], [12.8, 2232.0], [12.9, 2232.0], [13.0, 2235.0], [13.1, 2235.0], [13.2, 2235.0], [13.3, 2238.0], [13.4, 2238.0], [13.5, 2240.0], [13.6, 2240.0], [13.7, 2240.0], [13.8, 2240.0], [13.9, 2240.0], [14.0, 2240.0], [14.1, 2240.0], [14.2, 2240.0], [14.3, 2240.0], [14.4, 2240.0], [14.5, 2241.0], [14.6, 2241.0], [14.7, 2241.0], [14.8, 2242.0], [14.9, 2242.0], [15.0, 2245.0], [15.1, 2245.0], [15.2, 2245.0], [15.3, 2245.0], [15.4, 2245.0], [15.5, 2247.0], [15.6, 2247.0], [15.7, 2247.0], [15.8, 2249.0], [15.9, 2249.0], [16.0, 2250.0], [16.1, 2250.0], [16.2, 2250.0], [16.3, 2251.0], [16.4, 2251.0], [16.5, 2252.0], [16.6, 2252.0], [16.7, 2252.0], [16.8, 2255.0], [16.9, 2255.0], [17.0, 2255.0], [17.1, 2255.0], [17.2, 2255.0], [17.3, 2255.0], [17.4, 2255.0], [17.5, 2256.0], [17.6, 2256.0], [17.7, 2256.0], [17.8, 2259.0], [17.9, 2259.0], [18.0, 2260.0], [18.1, 2260.0], [18.2, 2260.0], [18.3, 2269.0], [18.4, 2269.0], [18.5, 2277.0], [18.6, 2277.0], [18.7, 2277.0], [18.8, 2280.0], [18.9, 2280.0], [19.0, 2282.0], [19.1, 2282.0], [19.2, 2282.0], [19.3, 2284.0], [19.4, 2284.0], [19.5, 2291.0], [19.6, 2291.0], [19.7, 2291.0], [19.8, 2291.0], [19.9, 2291.0], [20.0, 2297.0], [20.1, 2297.0], [20.2, 2297.0], [20.3, 2298.0], [20.4, 2298.0], [20.5, 2299.0], [20.6, 2299.0], [20.7, 2299.0], [20.8, 2299.0], [20.9, 2299.0], [21.0, 2302.0], [21.1, 2302.0], [21.2, 2302.0], [21.3, 2304.0], [21.4, 2304.0], [21.5, 2305.0], [21.6, 2305.0], [21.7, 2305.0], [21.8, 2307.0], [21.9, 2307.0], [22.0, 2307.0], [22.1, 2307.0], [22.2, 2307.0], [22.3, 2308.0], [22.4, 2308.0], [22.5, 2311.0], [22.6, 2311.0], [22.7, 2311.0], [22.8, 2325.0], [22.9, 2325.0], [23.0, 2328.0], [23.1, 2328.0], [23.2, 2328.0], [23.3, 2331.0], [23.4, 2331.0], [23.5, 2332.0], [23.6, 2332.0], [23.7, 2332.0], [23.8, 2336.0], [23.9, 2336.0], [24.0, 2337.0], [24.1, 2337.0], [24.2, 2337.0], [24.3, 2338.0], [24.4, 2338.0], [24.5, 2339.0], [24.6, 2339.0], [24.7, 2339.0], [24.8, 2341.0], [24.9, 2341.0], [25.0, 2342.0], [25.1, 2342.0], [25.2, 2342.0], [25.3, 2342.0], [25.4, 2342.0], [25.5, 2347.0], [25.6, 2347.0], [25.7, 2347.0], [25.8, 2347.0], [25.9, 2347.0], [26.0, 2350.0], [26.1, 2350.0], [26.2, 2350.0], [26.3, 2352.0], [26.4, 2352.0], [26.5, 2356.0], [26.6, 2356.0], [26.7, 2356.0], [26.8, 2357.0], [26.9, 2357.0], [27.0, 2357.0], [27.1, 2357.0], [27.2, 2357.0], [27.3, 2359.0], [27.4, 2359.0], [27.5, 2360.0], [27.6, 2360.0], [27.7, 2360.0], [27.8, 2364.0], [27.9, 2364.0], [28.0, 2365.0], [28.1, 2365.0], [28.2, 2365.0], [28.3, 2367.0], [28.4, 2367.0], [28.5, 2371.0], [28.6, 2371.0], [28.7, 2371.0], [28.8, 2371.0], [28.9, 2371.0], [29.0, 2377.0], [29.1, 2377.0], [29.2, 2377.0], [29.3, 2386.0], [29.4, 2386.0], [29.5, 2389.0], [29.6, 2389.0], [29.7, 2389.0], [29.8, 2390.0], [29.9, 2390.0], [30.0, 2391.0], [30.1, 2391.0], [30.2, 2391.0], [30.3, 2392.0], [30.4, 2392.0], [30.5, 2394.0], [30.6, 2394.0], [30.7, 2394.0], [30.8, 2394.0], [30.9, 2394.0], [31.0, 2399.0], [31.1, 2399.0], [31.2, 2399.0], [31.3, 2402.0], [31.4, 2402.0], [31.5, 2403.0], [31.6, 2403.0], [31.7, 2403.0], [31.8, 2405.0], [31.9, 2405.0], [32.0, 2428.0], [32.1, 2428.0], [32.2, 2428.0], [32.3, 2440.0], [32.4, 2440.0], [32.5, 2450.0], [32.6, 2450.0], [32.7, 2450.0], [32.8, 2455.0], [32.9, 2455.0], [33.0, 2472.0], [33.1, 2472.0], [33.2, 2472.0], [33.3, 2479.0], [33.4, 2479.0], [33.5, 2482.0], [33.6, 2482.0], [33.7, 2482.0], [33.8, 2487.0], [33.9, 2487.0], [34.0, 2508.0], [34.1, 2508.0], [34.2, 2508.0], [34.3, 2521.0], [34.4, 2521.0], [34.5, 2538.0], [34.6, 2538.0], [34.7, 2538.0], [34.8, 2563.0], [34.9, 2563.0], [35.0, 2571.0], [35.1, 2571.0], [35.2, 2571.0], [35.3, 2588.0], [35.4, 2588.0], [35.5, 2599.0], [35.6, 2599.0], [35.7, 2599.0], [35.8, 2604.0], [35.9, 2604.0], [36.0, 2604.0], [36.1, 2604.0], [36.2, 2604.0], [36.3, 2631.0], [36.4, 2631.0], [36.5, 2638.0], [36.6, 2638.0], [36.7, 2638.0], [36.8, 2638.0], [36.9, 2638.0], [37.0, 2706.0], [37.1, 2706.0], [37.2, 2706.0], [37.3, 2754.0], [37.4, 2754.0], [37.5, 2757.0], [37.6, 2757.0], [37.7, 2757.0], [37.8, 2757.0], [37.9, 2757.0], [38.0, 2759.0], [38.1, 2759.0], [38.2, 2759.0], [38.3, 2764.0], [38.4, 2764.0], [38.5, 2765.0], [38.6, 2765.0], [38.7, 2765.0], [38.8, 2771.0], [38.9, 2771.0], [39.0, 2782.0], [39.1, 2782.0], [39.2, 2782.0], [39.3, 2787.0], [39.4, 2787.0], [39.5, 2794.0], [39.6, 2794.0], [39.7, 2794.0], [39.8, 2794.0], [39.9, 2794.0], [40.0, 2796.0], [40.1, 2796.0], [40.2, 2796.0], [40.3, 2797.0], [40.4, 2797.0], [40.5, 2800.0], [40.6, 2800.0], [40.7, 2800.0], [40.8, 2800.0], [40.9, 2800.0], [41.0, 2815.0], [41.1, 2815.0], [41.2, 2815.0], [41.3, 2820.0], [41.4, 2820.0], [41.5, 2827.0], [41.6, 2827.0], [41.7, 2827.0], [41.8, 2828.0], [41.9, 2828.0], [42.0, 2830.0], [42.1, 2830.0], [42.2, 2830.0], [42.3, 2831.0], [42.4, 2831.0], [42.5, 2833.0], [42.6, 2833.0], [42.7, 2833.0], [42.8, 2836.0], [42.9, 2836.0], [43.0, 2837.0], [43.1, 2837.0], [43.2, 2837.0], [43.3, 2837.0], [43.4, 2837.0], [43.5, 2837.0], [43.6, 2837.0], [43.7, 2837.0], [43.8, 2837.0], [43.9, 2837.0], [44.0, 2838.0], [44.1, 2838.0], [44.2, 2838.0], [44.3, 2839.0], [44.4, 2839.0], [44.5, 2839.0], [44.6, 2839.0], [44.7, 2839.0], [44.8, 2842.0], [44.9, 2842.0], [45.0, 2846.0], [45.1, 2846.0], [45.2, 2846.0], [45.3, 2846.0], [45.4, 2846.0], [45.5, 2850.0], [45.6, 2850.0], [45.7, 2850.0], [45.8, 2850.0], [45.9, 2850.0], [46.0, 2851.0], [46.1, 2851.0], [46.2, 2851.0], [46.3, 2851.0], [46.4, 2851.0], [46.5, 2855.0], [46.6, 2855.0], [46.7, 2855.0], [46.8, 2858.0], [46.9, 2858.0], [47.0, 2858.0], [47.1, 2858.0], [47.2, 2858.0], [47.3, 2858.0], [47.4, 2858.0], [47.5, 2859.0], [47.6, 2859.0], [47.7, 2859.0], [47.8, 2861.0], [47.9, 2861.0], [48.0, 2861.0], [48.1, 2861.0], [48.2, 2861.0], [48.3, 2862.0], [48.4, 2862.0], [48.5, 2862.0], [48.6, 2862.0], [48.7, 2862.0], [48.8, 2869.0], [48.9, 2869.0], [49.0, 2869.0], [49.1, 2869.0], [49.2, 2869.0], [49.3, 2869.0], [49.4, 2869.0], [49.5, 2873.0], [49.6, 2873.0], [49.7, 2873.0], [49.8, 2875.0], [49.9, 2875.0], [50.0, 2876.0], [50.1, 2876.0], [50.2, 2876.0], [50.3, 2879.0], [50.4, 2879.0], [50.5, 2881.0], [50.6, 2881.0], [50.7, 2881.0], [50.8, 2883.0], [50.9, 2883.0], [51.0, 2884.0], [51.1, 2884.0], [51.2, 2884.0], [51.3, 2884.0], [51.4, 2884.0], [51.5, 2884.0], [51.6, 2884.0], [51.7, 2884.0], [51.8, 2888.0], [51.9, 2888.0], [52.0, 2890.0], [52.1, 2890.0], [52.2, 2890.0], [52.3, 2891.0], [52.4, 2891.0], [52.5, 2897.0], [52.6, 2897.0], [52.7, 2897.0], [52.8, 2900.0], [52.9, 2900.0], [53.0, 2903.0], [53.1, 2903.0], [53.2, 2903.0], [53.3, 2906.0], [53.4, 2906.0], [53.5, 2920.0], [53.6, 2920.0], [53.7, 2920.0], [53.8, 2924.0], [53.9, 2924.0], [54.0, 2929.0], [54.1, 2929.0], [54.2, 2929.0], [54.3, 2929.0], [54.4, 2929.0], [54.5, 2930.0], [54.6, 2930.0], [54.7, 2930.0], [54.8, 2940.0], [54.9, 2940.0], [55.0, 2951.0], [55.1, 2951.0], [55.2, 2951.0], [55.3, 2953.0], [55.4, 2953.0], [55.5, 2958.0], [55.6, 2958.0], [55.7, 2958.0], [55.8, 2975.0], [55.9, 2975.0], [56.0, 2977.0], [56.1, 2977.0], [56.2, 2977.0], [56.3, 2981.0], [56.4, 2981.0], [56.5, 2987.0], [56.6, 2987.0], [56.7, 2987.0], [56.8, 2990.0], [56.9, 2990.0], [57.0, 2992.0], [57.1, 2992.0], [57.2, 2992.0], [57.3, 2992.0], [57.4, 2992.0], [57.5, 2994.0], [57.6, 2994.0], [57.7, 2994.0], [57.8, 2996.0], [57.9, 2996.0], [58.0, 2997.0], [58.1, 2997.0], [58.2, 2997.0], [58.3, 2997.0], [58.4, 2997.0], [58.5, 2998.0], [58.6, 2998.0], [58.7, 2998.0], [58.8, 2999.0], [58.9, 2999.0], [59.0, 3002.0], [59.1, 3002.0], [59.2, 3002.0], [59.3, 3007.0], [59.4, 3007.0], [59.5, 3009.0], [59.6, 3009.0], [59.7, 3009.0], [59.8, 3009.0], [59.9, 3009.0], [60.0, 3010.0], [60.1, 3010.0], [60.2, 3010.0], [60.3, 3018.0], [60.4, 3018.0], [60.5, 3026.0], [60.6, 3026.0], [60.7, 3026.0], [60.8, 3036.0], [60.9, 3036.0], [61.0, 3037.0], [61.1, 3037.0], [61.2, 3037.0], [61.3, 3040.0], [61.4, 3040.0], [61.5, 3044.0], [61.6, 3044.0], [61.7, 3044.0], [61.8, 3047.0], [61.9, 3047.0], [62.0, 3053.0], [62.1, 3053.0], [62.2, 3053.0], [62.3, 3054.0], [62.4, 3054.0], [62.5, 3057.0], [62.6, 3057.0], [62.7, 3057.0], [62.8, 3061.0], [62.9, 3061.0], [63.0, 3065.0], [63.1, 3065.0], [63.2, 3065.0], [63.3, 3069.0], [63.4, 3069.0], [63.5, 3074.0], [63.6, 3074.0], [63.7, 3074.0], [63.8, 3080.0], [63.9, 3080.0], [64.0, 3080.0], [64.1, 3080.0], [64.2, 3080.0], [64.3, 3083.0], [64.4, 3083.0], [64.5, 3133.0], [64.6, 3133.0], [64.7, 3133.0], [64.8, 3135.0], [64.9, 3135.0], [65.0, 3136.0], [65.1, 3136.0], [65.2, 3136.0], [65.3, 3142.0], [65.4, 3142.0], [65.5, 3143.0], [65.6, 3143.0], [65.7, 3143.0], [65.8, 3146.0], [65.9, 3146.0], [66.0, 3148.0], [66.1, 3148.0], [66.2, 3148.0], [66.3, 3157.0], [66.4, 3157.0], [66.5, 3174.0], [66.6, 3174.0], [66.7, 3174.0], [66.8, 3180.0], [66.9, 3180.0], [67.0, 3183.0], [67.1, 3183.0], [67.2, 3183.0], [67.3, 3188.0], [67.4, 3188.0], [67.5, 3201.0], [67.6, 3201.0], [67.7, 3201.0], [67.8, 3201.0], [67.9, 3201.0], [68.0, 3205.0], [68.1, 3205.0], [68.2, 3205.0], [68.3, 3206.0], [68.4, 3206.0], [68.5, 3211.0], [68.6, 3211.0], [68.7, 3211.0], [68.8, 3213.0], [68.9, 3213.0], [69.0, 3216.0], [69.1, 3216.0], [69.2, 3216.0], [69.3, 3243.0], [69.4, 3243.0], [69.5, 3247.0], [69.6, 3247.0], [69.7, 3247.0], [69.8, 3248.0], [69.9, 3248.0], [70.0, 3250.0], [70.1, 3250.0], [70.2, 3250.0], [70.3, 3253.0], [70.4, 3253.0], [70.5, 3258.0], [70.6, 3258.0], [70.7, 3258.0], [70.8, 3266.0], [70.9, 3266.0], [71.0, 3267.0], [71.1, 3267.0], [71.2, 3267.0], [71.3, 3277.0], [71.4, 3277.0], [71.5, 3279.0], [71.6, 3279.0], [71.7, 3279.0], [71.8, 3296.0], [71.9, 3296.0], [72.0, 3303.0], [72.1, 3303.0], [72.2, 3303.0], [72.3, 3311.0], [72.4, 3311.0], [72.5, 3314.0], [72.6, 3314.0], [72.7, 3314.0], [72.8, 3320.0], [72.9, 3320.0], [73.0, 3324.0], [73.1, 3324.0], [73.2, 3324.0], [73.3, 3326.0], [73.4, 3326.0], [73.5, 3329.0], [73.6, 3329.0], [73.7, 3329.0], [73.8, 3333.0], [73.9, 3333.0], [74.0, 3337.0], [74.1, 3337.0], [74.2, 3337.0], [74.3, 3339.0], [74.4, 3339.0], [74.5, 3353.0], [74.6, 3353.0], [74.7, 3353.0], [74.8, 3355.0], [74.9, 3355.0], [75.0, 3358.0], [75.1, 3358.0], [75.2, 3358.0], [75.3, 3360.0], [75.4, 3360.0], [75.5, 3371.0], [75.6, 3371.0], [75.7, 3371.0], [75.8, 3372.0], [75.9, 3372.0], [76.0, 3373.0], [76.1, 3373.0], [76.2, 3373.0], [76.3, 3381.0], [76.4, 3381.0], [76.5, 3388.0], [76.6, 3388.0], [76.7, 3388.0], [76.8, 3393.0], [76.9, 3393.0], [77.0, 3398.0], [77.1, 3398.0], [77.2, 3398.0], [77.3, 3399.0], [77.4, 3399.0], [77.5, 3404.0], [77.6, 3404.0], [77.7, 3404.0], [77.8, 3406.0], [77.9, 3406.0], [78.0, 3406.0], [78.1, 3406.0], [78.2, 3406.0], [78.3, 3407.0], [78.4, 3407.0], [78.5, 3409.0], [78.6, 3409.0], [78.7, 3409.0], [78.8, 3410.0], [78.9, 3410.0], [79.0, 3422.0], [79.1, 3422.0], [79.2, 3422.0], [79.3, 3427.0], [79.4, 3427.0], [79.5, 3428.0], [79.6, 3428.0], [79.7, 3428.0], [79.8, 3437.0], [79.9, 3437.0], [80.0, 3438.0], [80.1, 3438.0], [80.2, 3438.0], [80.3, 3447.0], [80.4, 3447.0], [80.5, 3459.0], [80.6, 3459.0], [80.7, 3459.0], [80.8, 3464.0], [80.9, 3464.0], [81.0, 3464.0], [81.1, 3464.0], [81.2, 3464.0], [81.3, 3467.0], [81.4, 3467.0], [81.5, 3468.0], [81.6, 3468.0], [81.7, 3468.0], [81.8, 3478.0], [81.9, 3478.0], [82.0, 3483.0], [82.1, 3483.0], [82.2, 3483.0], [82.3, 3486.0], [82.4, 3486.0], [82.5, 3490.0], [82.6, 3490.0], [82.7, 3490.0], [82.8, 3494.0], [82.9, 3494.0], [83.0, 3499.0], [83.1, 3499.0], [83.2, 3499.0], [83.3, 3500.0], [83.4, 3500.0], [83.5, 3519.0], [83.6, 3519.0], [83.7, 3519.0], [83.8, 3521.0], [83.9, 3521.0], [84.0, 3522.0], [84.1, 3522.0], [84.2, 3522.0], [84.3, 3530.0], [84.4, 3530.0], [84.5, 3531.0], [84.6, 3531.0], [84.7, 3531.0], [84.8, 3531.0], [84.9, 3531.0], [85.0, 3536.0], [85.1, 3536.0], [85.2, 3536.0], [85.3, 3539.0], [85.4, 3539.0], [85.5, 3545.0], [85.6, 3545.0], [85.7, 3545.0], [85.8, 3554.0], [85.9, 3554.0], [86.0, 3563.0], [86.1, 3563.0], [86.2, 3563.0], [86.3, 3568.0], [86.4, 3568.0], [86.5, 3568.0], [86.6, 3568.0], [86.7, 3568.0], [86.8, 3575.0], [86.9, 3575.0], [87.0, 3585.0], [87.1, 3585.0], [87.2, 3585.0], [87.3, 3590.0], [87.4, 3590.0], [87.5, 3592.0], [87.6, 3592.0], [87.7, 3592.0], [87.8, 3592.0], [87.9, 3592.0], [88.0, 3593.0], [88.1, 3593.0], [88.2, 3593.0], [88.3, 3594.0], [88.4, 3594.0], [88.5, 3599.0], [88.6, 3599.0], [88.7, 3599.0], [88.8, 3600.0], [88.9, 3600.0], [89.0, 3602.0], [89.1, 3602.0], [89.2, 3602.0], [89.3, 3605.0], [89.4, 3605.0], [89.5, 3613.0], [89.6, 3613.0], [89.7, 3613.0], [89.8, 3614.0], [89.9, 3614.0], [90.0, 3622.0], [90.1, 3622.0], [90.2, 3622.0], [90.3, 3625.0], [90.4, 3625.0], [90.5, 3636.0], [90.6, 3636.0], [90.7, 3636.0], [90.8, 3645.0], [90.9, 3645.0], [91.0, 3655.0], [91.1, 3655.0], [91.2, 3655.0], [91.3, 3655.0], [91.4, 3655.0], [91.5, 3658.0], [91.6, 3658.0], [91.7, 3658.0], [91.8, 3664.0], [91.9, 3664.0], [92.0, 3665.0], [92.1, 3665.0], [92.2, 3665.0], [92.3, 3670.0], [92.4, 3670.0], [92.5, 3684.0], [92.6, 3684.0], [92.7, 3684.0], [92.8, 3684.0], [92.9, 3684.0], [93.0, 3684.0], [93.1, 3684.0], [93.2, 3684.0], [93.3, 3685.0], [93.4, 3685.0], [93.5, 3686.0], [93.6, 3686.0], [93.7, 3686.0], [93.8, 3689.0], [93.9, 3689.0], [94.0, 3707.0], [94.1, 3707.0], [94.2, 3707.0], [94.3, 3710.0], [94.4, 3710.0], [94.5, 3713.0], [94.6, 3713.0], [94.7, 3713.0], [94.8, 3731.0], [94.9, 3731.0], [95.0, 3734.0], [95.1, 3734.0], [95.2, 3734.0], [95.3, 3735.0], [95.4, 3735.0], [95.5, 3746.0], [95.6, 3746.0], [95.7, 3746.0], [95.8, 3760.0], [95.9, 3760.0], [96.0, 3763.0], [96.1, 3763.0], [96.2, 3763.0], [96.3, 3776.0], [96.4, 3776.0], [96.5, 3780.0], [96.6, 3780.0], [96.7, 3780.0], [96.8, 3781.0], [96.9, 3781.0], [97.0, 3782.0], [97.1, 3782.0], [97.2, 3782.0], [97.3, 3791.0], [97.4, 3791.0], [97.5, 3792.0], [97.6, 3792.0], [97.7, 3792.0], [97.8, 3792.0], [97.9, 3792.0], [98.0, 3818.0], [98.1, 3818.0], [98.2, 3818.0], [98.3, 3829.0], [98.4, 3829.0], [98.5, 3834.0], [98.6, 3834.0], [98.7, 3834.0], [98.8, 3850.0], [98.9, 3850.0], [99.0, 3872.0], [99.1, 3872.0], [99.2, 3872.0], [99.3, 3882.0], [99.4, 3882.0], [99.5, 3895.0], [99.6, 3895.0], [99.7, 3895.0], [99.8, 4017.0], [99.9, 4017.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[0.0, 2046.0], [0.1, 2046.0], [0.2, 2046.0], [0.3, 2046.0], [0.4, 2046.0], [0.5, 2046.0], [0.6, 2046.0], [0.7, 2046.0], [0.8, 2047.0], [0.9, 2047.0], [1.0, 2047.0], [1.1, 2047.0], [1.2, 2047.0], [1.3, 2047.0], [1.4, 2047.0], [1.5, 2048.0], [1.6, 2048.0], [1.7, 2048.0], [1.8, 2048.0], [1.9, 2048.0], [2.0, 2048.0], [2.1, 2048.0], [2.2, 2048.0], [2.3, 2048.0], [2.4, 2048.0], [2.5, 2048.0], [2.6, 2048.0], [2.7, 2048.0], [2.8, 2048.0], [2.9, 2048.0], [3.0, 2048.0], [3.1, 2048.0], [3.2, 2048.0], [3.3, 2049.0], [3.4, 2049.0], [3.5, 2049.0], [3.6, 2049.0], [3.7, 2049.0], [3.8, 2056.0], [3.9, 2056.0], [4.0, 2057.0], [4.1, 2057.0], [4.2, 2057.0], [4.3, 2059.0], [4.4, 2059.0], [4.5, 2060.0], [4.6, 2060.0], [4.7, 2060.0], [4.8, 2060.0], [4.9, 2060.0], [5.0, 2060.0], [5.1, 2060.0], [5.2, 2060.0], [5.3, 2060.0], [5.4, 2060.0], [5.5, 2061.0], [5.6, 2061.0], [5.7, 2061.0], [5.8, 2062.0], [5.9, 2062.0], [6.0, 2062.0], [6.1, 2062.0], [6.2, 2062.0], [6.3, 2067.0], [6.4, 2067.0], [6.5, 2068.0], [6.6, 2068.0], [6.7, 2068.0], [6.8, 2068.0], [6.9, 2068.0], [7.0, 2070.0], [7.1, 2070.0], [7.2, 2070.0], [7.3, 2070.0], [7.4, 2070.0], [7.5, 2070.0], [7.6, 2070.0], [7.7, 2070.0], [7.8, 2070.0], [7.9, 2070.0], [8.0, 2070.0], [8.1, 2070.0], [8.2, 2070.0], [8.3, 2070.0], [8.4, 2070.0], [8.5, 2070.0], [8.6, 2070.0], [8.7, 2070.0], [8.8, 2071.0], [8.9, 2071.0], [9.0, 2073.0], [9.1, 2073.0], [9.2, 2073.0], [9.3, 2073.0], [9.4, 2073.0], [9.5, 2073.0], [9.6, 2073.0], [9.7, 2073.0], [9.8, 2074.0], [9.9, 2074.0], [10.0, 2076.0], [10.1, 2076.0], [10.2, 2076.0], [10.3, 2076.0], [10.4, 2076.0], [10.5, 2076.0], [10.6, 2076.0], [10.7, 2076.0], [10.8, 2079.0], [10.9, 2079.0], [11.0, 2079.0], [11.1, 2079.0], [11.2, 2079.0], [11.3, 2080.0], [11.4, 2080.0], [11.5, 2081.0], [11.6, 2081.0], [11.7, 2081.0], [11.8, 2081.0], [11.9, 2081.0], [12.0, 2082.0], [12.1, 2082.0], [12.2, 2082.0], [12.3, 2082.0], [12.4, 2082.0], [12.5, 2082.0], [12.6, 2082.0], [12.7, 2082.0], [12.8, 2083.0], [12.9, 2083.0], [13.0, 2083.0], [13.1, 2083.0], [13.2, 2083.0], [13.3, 2085.0], [13.4, 2085.0], [13.5, 2085.0], [13.6, 2085.0], [13.7, 2085.0], [13.8, 2088.0], [13.9, 2088.0], [14.0, 2091.0], [14.1, 2091.0], [14.2, 2091.0], [14.3, 2092.0], [14.4, 2092.0], [14.5, 2092.0], [14.6, 2092.0], [14.7, 2092.0], [14.8, 2093.0], [14.9, 2093.0], [15.0, 2094.0], [15.1, 2094.0], [15.2, 2094.0], [15.3, 2094.0], [15.4, 2094.0], [15.5, 2095.0], [15.6, 2095.0], [15.7, 2095.0], [15.8, 2095.0], [15.9, 2095.0], [16.0, 2095.0], [16.1, 2095.0], [16.2, 2095.0], [16.3, 2095.0], [16.4, 2095.0], [16.5, 2097.0], [16.6, 2097.0], [16.7, 2097.0], [16.8, 2097.0], [16.9, 2097.0], [17.0, 2097.0], [17.1, 2097.0], [17.2, 2097.0], [17.3, 2098.0], [17.4, 2098.0], [17.5, 2098.0], [17.6, 2098.0], [17.7, 2098.0], [17.8, 2098.0], [17.9, 2098.0], [18.0, 2099.0], [18.1, 2099.0], [18.2, 2099.0], [18.3, 2100.0], [18.4, 2100.0], [18.5, 2101.0], [18.6, 2101.0], [18.7, 2101.0], [18.8, 2101.0], [18.9, 2101.0], [19.0, 2103.0], [19.1, 2103.0], [19.2, 2103.0], [19.3, 2103.0], [19.4, 2103.0], [19.5, 2103.0], [19.6, 2103.0], [19.7, 2103.0], [19.8, 2104.0], [19.9, 2104.0], [20.0, 2104.0], [20.1, 2104.0], [20.2, 2104.0], [20.3, 2105.0], [20.4, 2105.0], [20.5, 2105.0], [20.6, 2105.0], [20.7, 2105.0], [20.8, 2106.0], [20.9, 2106.0], [21.0, 2107.0], [21.1, 2107.0], [21.2, 2107.0], [21.3, 2107.0], [21.4, 2107.0], [21.5, 2109.0], [21.6, 2109.0], [21.7, 2109.0], [21.8, 2110.0], [21.9, 2110.0], [22.0, 2111.0], [22.1, 2111.0], [22.2, 2111.0], [22.3, 2114.0], [22.4, 2114.0], [22.5, 2115.0], [22.6, 2115.0], [22.7, 2115.0], [22.8, 2116.0], [22.9, 2116.0], [23.0, 2119.0], [23.1, 2119.0], [23.2, 2119.0], [23.3, 2122.0], [23.4, 2122.0], [23.5, 2123.0], [23.6, 2123.0], [23.7, 2123.0], [23.8, 2123.0], [23.9, 2123.0], [24.0, 2124.0], [24.1, 2124.0], [24.2, 2124.0], [24.3, 2126.0], [24.4, 2126.0], [24.5, 2127.0], [24.6, 2127.0], [24.7, 2127.0], [24.8, 2127.0], [24.9, 2127.0], [25.0, 2128.0], [25.1, 2128.0], [25.2, 2128.0], [25.3, 2128.0], [25.4, 2128.0], [25.5, 2131.0], [25.6, 2131.0], [25.7, 2131.0], [25.8, 2133.0], [25.9, 2133.0], [26.0, 2134.0], [26.1, 2134.0], [26.2, 2134.0], [26.3, 2135.0], [26.4, 2135.0], [26.5, 2136.0], [26.6, 2136.0], [26.7, 2136.0], [26.8, 2137.0], [26.9, 2137.0], [27.0, 2137.0], [27.1, 2137.0], [27.2, 2137.0], [27.3, 2138.0], [27.4, 2138.0], [27.5, 2141.0], [27.6, 2141.0], [27.7, 2141.0], [27.8, 2142.0], [27.9, 2142.0], [28.0, 2143.0], [28.1, 2143.0], [28.2, 2143.0], [28.3, 2144.0], [28.4, 2144.0], [28.5, 2146.0], [28.6, 2146.0], [28.7, 2146.0], [28.8, 2146.0], [28.9, 2146.0], [29.0, 2147.0], [29.1, 2147.0], [29.2, 2147.0], [29.3, 2147.0], [29.4, 2147.0], [29.5, 2149.0], [29.6, 2149.0], [29.7, 2149.0], [29.8, 2149.0], [29.9, 2149.0], [30.0, 2152.0], [30.1, 2152.0], [30.2, 2152.0], [30.3, 2153.0], [30.4, 2153.0], [30.5, 2154.0], [30.6, 2154.0], [30.7, 2154.0], [30.8, 2155.0], [30.9, 2155.0], [31.0, 2157.0], [31.1, 2157.0], [31.2, 2157.0], [31.3, 2162.0], [31.4, 2162.0], [31.5, 2166.0], [31.6, 2166.0], [31.7, 2166.0], [31.8, 2167.0], [31.9, 2167.0], [32.0, 2168.0], [32.1, 2168.0], [32.2, 2168.0], [32.3, 2168.0], [32.4, 2168.0], [32.5, 2171.0], [32.6, 2171.0], [32.7, 2171.0], [32.8, 2173.0], [32.9, 2173.0], [33.0, 2176.0], [33.1, 2176.0], [33.2, 2176.0], [33.3, 2177.0], [33.4, 2177.0], [33.5, 2178.0], [33.6, 2178.0], [33.7, 2178.0], [33.8, 2178.0], [33.9, 2178.0], [34.0, 2183.0], [34.1, 2183.0], [34.2, 2183.0], [34.3, 2183.0], [34.4, 2183.0], [34.5, 2185.0], [34.6, 2185.0], [34.7, 2185.0], [34.8, 2186.0], [34.9, 2186.0], [35.0, 2186.0], [35.1, 2186.0], [35.2, 2186.0], [35.3, 2187.0], [35.4, 2187.0], [35.5, 2187.0], [35.6, 2187.0], [35.7, 2187.0], [35.8, 2189.0], [35.9, 2189.0], [36.0, 2190.0], [36.1, 2190.0], [36.2, 2190.0], [36.3, 2199.0], [36.4, 2199.0], [36.5, 2201.0], [36.6, 2201.0], [36.7, 2201.0], [36.8, 2203.0], [36.9, 2203.0], [37.0, 2209.0], [37.1, 2209.0], [37.2, 2209.0], [37.3, 2209.0], [37.4, 2209.0], [37.5, 2209.0], [37.6, 2209.0], [37.7, 2209.0], [37.8, 2211.0], [37.9, 2211.0], [38.0, 2212.0], [38.1, 2212.0], [38.2, 2212.0], [38.3, 2212.0], [38.4, 2212.0], [38.5, 2213.0], [38.6, 2213.0], [38.7, 2213.0], [38.8, 2214.0], [38.9, 2214.0], [39.0, 2215.0], [39.1, 2215.0], [39.2, 2215.0], [39.3, 2216.0], [39.4, 2216.0], [39.5, 2221.0], [39.6, 2221.0], [39.7, 2221.0], [39.8, 2221.0], [39.9, 2221.0], [40.0, 2224.0], [40.1, 2224.0], [40.2, 2224.0], [40.3, 2225.0], [40.4, 2225.0], [40.5, 2225.0], [40.6, 2225.0], [40.7, 2225.0], [40.8, 2229.0], [40.9, 2229.0], [41.0, 2233.0], [41.1, 2233.0], [41.2, 2233.0], [41.3, 2236.0], [41.4, 2236.0], [41.5, 2236.0], [41.6, 2236.0], [41.7, 2236.0], [41.8, 2237.0], [41.9, 2237.0], [42.0, 2237.0], [42.1, 2237.0], [42.2, 2237.0], [42.3, 2240.0], [42.4, 2240.0], [42.5, 2241.0], [42.6, 2241.0], [42.7, 2241.0], [42.8, 2242.0], [42.9, 2242.0], [43.0, 2245.0], [43.1, 2245.0], [43.2, 2245.0], [43.3, 2247.0], [43.4, 2247.0], [43.5, 2249.0], [43.6, 2249.0], [43.7, 2249.0], [43.8, 2250.0], [43.9, 2250.0], [44.0, 2250.0], [44.1, 2250.0], [44.2, 2250.0], [44.3, 2252.0], [44.4, 2252.0], [44.5, 2253.0], [44.6, 2253.0], [44.7, 2253.0], [44.8, 2254.0], [44.9, 2254.0], [45.0, 2255.0], [45.1, 2255.0], [45.2, 2255.0], [45.3, 2259.0], [45.4, 2259.0], [45.5, 2260.0], [45.6, 2260.0], [45.7, 2260.0], [45.8, 2261.0], [45.9, 2261.0], [46.0, 2261.0], [46.1, 2261.0], [46.2, 2261.0], [46.3, 2262.0], [46.4, 2262.0], [46.5, 2263.0], [46.6, 2263.0], [46.7, 2263.0], [46.8, 2264.0], [46.9, 2264.0], [47.0, 2265.0], [47.1, 2265.0], [47.2, 2265.0], [47.3, 2265.0], [47.4, 2265.0], [47.5, 2265.0], [47.6, 2265.0], [47.7, 2265.0], [47.8, 2266.0], [47.9, 2266.0], [48.0, 2267.0], [48.1, 2267.0], [48.2, 2267.0], [48.3, 2268.0], [48.4, 2268.0], [48.5, 2269.0], [48.6, 2269.0], [48.7, 2269.0], [48.8, 2271.0], [48.9, 2271.0], [49.0, 2271.0], [49.1, 2271.0], [49.2, 2271.0], [49.3, 2273.0], [49.4, 2273.0], [49.5, 2276.0], [49.6, 2276.0], [49.7, 2276.0], [49.8, 2276.0], [49.9, 2276.0], [50.0, 2277.0], [50.1, 2277.0], [50.2, 2277.0], [50.3, 2279.0], [50.4, 2279.0], [50.5, 2280.0], [50.6, 2280.0], [50.7, 2280.0], [50.8, 2280.0], [50.9, 2280.0], [51.0, 2281.0], [51.1, 2281.0], [51.2, 2281.0], [51.3, 2282.0], [51.4, 2282.0], [51.5, 2282.0], [51.6, 2282.0], [51.7, 2282.0], [51.8, 2282.0], [51.9, 2282.0], [52.0, 2286.0], [52.1, 2286.0], [52.2, 2286.0], [52.3, 2286.0], [52.4, 2286.0], [52.5, 2287.0], [52.6, 2287.0], [52.7, 2287.0], [52.8, 2289.0], [52.9, 2289.0], [53.0, 2289.0], [53.1, 2289.0], [53.2, 2289.0], [53.3, 2291.0], [53.4, 2291.0], [53.5, 2293.0], [53.6, 2293.0], [53.7, 2293.0], [53.8, 2294.0], [53.9, 2294.0], [54.0, 2296.0], [54.1, 2296.0], [54.2, 2296.0], [54.3, 2297.0], [54.4, 2297.0], [54.5, 2298.0], [54.6, 2298.0], [54.7, 2298.0], [54.8, 2298.0], [54.9, 2298.0], [55.0, 2305.0], [55.1, 2305.0], [55.2, 2305.0], [55.3, 2306.0], [55.4, 2306.0], [55.5, 2307.0], [55.6, 2307.0], [55.7, 2307.0], [55.8, 2308.0], [55.9, 2308.0], [56.0, 2309.0], [56.1, 2309.0], [56.2, 2309.0], [56.3, 2311.0], [56.4, 2311.0], [56.5, 2311.0], [56.6, 2311.0], [56.7, 2311.0], [56.8, 2314.0], [56.9, 2314.0], [57.0, 2314.0], [57.1, 2314.0], [57.2, 2314.0], [57.3, 2316.0], [57.4, 2316.0], [57.5, 2316.0], [57.6, 2316.0], [57.7, 2316.0], [57.8, 2318.0], [57.9, 2318.0], [58.0, 2318.0], [58.1, 2318.0], [58.2, 2318.0], [58.3, 2320.0], [58.4, 2320.0], [58.5, 2320.0], [58.6, 2320.0], [58.7, 2320.0], [58.8, 2321.0], [58.9, 2321.0], [59.0, 2321.0], [59.1, 2321.0], [59.2, 2321.0], [59.3, 2323.0], [59.4, 2323.0], [59.5, 2324.0], [59.6, 2324.0], [59.7, 2324.0], [59.8, 2324.0], [59.9, 2324.0], [60.0, 2325.0], [60.1, 2325.0], [60.2, 2325.0], [60.3, 2327.0], [60.4, 2327.0], [60.5, 2327.0], [60.6, 2327.0], [60.7, 2327.0], [60.8, 2328.0], [60.9, 2328.0], [61.0, 2328.0], [61.1, 2328.0], [61.2, 2328.0], [61.3, 2328.0], [61.4, 2328.0], [61.5, 2329.0], [61.6, 2329.0], [61.7, 2329.0], [61.8, 2331.0], [61.9, 2331.0], [62.0, 2333.0], [62.1, 2333.0], [62.2, 2333.0], [62.3, 2334.0], [62.4, 2334.0], [62.5, 2335.0], [62.6, 2335.0], [62.7, 2335.0], [62.8, 2336.0], [62.9, 2336.0], [63.0, 2337.0], [63.1, 2337.0], [63.2, 2337.0], [63.3, 2339.0], [63.4, 2339.0], [63.5, 2340.0], [63.6, 2340.0], [63.7, 2340.0], [63.8, 2340.0], [63.9, 2340.0], [64.0, 2341.0], [64.1, 2341.0], [64.2, 2341.0], [64.3, 2341.0], [64.4, 2341.0], [64.5, 2342.0], [64.6, 2342.0], [64.7, 2342.0], [64.8, 2344.0], [64.9, 2344.0], [65.0, 2351.0], [65.1, 2351.0], [65.2, 2351.0], [65.3, 2353.0], [65.4, 2353.0], [65.5, 2356.0], [65.6, 2356.0], [65.7, 2356.0], [65.8, 2357.0], [65.9, 2357.0], [66.0, 2357.0], [66.1, 2357.0], [66.2, 2357.0], [66.3, 2358.0], [66.4, 2358.0], [66.5, 2360.0], [66.6, 2360.0], [66.7, 2360.0], [66.8, 2361.0], [66.9, 2361.0], [67.0, 2364.0], [67.1, 2364.0], [67.2, 2364.0], [67.3, 2364.0], [67.4, 2364.0], [67.5, 2365.0], [67.6, 2365.0], [67.7, 2365.0], [67.8, 2365.0], [67.9, 2365.0], [68.0, 2367.0], [68.1, 2367.0], [68.2, 2367.0], [68.3, 2370.0], [68.4, 2370.0], [68.5, 2370.0], [68.6, 2370.0], [68.7, 2370.0], [68.8, 2371.0], [68.9, 2371.0], [69.0, 2371.0], [69.1, 2371.0], [69.2, 2371.0], [69.3, 2371.0], [69.4, 2371.0], [69.5, 2372.0], [69.6, 2372.0], [69.7, 2372.0], [69.8, 2372.0], [69.9, 2372.0], [70.0, 2375.0], [70.1, 2375.0], [70.2, 2375.0], [70.3, 2375.0], [70.4, 2375.0], [70.5, 2377.0], [70.6, 2377.0], [70.7, 2377.0], [70.8, 2379.0], [70.9, 2379.0], [71.0, 2379.0], [71.1, 2379.0], [71.2, 2379.0], [71.3, 2380.0], [71.4, 2380.0], [71.5, 2381.0], [71.6, 2381.0], [71.7, 2381.0], [71.8, 2381.0], [71.9, 2381.0], [72.0, 2381.0], [72.1, 2381.0], [72.2, 2381.0], [72.3, 2382.0], [72.4, 2382.0], [72.5, 2383.0], [72.6, 2383.0], [72.7, 2383.0], [72.8, 2384.0], [72.9, 2384.0], [73.0, 2385.0], [73.1, 2385.0], [73.2, 2385.0], [73.3, 2386.0], [73.4, 2386.0], [73.5, 2387.0], [73.6, 2387.0], [73.7, 2387.0], [73.8, 2389.0], [73.9, 2389.0], [74.0, 2390.0], [74.1, 2390.0], [74.2, 2390.0], [74.3, 2391.0], [74.4, 2391.0], [74.5, 2392.0], [74.6, 2392.0], [74.7, 2392.0], [74.8, 2393.0], [74.9, 2393.0], [75.0, 2393.0], [75.1, 2393.0], [75.2, 2393.0], [75.3, 2393.0], [75.4, 2393.0], [75.5, 2393.0], [75.6, 2393.0], [75.7, 2393.0], [75.8, 2393.0], [75.9, 2393.0], [76.0, 2393.0], [76.1, 2393.0], [76.2, 2393.0], [76.3, 2393.0], [76.4, 2393.0], [76.5, 2394.0], [76.6, 2394.0], [76.7, 2394.0], [76.8, 2394.0], [76.9, 2394.0], [77.0, 2396.0], [77.1, 2396.0], [77.2, 2396.0], [77.3, 2397.0], [77.4, 2397.0], [77.5, 2399.0], [77.6, 2399.0], [77.7, 2399.0], [77.8, 2400.0], [77.9, 2400.0], [78.0, 2400.0], [78.1, 2400.0], [78.2, 2400.0], [78.3, 2401.0], [78.4, 2401.0], [78.5, 2402.0], [78.6, 2402.0], [78.7, 2402.0], [78.8, 2403.0], [78.9, 2403.0], [79.0, 2405.0], [79.1, 2405.0], [79.2, 2405.0], [79.3, 2407.0], [79.4, 2407.0], [79.5, 2410.0], [79.6, 2410.0], [79.7, 2410.0], [79.8, 2411.0], [79.9, 2411.0], [80.0, 2412.0], [80.1, 2412.0], [80.2, 2412.0], [80.3, 2413.0], [80.4, 2413.0], [80.5, 2413.0], [80.6, 2413.0], [80.7, 2413.0], [80.8, 2415.0], [80.9, 2415.0], [81.0, 2417.0], [81.1, 2417.0], [81.2, 2417.0], [81.3, 2417.0], [81.4, 2417.0], [81.5, 2418.0], [81.6, 2418.0], [81.7, 2418.0], [81.8, 2418.0], [81.9, 2418.0], [82.0, 2419.0], [82.1, 2419.0], [82.2, 2419.0], [82.3, 2419.0], [82.4, 2419.0], [82.5, 2419.0], [82.6, 2419.0], [82.7, 2419.0], [82.8, 2425.0], [82.9, 2425.0], [83.0, 2426.0], [83.1, 2426.0], [83.2, 2426.0], [83.3, 2430.0], [83.4, 2430.0], [83.5, 2436.0], [83.6, 2436.0], [83.7, 2436.0], [83.8, 2442.0], [83.9, 2442.0], [84.0, 2442.0], [84.1, 2442.0], [84.2, 2442.0], [84.3, 2445.0], [84.4, 2445.0], [84.5, 2445.0], [84.6, 2445.0], [84.7, 2445.0], [84.8, 2449.0], [84.9, 2449.0], [85.0, 2451.0], [85.1, 2451.0], [85.2, 2451.0], [85.3, 2453.0], [85.4, 2453.0], [85.5, 2455.0], [85.6, 2455.0], [85.7, 2455.0], [85.8, 2457.0], [85.9, 2457.0], [86.0, 2459.0], [86.1, 2459.0], [86.2, 2459.0], [86.3, 2460.0], [86.4, 2460.0], [86.5, 2463.0], [86.6, 2463.0], [86.7, 2463.0], [86.8, 2465.0], [86.9, 2465.0], [87.0, 2469.0], [87.1, 2469.0], [87.2, 2469.0], [87.3, 2471.0], [87.4, 2471.0], [87.5, 2471.0], [87.6, 2471.0], [87.7, 2471.0], [87.8, 2474.0], [87.9, 2474.0], [88.0, 2474.0], [88.1, 2474.0], [88.2, 2474.0], [88.3, 2474.0], [88.4, 2474.0], [88.5, 2475.0], [88.6, 2475.0], [88.7, 2475.0], [88.8, 2476.0], [88.9, 2476.0], [89.0, 2476.0], [89.1, 2476.0], [89.2, 2476.0], [89.3, 2479.0], [89.4, 2479.0], [89.5, 2479.0], [89.6, 2479.0], [89.7, 2479.0], [89.8, 2481.0], [89.9, 2481.0], [90.0, 2483.0], [90.1, 2483.0], [90.2, 2483.0], [90.3, 2486.0], [90.4, 2486.0], [90.5, 2488.0], [90.6, 2488.0], [90.7, 2488.0], [90.8, 2490.0], [90.9, 2490.0], [91.0, 2491.0], [91.1, 2491.0], [91.2, 2491.0], [91.3, 2491.0], [91.4, 2491.0], [91.5, 2509.0], [91.6, 2509.0], [91.7, 2509.0], [91.8, 2523.0], [91.9, 2523.0], [92.0, 2528.0], [92.1, 2528.0], [92.2, 2528.0], [92.3, 2529.0], [92.4, 2529.0], [92.5, 2544.0], [92.6, 2544.0], [92.7, 2544.0], [92.8, 2552.0], [92.9, 2552.0], [93.0, 2561.0], [93.1, 2561.0], [93.2, 2561.0], [93.3, 2566.0], [93.4, 2566.0], [93.5, 2570.0], [93.6, 2570.0], [93.7, 2570.0], [93.8, 2577.0], [93.9, 2577.0], [94.0, 2580.0], [94.1, 2580.0], [94.2, 2580.0], [94.3, 2581.0], [94.4, 2581.0], [94.5, 2586.0], [94.6, 2586.0], [94.7, 2586.0], [94.8, 2588.0], [94.9, 2588.0], [95.0, 2588.0], [95.1, 2588.0], [95.2, 2588.0], [95.3, 2591.0], [95.4, 2591.0], [95.5, 2593.0], [95.6, 2593.0], [95.7, 2593.0], [95.8, 2594.0], [95.9, 2594.0], [96.0, 2598.0], [96.1, 2598.0], [96.2, 2598.0], [96.3, 2599.0], [96.4, 2599.0], [96.5, 2601.0], [96.6, 2601.0], [96.7, 2601.0], [96.8, 2604.0], [96.9, 2604.0], [97.0, 2604.0], [97.1, 2604.0], [97.2, 2604.0], [97.3, 2605.0], [97.4, 2605.0], [97.5, 2606.0], [97.6, 2606.0], [97.7, 2606.0], [97.8, 2609.0], [97.9, 2609.0], [98.0, 2615.0], [98.1, 2615.0], [98.2, 2615.0], [98.3, 2616.0], [98.4, 2616.0], [98.5, 2618.0], [98.6, 2618.0], [98.7, 2618.0], [98.8, 2625.0], [98.9, 2625.0], [99.0, 2630.0], [99.1, 2630.0], [99.2, 2630.0], [99.3, 2630.0], [99.4, 2630.0], [99.5, 2636.0], [99.6, 2636.0], [99.7, 2636.0], [99.8, 2646.0], [99.9, 2646.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1100.0, "maxY": 211.0, "series": [{"data": [[2100.0, 118.0], [2200.0, 58.0], [2300.0, 13.0], [2000.0, 211.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[8200.0, 4.0], [8700.0, 1.0], [8300.0, 4.0], [8400.0, 4.0], [8800.0, 3.0], [8900.0, 1.0], [1300.0, 3.0], [1400.0, 5.0], [1500.0, 8.0], [1600.0, 6.0], [1700.0, 3.0], [3800.0, 1.0], [3900.0, 3.0], [4000.0, 3.0], [4100.0, 9.0], [4200.0, 18.0], [4300.0, 9.0], [4400.0, 19.0], [4500.0, 25.0], [4600.0, 16.0], [4700.0, 27.0], [4800.0, 13.0], [5000.0, 32.0], [4900.0, 37.0], [5100.0, 26.0], [5200.0, 26.0], [5300.0, 19.0], [5600.0, 6.0], [5500.0, 9.0], [5400.0, 9.0], [5700.0, 7.0], [5800.0, 14.0], [5900.0, 7.0], [6000.0, 4.0], [6200.0, 1.0], [8000.0, 2.0], [8100.0, 16.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[2100.0, 17.0], [2200.0, 24.0], [2300.0, 16.0], [2400.0, 23.0], [2500.0, 27.0], [2600.0, 20.0], [2700.0, 9.0], [2800.0, 12.0], [2900.0, 12.0], [3000.0, 5.0], [3100.0, 2.0], [1100.0, 2.0], [1200.0, 3.0], [5000.0, 25.0], [1300.0, 8.0], [1400.0, 12.0], [1500.0, 20.0], [1600.0, 32.0], [1700.0, 39.0], [1800.0, 50.0], [1900.0, 28.0], [2000.0, 14.0]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[2100.0, 24.0], [2200.0, 53.0], [2300.0, 41.0], [2400.0, 11.0], [2500.0, 7.0], [2600.0, 5.0], [2700.0, 14.0], [2800.0, 49.0], [2900.0, 25.0], [3000.0, 22.0], [3100.0, 12.0], [3300.0, 22.0], [3200.0, 18.0], [3400.0, 23.0], [3500.0, 22.0], [3600.0, 21.0], [3700.0, 16.0], [3800.0, 7.0], [4000.0, 1.0], [2000.0, 7.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[2100.0, 73.0], [2200.0, 74.0], [2300.0, 91.0], [2400.0, 55.0], [2500.0, 20.0], [2600.0, 14.0], [2000.0, 73.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 192.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1808.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 192.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1808.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 355.4034999999997, "minX": 1.71673392E12, "maxY": 355.4034999999997, "series": [{"data": [[1.71673392E12, 355.4034999999997]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673392E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2023.0, "minX": 1.0, "maxY": 5045.875, "series": [{"data": [[2.0, 2060.0], [3.0, 2053.0], [4.0, 2054.0], [5.0, 2056.0], [6.0, 2091.0], [7.0, 2056.0], [9.0, 2072.0], [10.0, 2053.0], [11.0, 2042.0], [12.0, 2043.0], [13.0, 2043.0], [15.0, 2041.0], [16.0, 2041.0], [17.0, 2040.0], [18.0, 2055.0], [21.0, 2037.6666666666667], [22.0, 2038.0], [23.0, 2061.0], [25.0, 2045.0], [26.0, 2041.0], [27.0, 2041.0], [28.0, 2039.0], [29.0, 2038.0], [32.0, 2048.3333333333335], [35.0, 2032.0], [34.0, 2073.0], [37.0, 2174.0], [36.0, 2126.0], [39.0, 2093.0], [38.0, 2173.0], [41.0, 2134.0], [40.0, 2270.0], [43.0, 2125.0], [42.0, 2114.0], [45.0, 2082.0], [44.0, 2134.0], [47.0, 2135.0], [46.0, 2128.0], [49.0, 2127.0], [48.0, 2086.0], [51.0, 2135.0], [50.0, 2126.0], [53.0, 2069.0], [52.0, 2071.0], [55.0, 2130.0], [54.0, 2077.0], [57.0, 2142.0], [56.0, 2253.0], [59.0, 2134.0], [58.0, 2125.0], [61.0, 2136.0], [60.0, 2250.0], [62.0, 2130.0], [67.0, 2067.0], [66.0, 2134.0], [65.0, 2199.6666666666665], [71.0, 2116.0], [70.0, 2385.0], [69.0, 2272.0], [68.0, 2125.0], [75.0, 2189.5], [73.0, 2116.0], [72.0, 2110.0], [79.0, 2102.0], [78.0, 2228.0], [77.0, 2125.0], [76.0, 2214.0], [83.0, 2190.5], [81.0, 2132.0], [80.0, 2266.0], [87.0, 2215.0], [86.0, 2119.0], [85.0, 2262.0], [84.0, 2217.0], [90.0, 2106.0], [89.0, 2098.0], [88.0, 2244.0], [95.0, 2251.0], [94.0, 2335.0], [93.0, 2358.0], [92.0, 2178.0], [99.0, 2181.5], [97.0, 2355.0], [96.0, 2237.0], [101.0, 2180.0], [107.0, 2304.0], [106.0, 2290.0], [105.0, 2332.0], [104.0, 2229.0], [111.0, 2175.0], [110.0, 2321.0], [109.0, 2319.0], [108.0, 2053.0], [115.0, 2159.0], [114.0, 2085.0], [113.0, 2259.5], [118.0, 2168.0], [117.0, 2155.0], [116.0, 2283.0], [123.0, 2243.6666666666665], [120.0, 2144.0], [127.0, 2200.6666666666665], [124.0, 2213.0], [135.0, 2183.0], [134.0, 2181.0], [133.0, 2284.0], [132.0, 2107.0], [130.0, 2188.0], [129.0, 2127.0], [128.0, 2153.0], [143.0, 2233.0], [140.0, 2238.0], [139.0, 2121.0], [138.0, 2249.3333333333335], [150.0, 2127.0], [148.0, 2241.0], [147.0, 2238.0], [146.0, 2267.0], [145.0, 2237.0], [144.0, 2097.0], [159.0, 2213.0], [158.0, 2224.0], [157.0, 2132.0], [156.0, 2215.0], [155.0, 2133.0], [154.0, 2194.5], [167.0, 2182.5], [165.0, 2271.0], [163.0, 2194.6666666666665], [162.0, 2177.0], [175.0, 2208.0], [174.0, 2180.0], [171.0, 2283.0], [170.0, 2179.0], [168.0, 2068.0], [182.0, 2129.0], [181.0, 2126.0], [180.0, 2216.0], [179.0, 2212.0], [177.0, 2214.0], [176.0, 2175.0], [186.0, 2174.0], [184.0, 2169.0], [199.0, 2165.5], [197.0, 2164.0], [196.0, 2241.0], [195.0, 2171.0], [194.0, 2176.25], [206.0, 2189.6666666666665], [203.0, 2147.0], [202.0, 2158.0], [215.0, 2155.5], [213.0, 2092.0], [212.0, 2149.0], [211.0, 2142.0], [210.0, 2126.0], [209.0, 2155.3333333333335], [223.0, 2126.0], [222.0, 2116.0], [221.0, 2096.0], [219.0, 2157.0], [218.0, 2142.5], [216.0, 2129.0], [229.0, 2113.0], [228.0, 2110.6666666666665], [225.0, 2123.0], [224.0, 2099.0], [239.0, 2111.5], [237.0, 2121.0], [236.0, 2109.0], [235.0, 2094.3333333333335], [232.0, 2091.3333333333335], [247.0, 2070.0], [244.0, 2070.0], [243.0, 2076.0], [242.0, 2091.0], [240.0, 2093.0], [253.0, 2065.6666666666665], [250.0, 2060.0], [248.0, 2068.0], [271.0, 2056.0], [270.0, 2053.3333333333335], [267.0, 2069.0], [266.0, 2060.0], [265.0, 2067.6666666666665], [259.0, 2084.0], [258.0, 2060.5], [256.0, 2066.6666666666665], [286.0, 2051.0], [287.0, 2050.0], [285.0, 2047.75], [281.0, 2049.0], [280.0, 2060.0], [279.0, 2049.6666666666665], [276.0, 2050.0], [275.0, 2054.6666666666665], [272.0, 2057.0], [302.0, 2099.0], [303.0, 2072.0], [301.0, 2077.0], [291.0, 2084.0], [290.0, 2081.0], [289.0, 2081.0], [288.0, 2051.0], [299.0, 2105.0], [298.0, 2085.0], [297.0, 2080.0], [296.0, 2082.0], [295.0, 2073.0], [294.0, 2080.0], [293.0, 2083.0], [292.0, 2081.0], [316.0, 2073.0], [318.0, 2096.0], [319.0, 2093.0], [317.0, 2105.0], [314.0, 2071.0], [313.0, 2092.0], [310.0, 2074.5], [308.0, 2072.0], [307.0, 2071.0], [306.0, 2079.0], [305.0, 2090.0], [304.0, 2077.0], [333.0, 2090.0], [332.0, 2075.0], [331.0, 2086.0], [330.0, 2074.0], [326.0, 2100.0], [325.0, 2087.0], [323.0, 2087.0], [322.0, 2098.0], [349.0, 2063.0], [348.0, 2060.0], [345.0, 2060.6666666666665], [342.0, 2062.0], [341.0, 2070.5], [339.0, 2068.0], [338.0, 2066.0], [337.0, 2084.5], [366.0, 2039.0], [367.0, 2052.5], [364.0, 2056.0], [352.0, 2062.6666666666665], [362.0, 2023.0], [361.0, 2042.0], [360.0, 2058.0], [358.0, 2057.0], [357.0, 2059.0], [356.0, 2061.25], [383.0, 2049.0], [381.0, 2052.0], [380.0, 2065.8], [375.0, 2065.5], [373.0, 2066.5], [371.0, 2072.25], [397.0, 2047.0], [398.0, 2045.0], [396.0, 2047.0], [395.0, 2048.0], [394.0, 2049.0], [393.0, 2055.3333333333335], [390.0, 2061.0], [389.0, 2048.0], [388.0, 2061.0], [386.0, 2062.0], [385.0, 2050.0], [384.0, 2050.0], [400.0, 2044.5], [1.0, 2056.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[201.0425, 2121.169999999999]], "isOverall": false, "label": "Create patient-Aggregated", "isController": false}, {"data": [[400.0, 5045.875]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[400.0, 5045.875]], "isOverall": false, "label": "Get all patients-Aggregated", "isController": false}, {"data": [[400.0, 2275.6275000000014]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[400.0, 2275.6275000000014]], "isOverall": false, "label": "Create Doctor-Aggregated", "isController": false}, {"data": [[400.0, 2885.1449999999995]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[400.0, 2885.1449999999995]], "isOverall": false, "label": "Create prescription-Aggregated", "isController": false}, {"data": [[41.0, 2119.0], [43.0, 2127.0], [42.0, 2122.0], [45.0, 2134.0], [44.0, 2132.0], [48.0, 2126.0], [65.0, 2141.0], [81.0, 2212.0], [80.0, 2224.0], [87.0, 2111.0], [86.0, 2160.0], [89.0, 2247.0], [92.0, 2100.0], [97.0, 2245.0], [96.0, 2259.0], [113.0, 2202.0], [120.0, 2259.5], [131.0, 2097.0], [139.0, 2168.0], [148.0, 2250.0], [154.0, 2104.0], [163.0, 2144.0], [186.0, 2155.0], [197.0, 2124.0], [195.0, 2240.0], [223.0, 2107.0], [221.0, 2132.0], [247.0, 2068.0], [253.0, 2062.0], [280.0, 2060.0], [400.0, 2289.4931506849307]], "isOverall": false, "label": "Release drug", "isController": false}, {"data": [[375.9750000000001, 2277.954999999999]], "isOverall": false, "label": "Release drug-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 23327.166666666668, "minX": 1.71673392E12, "maxY": 75906.66666666667, "series": [{"data": [[1.71673392E12, 23327.166666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71673392E12, 75906.66666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673392E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2121.169999999999, "minX": 1.71673392E12, "maxY": 5045.875, "series": [{"data": [[1.71673392E12, 2121.169999999999]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673392E12, 5045.875]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673392E12, 2275.6275000000014]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673392E12, 2885.1449999999995]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673392E12, 2277.954999999999]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673392E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2121.169999999999, "minX": 1.71673392E12, "maxY": 5012.545000000004, "series": [{"data": [[1.71673392E12, 2121.169999999999]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673392E12, 5012.545000000004]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673392E12, 2262.9475]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673392E12, 2885.140000000001]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673392E12, 2277.9524999999967]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673392E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71673392E12, "maxY": 0.4974999999999999, "series": [{"data": [[1.71673392E12, 0.0]], "isOverall": false, "label": "Create patient", "isController": false}, {"data": [[1.71673392E12, 0.0]], "isOverall": false, "label": "Get all patients", "isController": false}, {"data": [[1.71673392E12, 0.4974999999999999]], "isOverall": false, "label": "Create Doctor", "isController": false}, {"data": [[1.71673392E12, 0.0]], "isOverall": false, "label": "Create prescription", "isController": false}, {"data": [[1.71673392E12, 0.0]], "isOverall": false, "label": "Release drug", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673392E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1941.0, "minX": 1.71673392E12, "maxY": 6069.0, "series": [{"data": [[1.71673392E12, 6069.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71673392E12, 1941.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71673392E12, 5372.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71673392E12, 6037.38]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71673392E12, 3146.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71673392E12, 5474.099999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673392E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1830.5, "minX": 25.0, "maxY": 5262.0, "series": [{"data": [[256.0, 2456.0], [155.0, 5262.0], [210.0, 4951.5], [119.0, 2647.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[256.0, 1865.0], [286.0, 2368.5], [287.0, 2135.0], [35.0, 2044.0], [299.0, 2851.0], [155.0, 5081.0], [25.0, 5025.0], [101.0, 3568.0], [210.0, 4641.5], [114.0, 2093.5], [113.0, 2069.0], [119.0, 1830.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 299.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1825.5, "minX": 25.0, "maxY": 5112.0, "series": [{"data": [[256.0, 2453.5], [155.0, 5112.0], [210.0, 4940.5], [119.0, 2637.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[256.0, 1857.5], [286.0, 2368.5], [287.0, 2135.0], [35.0, 2044.0], [299.0, 2851.0], [155.0, 5078.5], [25.0, 5024.0], [101.0, 3568.0], [210.0, 4633.5], [114.0, 2093.5], [113.0, 2069.0], [119.0, 1825.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 299.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.71673392E12, "maxY": 33.333333333333336, "series": [{"data": [[1.71673392E12, 33.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673392E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.2, "minX": 1.71673392E12, "maxY": 30.133333333333333, "series": [{"data": [[1.71673392E12, 3.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71673392E12, 30.133333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71673392E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.5833333333333333, "minX": 1.71673392E12, "maxY": 6.666666666666667, "series": [{"data": [[1.71673392E12, 5.083333333333333]], "isOverall": false, "label": "Get all patients-failure", "isController": false}, {"data": [[1.71673392E12, 1.5833333333333333]], "isOverall": false, "label": "Get all patients-success", "isController": false}, {"data": [[1.71673392E12, 6.666666666666667]], "isOverall": false, "label": "Create prescription-failure", "isController": false}, {"data": [[1.71673392E12, 5.05]], "isOverall": false, "label": "Create Doctor-failure", "isController": false}, {"data": [[1.71673392E12, 6.666666666666667]], "isOverall": false, "label": "Release drug-failure", "isController": false}, {"data": [[1.71673392E12, 1.6166666666666667]], "isOverall": false, "label": "Create Doctor-success", "isController": false}, {"data": [[1.71673392E12, 6.666666666666667]], "isOverall": false, "label": "Create patient-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673392E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.2, "minX": 1.71673392E12, "maxY": 30.133333333333333, "series": [{"data": [[1.71673392E12, 3.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71673392E12, 30.133333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71673392E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

